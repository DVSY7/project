{"ast":null,"code":"// 날짜를 한국어 형식으로 포멧\nexport function formatDateKorean(dateStr){const date=new Date(dateStr);return date.toLocaleDateString('ko-KR',{year:\"numeric\",month:\"2-digit\",day:\"2-digit\",weekday:\"long\"});}// 시간을 한국시간:분 으로 변환\nexport function formatDateTime(dateStr){const date=new Date(dateStr);return date.toLocaleTimeString(\"ko-KR\",{hour:'2-digit',minute:'2-digit',hour12:true});}export const insertDateHeaders=messages=>{const newMessages=[];let lastDate=null;messages.forEach(msg=>{const timestamp=msg===null||msg===void 0?void 0:msg.datetime;if(!timestamp||typeof timestamp!==\"string\"){// 무시하거나 기본값 사용\nnewMessages.push(msg);return;}const date=new Date(timestamp).toISOString().slice(0,10);if(date!==lastDate){newMessages.push({type:\"date-stamp\",date});lastDate=date;}newMessages.push(msg);});console.log(\"newMessages\",newMessages);return newMessages;};","map":{"version":3,"names":["formatDateKorean","dateStr","date","Date","toLocaleDateString","year","month","day","weekday","formatDateTime","toLocaleTimeString","hour","minute","hour12","insertDateHeaders","messages","newMessages","lastDate","forEach","msg","timestamp","datetime","push","toISOString","slice","type","console","log"],"sources":["C:/git/project/client/src/componant/community/utilities/dateUtils.js"],"sourcesContent":["// 날짜를 한국어 형식으로 포멧\r\nexport function formatDateKorean(dateStr){\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString('ko-KR', {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        weekday: \"long\",\r\n    });\r\n}\r\n\r\n// 시간을 한국시간:분 으로 변환\r\nexport function formatDateTime(dateStr){\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleTimeString(\"ko-KR\",{\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: true\r\n        });\r\n}\r\n\r\nexport const insertDateHeaders = (messages) => {\r\n  const newMessages = [];\r\n  let lastDate = null;\r\n\r\n\r\n  messages.forEach((msg) => {\r\n    const timestamp = msg?.datetime;\r\n    if (!timestamp || typeof timestamp !== \"string\") {\r\n      // 무시하거나 기본값 사용\r\n      newMessages.push(msg);\r\n      return;\r\n    }\r\n\r\n    const date = new Date(timestamp).toISOString().slice(0,10);\r\n    if (date !== lastDate) {\r\n      newMessages.push({ type: \"date-stamp\", date });\r\n      lastDate = date;\r\n    }\r\n    newMessages.push(msg);\r\n  });\r\n\r\n  console.log(\"newMessages\",newMessages);\r\n  return newMessages;\r\n};"],"mappings":"AAAA;AACA,MAAO,SAAS,CAAAA,gBAAgBA,CAACC,OAAO,CAAC,CACrC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,OAAO,CAAC,CAC9B,MAAO,CAAAC,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAE,CACpCC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,SAAS,CAChBC,GAAG,CAAE,SAAS,CACdC,OAAO,CAAE,MACb,CAAC,CAAC,CACN,CAEA;AACA,MAAO,SAAS,CAAAC,cAAcA,CAACR,OAAO,CAAC,CACnC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,OAAO,CAAC,CAC9B,MAAO,CAAAC,IAAI,CAACQ,kBAAkB,CAAC,OAAO,CAAC,CACnCC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACR,CAAC,CAAC,CACV,CAEA,MAAO,MAAM,CAAAC,iBAAiB,CAAIC,QAAQ,EAAK,CAC7C,KAAM,CAAAC,WAAW,CAAG,EAAE,CACtB,GAAI,CAAAC,QAAQ,CAAG,IAAI,CAGnBF,QAAQ,CAACG,OAAO,CAAEC,GAAG,EAAK,CACxB,KAAM,CAAAC,SAAS,CAAGD,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEE,QAAQ,CAC/B,GAAI,CAACD,SAAS,EAAI,MAAO,CAAAA,SAAS,GAAK,QAAQ,CAAE,CAC/C;AACAJ,WAAW,CAACM,IAAI,CAACH,GAAG,CAAC,CACrB,OACF,CAEA,KAAM,CAAAjB,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACiB,SAAS,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAC1D,GAAItB,IAAI,GAAKe,QAAQ,CAAE,CACrBD,WAAW,CAACM,IAAI,CAAC,CAAEG,IAAI,CAAE,YAAY,CAAEvB,IAAK,CAAC,CAAC,CAC9Ce,QAAQ,CAAGf,IAAI,CACjB,CACAc,WAAW,CAACM,IAAI,CAACH,GAAG,CAAC,CACvB,CAAC,CAAC,CAEFO,OAAO,CAACC,GAAG,CAAC,aAAa,CAACX,WAAW,CAAC,CACtC,MAAO,CAAAA,WAAW,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}