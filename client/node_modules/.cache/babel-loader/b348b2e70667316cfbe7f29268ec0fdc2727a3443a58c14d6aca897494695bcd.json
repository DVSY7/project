{"ast":null,"code":"// client/src/componant/routes/NaverRedirectPage.js\nimport{useEffect,useRef}from\"react\";import{useSearchParams}from\"react-router-dom\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export default function NaverRedirectPage(){const[searchParams]=useSearchParams();const calledRef=useRef(false);useEffect(()=>{const code=searchParams.get('code');const state=searchParams.get('state');console.log('네이버에서 받은 code:',code);console.log('네이버에서 받은 state:',state);if(code&&state&&!calledRef.current){calledRef.current=true;const getNaverToken=async()=>{try{const response=await axios.post('http://localhost:5000/auth/naver/token',{code,state});console.log(\"네이버 토큰 응답:\",response.data.token);localStorage.setItem(\"token\",response.data.token);window.location.href='/home';}catch(error){if(error.status===409){alert(\"이미 등록된 사용자 입니다. 로그인을 진행해주세요.\");window.location.href='/';}console.error(\"네이버 토큰 요청 실패:\",error);}};getNaverToken();}},[searchParams]);return/*#__PURE__*/_jsx(\"div\",{children:\"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911\\uC785\\uB2C8\\uB2E4...\"});}","map":{"version":3,"names":["useEffect","useRef","useSearchParams","axios","jsx","_jsx","NaverRedirectPage","searchParams","calledRef","code","get","state","console","log","current","getNaverToken","response","post","data","token","localStorage","setItem","window","location","href","error","status","alert","children"],"sources":["C:/git/project/client/src/componant/routes/naverRedirectPage.js"],"sourcesContent":["// client/src/componant/routes/NaverRedirectPage.js\r\n\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function NaverRedirectPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const calledRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const code = searchParams.get('code');\r\n    const state = searchParams.get('state');\r\n    console.log('네이버에서 받은 code:', code);\r\n    console.log('네이버에서 받은 state:', state);\r\n\r\n    if (code && state && !calledRef.current) {\r\n      calledRef.current = true;\r\n\r\n      const getNaverToken = async () => {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/auth/naver/token', {\r\n            code,\r\n            state,\r\n          });\r\n\r\n          console.log(\"네이버 토큰 응답:\", response.data.token);\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          window.location.href = '/home';\r\n        } catch (error) {\r\n          if(error.status === 409){\r\n            alert(\"이미 등록된 사용자 입니다. 로그인을 진행해주세요.\");\r\n            window.location.href='/';\r\n          }\r\n          console.error(\"네이버 토큰 요청 실패:\", error);\r\n        }\r\n      };\r\n\r\n      getNaverToken();\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return <div>네이버 로그인 처리 중입니다...</div>;\r\n}\r\n"],"mappings":"AAAA;AAEA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OAASC,eAAe,KAAQ,kBAAkB,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAG,CAC1C,KAAM,CAACC,YAAY,CAAC,CAAGL,eAAe,CAAC,CAAC,CACxC,KAAM,CAAAM,SAAS,CAAGP,MAAM,CAAC,KAAK,CAAC,CAE/BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,IAAI,CAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,CACrC,KAAM,CAAAC,KAAK,CAAGJ,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC,CACvCE,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEJ,IAAI,CAAC,CACnCG,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,KAAK,CAAC,CAErC,GAAIF,IAAI,EAAIE,KAAK,EAAI,CAACH,SAAS,CAACM,OAAO,CAAE,CACvCN,SAAS,CAACM,OAAO,CAAG,IAAI,CAExB,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAb,KAAK,CAACc,IAAI,CAAC,wCAAwC,CAAE,CAC1ER,IAAI,CACJE,KACF,CAAC,CAAC,CAEFC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAEG,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAClDG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,OAAO,CAChC,CAAE,MAAOC,KAAK,CAAE,CACd,GAAGA,KAAK,CAACC,MAAM,GAAK,GAAG,CAAC,CACtBC,KAAK,CAAC,8BAA8B,CAAC,CACrCL,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,GAAG,CAC1B,CACAZ,OAAO,CAACa,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACvC,CACF,CAAC,CAEDV,aAAa,CAAC,CAAC,CACjB,CACF,CAAC,CAAE,CAACR,YAAY,CAAC,CAAC,CAElB,mBAAOF,IAAA,QAAAuB,QAAA,CAAK,gFAAkB,CAAK,CAAC,CACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}