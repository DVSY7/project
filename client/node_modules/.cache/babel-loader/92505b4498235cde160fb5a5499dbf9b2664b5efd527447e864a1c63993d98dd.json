{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\routes\\\\naverRedirectPage.js\",\n  _s = $RefreshSig$();\n// client/src/componant/routes/NaverRedirectPage.js\n\nimport { useEffect, useRef } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NaverRedirectPage() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const calledRef = useRef(false);\n  useEffect(() => {\n    const code = searchParams.get('code');\n    const state = searchParams.get('state');\n    console.log('네이버에서 받은 code:', code);\n    console.log('네이버에서 받은 state:', state);\n    if (code && state && !calledRef.current) {\n      calledRef.current = true;\n      const getNaverToken = async () => {\n        try {\n          const response = await axios.post('http://localhost:5000/auth/naver/token', {\n            code,\n            state\n          });\n          console.log(\"네이버 토큰 응답:\", response.data.token);\n          localStorage.setItem(\"token\", response.data.token);\n          window.location.href = '/home';\n        } catch (error) {\n          if (error.status === 409) {\n            alert(\"이미 등록된 사용자 입니다. 로그인을 진행해주세요.\");\n            window.location.href = '/';\n          }\n          console.error(\"네이버 토큰 요청 실패:\", error);\n        }\n      };\n      getNaverToken();\n    }\n  }, [searchParams]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n}\n_s(NaverRedirectPage, \"bZyRXKeZTS4SeINRM/KFe3ouiJ8=\", false, function () {\n  return [useSearchParams];\n});\n_c = NaverRedirectPage;\nvar _c;\n$RefreshReg$(_c, \"NaverRedirectPage\");","map":{"version":3,"names":["useEffect","useRef","useSearchParams","axios","jsxDEV","_jsxDEV","NaverRedirectPage","_s","searchParams","calledRef","code","get","state","console","log","current","getNaverToken","response","post","data","token","localStorage","setItem","window","location","href","error","status","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/routes/naverRedirectPage.js"],"sourcesContent":["// client/src/componant/routes/NaverRedirectPage.js\r\n\r\nimport { useEffect, useRef } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function NaverRedirectPage() {\r\n  const [searchParams] = useSearchParams();\r\n  const calledRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const code = searchParams.get('code');\r\n    const state = searchParams.get('state');\r\n    console.log('네이버에서 받은 code:', code);\r\n    console.log('네이버에서 받은 state:', state);\r\n\r\n    if (code && state && !calledRef.current) {\r\n      calledRef.current = true;\r\n\r\n      const getNaverToken = async () => {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/auth/naver/token', {\r\n            code,\r\n            state,\r\n          });\r\n\r\n          console.log(\"네이버 토큰 응답:\", response.data.token);\r\n          localStorage.setItem(\"token\", response.data.token);\r\n          window.location.href = '/home';\r\n        } catch (error) {\r\n          if(error.status === 409){\r\n            alert(\"이미 등록된 사용자 입니다. 로그인을 진행해주세요.\");\r\n            window.location.href='/';\r\n          }\r\n          console.error(\"네이버 토큰 요청 실패:\", error);\r\n        }\r\n      };\r\n\r\n      getNaverToken();\r\n    }\r\n  }, [searchParams]);\r\n\r\n  return <div>네이버 로그인 처리 중입니다...</div>;\r\n}\r\n"],"mappings":";;AAAA;;AAEA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,eAAe,QAAQ,kBAAkB;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,CAAC,GAAGN,eAAe,CAAC,CAAC;EACxC,MAAMO,SAAS,GAAGR,MAAM,CAAC,KAAK,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACd,MAAMU,IAAI,GAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC;IACrC,MAAMC,KAAK,GAAGJ,YAAY,CAACG,GAAG,CAAC,OAAO,CAAC;IACvCE,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;IACnCG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IAErC,IAAIF,IAAI,IAAIE,KAAK,IAAI,CAACH,SAAS,CAACM,OAAO,EAAE;MACvCN,SAAS,CAACM,OAAO,GAAG,IAAI;MAExB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;QAChC,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,wCAAwC,EAAE;YAC1ER,IAAI;YACJE;UACF,CAAC,CAAC;UAEFC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEG,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;UAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;UAClDG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;QAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd,IAAGA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAC;YACtBC,KAAK,CAAC,8BAA8B,CAAC;YACrCL,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAC,GAAG;UAC1B;UACAZ,OAAO,CAACa,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;QACvC;MACF,CAAC;MAEDV,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACR,YAAY,CAAC,CAAC;EAElB,oBAAOH,OAAA;IAAAwB,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACtC;AAAC1B,EAAA,CArCuBD,iBAAiB;EAAA,QAChBJ,eAAe;AAAA;AAAAgC,EAAA,GADhB5B,iBAAiB;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}