{"ast":null,"code":"// 날짜를 한국어 형식으로 포멧\nexport function formatDateKorean(dateStr) {\n  const date = new Date(dateStr);\n  return date.toLocaleDateString('ko-KR', {\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    weekday: \"long\"\n  });\n}\n\n// 시간을 한국시간:분 으로 변환\nexport function formatDateTime(dateStr) {\n  const date = new Date(dateStr);\n  return date.toLocaleTimeString(\"ko-KR\", {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  });\n}\nexport const insertDateHeaders = messages => {\n  const newMessages = [];\n  let lastDate = null;\n  messages.forEach(msg => {\n    const timestamp = msg === null || msg === void 0 ? void 0 : msg.datetime;\n    if (!timestamp || typeof timestamp !== \"string\") {\n      // 무시하거나 기본값 사용\n      newMessages.push(msg);\n      return;\n    }\n    const date = new Date(timestamp).toISOString().slice(0, 10);\n    if (date !== lastDate) {\n      newMessages.push({\n        type: \"date-stamp\",\n        date\n      });\n      lastDate = date;\n    }\n    newMessages.push(msg);\n  });\n  console.log(\"newMessages\", newMessages);\n  return newMessages;\n};","map":{"version":3,"names":["formatDateKorean","dateStr","date","Date","toLocaleDateString","year","month","day","weekday","formatDateTime","toLocaleTimeString","hour","minute","hour12","insertDateHeaders","messages","newMessages","lastDate","forEach","msg","timestamp","datetime","push","toISOString","slice","type","console","log"],"sources":["C:/git/project/client/src/componant/community/utilities/dateUtils.js"],"sourcesContent":["// 날짜를 한국어 형식으로 포멧\r\nexport function formatDateKorean(dateStr){\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleDateString('ko-KR', {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        weekday: \"long\",\r\n    });\r\n}\r\n\r\n// 시간을 한국시간:분 으로 변환\r\nexport function formatDateTime(dateStr){\r\n    const date = new Date(dateStr);\r\n    return date.toLocaleTimeString(\"ko-KR\",{\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        hour12: true\r\n        });\r\n}\r\n\r\nexport const insertDateHeaders = (messages) => {\r\n  const newMessages = [];\r\n  let lastDate = null;\r\n\r\n\r\n  messages.forEach((msg) => {\r\n    const timestamp = msg?.datetime;\r\n    if (!timestamp || typeof timestamp !== \"string\") {\r\n      // 무시하거나 기본값 사용\r\n      newMessages.push(msg);\r\n      return;\r\n    }\r\n\r\n    const date = new Date(timestamp).toISOString().slice(0,10);\r\n    if (date !== lastDate) {\r\n      newMessages.push({ type: \"date-stamp\", date });\r\n      lastDate = date;\r\n    }\r\n    newMessages.push(msg);\r\n  });\r\n\r\n  console.log(\"newMessages\",newMessages);\r\n  return newMessages;\r\n};"],"mappings":"AAAA;AACA,OAAO,SAASA,gBAAgBA,CAACC,OAAO,EAAC;EACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;IACpCC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,SAAS;IACdC,OAAO,EAAE;EACb,CAAC,CAAC;AACN;;AAEA;AACA,OAAO,SAASC,cAAcA,CAACR,OAAO,EAAC;EACnC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;EAC9B,OAAOC,IAAI,CAACQ,kBAAkB,CAAC,OAAO,EAAC;IACnCC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACR,CAAC,CAAC;AACV;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,QAAQ,IAAK;EAC7C,MAAMC,WAAW,GAAG,EAAE;EACtB,IAAIC,QAAQ,GAAG,IAAI;EAGnBF,QAAQ,CAACG,OAAO,CAAEC,GAAG,IAAK;IACxB,MAAMC,SAAS,GAAGD,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEE,QAAQ;IAC/B,IAAI,CAACD,SAAS,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;MAC/C;MACAJ,WAAW,CAACM,IAAI,CAACH,GAAG,CAAC;MACrB;IACF;IAEA,MAAMjB,IAAI,GAAG,IAAIC,IAAI,CAACiB,SAAS,CAAC,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;IAC1D,IAAItB,IAAI,KAAKe,QAAQ,EAAE;MACrBD,WAAW,CAACM,IAAI,CAAC;QAAEG,IAAI,EAAE,YAAY;QAAEvB;MAAK,CAAC,CAAC;MAC9Ce,QAAQ,GAAGf,IAAI;IACjB;IACAc,WAAW,CAACM,IAAI,CAACH,GAAG,CAAC;EACvB,CAAC,CAAC;EAEFO,OAAO,CAACC,GAAG,CAAC,aAAa,EAACX,WAAW,CAAC;EACtC,OAAOA,WAAW;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}