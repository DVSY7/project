{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\content\\\\gallery.js\",\n  _s = $RefreshSig$();\nimport Masonry from 'react-masonry-css';\nimport { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Gallery(props) {\n  _s();\n  // 갤러리를 마운트한 페이지의 src\n  const {\n    src\n  } = props;\n  const breakpointColumnsObj = {\n    default: src === \"profile\" ? 3 : 5,\n    1536: src === \"profile\" ? 3 : 5,\n    1280: src === \"profile\" ? 2 : 4,\n    1024: src === \"profile\" ? 1 : 3,\n    768: src === \"profile\" ? 1 : 2,\n    640: src === \"profile\" ? 1 : 1\n  };\n  const [items, setItems] = useState([...Array(30).keys()]);\n  const observerRef = useRef(null);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    const target = observerRef.current; // 💡 여기에 저장\n    if (!target) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setItems(prev => prev.concat(Array.from({\n          length: 15\n        }, (_, i) => prev.length + i)));\n      }\n    }, {\n      root: null,\n      rootMargin: '0px',\n      threshold: 1.0\n    });\n    observer.observe(target);\n    return () => {\n      observer.unobserve(target); // ✅ 안정적으로 cleanup\n    };\n  }, [items, windowWidth]); // ← 이건 유지해도 됨\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` h-[100%] sm:h-[100%] sm:overflow-y-auto overflow-x-hidden sm:p-4 sm:pr-8 ${src === \"profile\" ? \"sm:w-[50%]\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Masonry, {\n        breakpointCols: breakpointColumnsObj,\n        className: \"hidden sm:flex gap-5\",\n        columnClassName: \"flex flex-col gap-5\",\n        children: [items.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bg-red-500 rounded-2xl text-white text-center ${i % 3 === 1 ? 'h-[500px]' : i % 3 === 2 ? 'h-[400px]' : 'h-[300px]'}`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-full h-full object-cover rounded-2xl\",\n            src: `/images/이미지 (${i + 1}).jpg`,\n            alt: \"\\uC774\\uBBF8\\uC9C0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: observerRef,\n          className: \"h-]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block sm:hidden h-full overflow-y-auto overflow-x-hidden\",\n        children: Array.from({\n          length: 100\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-200 h-[500px] w-screen \",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-full h-full object-cover\",\n              src: `/images/이미지 (${i + 1}).jpg`,\n              alt: \"\\uC774\\uBBF8\\uC9C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" h-[23vh] w-screen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Gallery, \"8W3bZg2tLGB+pusES5U8+cwS+V0=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["Masonry","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Gallery","props","_s","src","breakpointColumnsObj","default","items","setItems","Array","keys","observerRef","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","target","current","observer","IntersectionObserver","entry","isIntersecting","prev","concat","from","length","_","i","root","rootMargin","threshold","observe","unobserve","children","className","breakpointCols","columnClassName","map","alt","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/content/gallery.js"],"sourcesContent":["import Masonry from 'react-masonry-css';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nexport default function Gallery(props) {\r\n\r\n  // 갤러리를 마운트한 페이지의 src\r\n  const { src } = props;\r\n\r\n  const breakpointColumnsObj = {\r\n    default: src === \"profile\" ? 3 : 5,\r\n    1536: src === \"profile\" ? 3 : 5,\r\n    1280: src === \"profile\" ? 2 : 4,\r\n    1024: src === \"profile\" ? 1 : 3,\r\n    768: src === \"profile\" ? 1 : 2,\r\n    640: src === \"profile\" ? 1 : 1,\r\n  };\r\n\r\n  const [items, setItems] = useState([...Array(30).keys()]);\r\n  const observerRef = useRef(null);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const target = observerRef.current; // 💡 여기에 저장\r\n    if (!target) return;\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        if (entry.isIntersecting) {\r\n          setItems((prev) =>\r\n            prev.concat(Array.from({ length: 15 }, (_, i) => prev.length + i))\r\n          );\r\n        }\r\n      },\r\n      {\r\n        root: null,\r\n        rootMargin: '0px',\r\n        threshold: 1.0,\r\n      }\r\n    );\r\n\r\n    observer.observe(target);\r\n\r\n    return () => {\r\n      observer.unobserve(target); // ✅ 안정적으로 cleanup\r\n    };\r\n  }, [items, windowWidth]); // ← 이건 유지해도 됨\r\n\r\n  return (\r\n    <>\r\n      <div className={` h-[100%] sm:h-[100%] sm:overflow-y-auto overflow-x-hidden sm:p-4 sm:pr-8 ${src === \"profile\" ? \"sm:w-[50%]\" : \"\"}`}>\r\n        {/* ✅ PC화면 무한스크롤 */}\r\n        <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"hidden sm:flex gap-5\"\r\n          columnClassName=\"flex flex-col gap-5\"\r\n        >\r\n          {items.map((i) => (\r\n            <div\r\n              key={i}\r\n              className={`bg-red-500 rounded-2xl text-white text-center ${i % 3 === 1\r\n                  ? 'h-[500px]'\r\n                  : i % 3 === 2\r\n                    ? 'h-[400px]'\r\n                    : 'h-[300px]'\r\n                }`}\r\n            >\r\n              <img\r\n                className=\"w-full h-full object-cover rounded-2xl\"\r\n                src={`/images/이미지 (${i + 1}).jpg`}\r\n                alt=\"이미지\"\r\n              ></img>\r\n            </div>\r\n          ))}\r\n          {/* 👇 무한 스크롤 감시 대상 요소 */}\r\n          <div ref={observerRef} className=\"h-]\" />\r\n        </Masonry>\r\n\r\n        {/* ✅ 모바일화면 고정 리스트 */}\r\n        <div className=\"block sm:hidden h-full overflow-y-auto overflow-x-hidden\">\r\n          {Array.from({ length: 100 }, (_, i) => (\r\n            <div key={i}>\r\n              <div className=\"bg-gray-200 h-[500px] w-screen \">\r\n                <img\r\n                  className=\"w-full h-full object-cover\"\r\n                  src={`/images/이미지 (${i + 1}).jpg`}\r\n                  alt=\"이미지\"\r\n                ></img>\r\n              </div>\r\n              <div className=\" h-[23vh] w-screen\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}