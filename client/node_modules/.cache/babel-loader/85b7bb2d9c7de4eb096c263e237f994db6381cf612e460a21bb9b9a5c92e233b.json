{"ast":null,"code":"import\"../../App.css\";import{Link,useSearchParams}from\"react-router-dom\";import{useState,useEffect}from\"react\";import{search}from\"./utilities/search\";import SearchCategory from\"./ui/searchCategory\";import{SearchModal}from\"./ui/searchModal\";import{fetchSearchModal}from\"./api/search\";import{fetchUserInfo}from\"../community/api/fetchUserInfo\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Header(props){var _userInfo$0$profile_i,_userInfo$;// 플렉스 상태 아이템 중앙\nconst item_center=\"flex items-center justify-center\";// 로그인관련 옵션 버튼 호버\nconst button_hover=\"hover:bg-gray-200\";// 토큰에서 검증된 유저이름\nconst{name,username,setSort,setSearchUser,src}=props;// 로그인한 유저 정보\nconst[userInfo,setUserInfo]=useState([]);// url 파라미터 조작\nconst[searchParams,setSearchParams]=useSearchParams();// 로그인 로그아웃 상태관리 스테이트\nconst[Token,setToken]=useState(null);// 검색창 이미지 변경 스테이트\nconst[searchImage,setSearchImage]=useState(true);// 검색 옵션 상태관리 스테이트\nconst[searchCategory,setSearchCategory]=useState(false);// 검색 옵션선택 상태관리 스테이트\nconst[selectedCategory,setSelectedCategory]=useState(\"최신순\");// 컴포넌트가 마운트될 때 토큰 가져오기\nuseEffect(()=>{const storedToken=localStorage.getItem('token');if(storedToken&&storedToken!=='null'){setToken(storedToken);}},[]);;// 검색창 정보를 관리하는 스테이트\nconst[searchValues,setSearchValues]=useState(\"\");// 검색창 모달 정보 상태관리\nconst[searchModalValues,setSearchModalValues]=useState([{name:\"\"},{username:\"\"},{profile_image:\"\"}]);// 해쉬태그를 저장하는 스테이트\nconst[searchHashtags,setSearchHashtags]=useState([]);// 이후 추가적으로 해쉬태그 저장배열을 통해서 데이터베이스에\n// 데이터를 요청하는 작업수행 <<< 이곳에\n// 해쉬태그 분리 함수\nconst handleTags=tags=>{// #을 기준으로 태그를 분리\nconst parseHashtags=tags.split('#')// #을 기준으로 분리\n.filter(Boolean)// 빈 값을 필터링\n.map(word=>word.trim());// 각 단어에서 앞뒤 공백 제거\nsetSearchHashtags(prevTags=>{const validTags=[];let hasInvalidTag=false;parseHashtags.forEach(tag=>{// 태그 길이가 20자를 초과하면 유효하지 않음\nif(tag.length>0&&tag.length<=20&&/^[a-zA-Z0-9가-힣\\s]+$/.test(tag)&&!prevTags.includes(tag)){validTags.push(tag);// 유효한 태그만 추가\n}else{hasInvalidTag=true;// 유효하지 않은 태그가 있으면 알림 표시\n}});// 유효하지 않은 태그가 있으면 알림 띄우기\nif(hasInvalidTag){alert('모든 태그는 \"#\"으로 시작해야 하며, 특수문자 외에 띄어쓰기는 허용됩니다. 또한, 태그의 길이는 20자 이하이어야 합니다.');}// 유효한 태그만 반환\nreturn[...prevTags,...validTags];});};useEffect(()=>{// console.log(searchHashtags);\nsearch(searchHashtags);},[searchHashtags]);useEffect(()=>{const getUserInfo=async name=>{const res=await fetchUserInfo(name);if(res){setUserInfo(res);}};if(name){getUserInfo(name);}},[name]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex sm:flex-col sm:justify-center sm:items-center h-[15%] sm:h-[15%] max-w-[1920px] sm:relative\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"hidden sm:flex sm:item-center sm:w-full max-w-[1920px] sm:h-[40px]\",children:[/*#__PURE__*/_jsx(\"div\",{className:`absolute w-9 mx-8 mt-[0.45rem] right-search-line-after`,children:/*#__PURE__*/_jsx(\"img\",{src:`/images/${searchImage?\"유저검색\":\"태그검색\"}.png`,alt:\"\\uAC80\\uC0C9\\uCC3D \\uC774\\uBBF8\\uC9C0\",className:\"w-[25px] h-[25px] z-10 relative cursor-pointer opacity-50 hover:opacity-100  transition-o duration-500\",onClick:()=>{searchImage?setSearchImage(false):setSearchImage(true);console.log(searchImage);}})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"search\",name:\"search\",className:\"h-full w-[77%] pl-16 rounded-full mx-5 shadow-lg border-[1px] border-gray-400 font-sans\",value:searchValues,placeholder:`${searchImage?\"유저 검색 (아이콘을 눌러 전환)\":\"태그 검색 (아이콘을 눌러 전환)\"}`// 인풋란에 입력값이 들어올때 마다 상태 업데이트\n,onChange:async e=>{// 검색 값 업데이트\nsetSearchValues(e.target.value);// 검색 모달 값 업데이트\nconst searchModalInfo=await fetchSearchModal(e.target.value);setSearchModalValues(searchModalInfo);console.log(\"검색된 유저\",searchModalInfo);}// 엔터를 눌러서도 검색이 가능하도록 변경\n,onKeyDown:e=>{if(e.key==='Enter'&&src!==\"/profile\"){if(!searchImage){handleTags(searchValues);setSearchValues(\"\");}else{search(searchValues);setSearchUser(searchValues);setSearchValues(\"\");}}else if(e.key===\"Enter\"&&src===\"/profile\"){alert(\"프로필의 경우 하나의 대상만 선택해주세요.\");}}}),/*#__PURE__*/_jsx(SearchModal,{setSearchUser:setSearchUser,setSearchValues:setSearchValues,searchModalValues:searchModalValues,searchValues:searchValues}),/*#__PURE__*/_jsx(\"img\",{src:\"/images/\\uAC80\\uC0C9.png\",alt:\"\\uAC80\\uC0C9\",className:`w-[25px] h-[25px] relative right-16 mt-2 opacity-50 hover:opacity-100 transition-opacity duration-300 cursor-pointer `,onClick:()=>{if(!searchImage){handleTags(searchValues);setSearchValues(\"\");}else{// 여기에 데이터베이스에 데이터 요청하는 코드작성\nsearch(searchValues);setSearchUser(searchValues);setSearchValues(\"\");}}}),/*#__PURE__*/_jsx(\"div\",{className:`${item_center} ${Token!==null?\"hidden\":\"\"} h-full w-[100px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ml-16 mr-5 ${button_hover}`,children:/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"\\uB85C\\uADF8\\uC778\"})}),/*#__PURE__*/_jsx(\"div\",{className:`${item_center} ${Token!==null?\"hidden\":\"\"} h-full w-[120px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ${button_hover}`,children:/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})}),/*#__PURE__*/_jsx(\"div\",{className:`flex items-center ${Token===null?\"hidden\":\"\"} w-[300px] text-[20px] ml-auto mr-14`,children:/*#__PURE__*/_jsxs(\"p\",{onClick:()=>{console.log(\"함수가 동작합니다.\");if(src===\"/profile\"){searchParams.set(\"username\",userInfo[0].name);searchParams.set(\"userID\",userInfo[0].friend_id);setSearchParams(searchParams);}},className:` flex justify-end items-center text-end font-sans font-bold ml-auto cursor-pointer`,children:[/*#__PURE__*/_jsx(\"img\",{src:`${(_userInfo$0$profile_i=(_userInfo$=userInfo[0])===null||_userInfo$===void 0?void 0:_userInfo$.profile_image_url)!==null&&_userInfo$0$profile_i!==void 0?_userInfo$0$profile_i:\"images/미니프로필.png\"}`,alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",className:`w-[40px] h-[40px] mr-2 rounded-[50%] aspect-square`}),username]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"hidden sm:flex sm:items-end sm:ml-12 sm:w-full max-w-[1920px] h-[30%] max-h-[30%]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex font-sans italic max-h-full overflow-y-auto\",children:searchHashtags.map(tags=>{return/*#__PURE__*/_jsxs(\"div\",{className:`flex justify-center items-center ml-2 bg-gray-200 p-1 px-2 rounded-2xl cursor-pointer`,onClick:()=>{// 클릭된 태그를 배열에서 제거하는 함수\nsetSearchHashtags(prevTags=>prevTags.filter(tag=>tag!==tags));},children:[\"#\",tags,/*#__PURE__*/_jsx(\"img\",{src:\"/images/\\uC5D1\\uC2A4\\uD45C\\uC2DC.png\",alt:\"\\uC5D1\\uC2A4\\uD45C\\uC2DC\",className:`w-4 h-4 ml-1 opacity-50`})]},tags);})}),src!==3&&/*#__PURE__*/_jsxs(\"div\",{onClick:e=>{setSearchCategory(prev=>!prev);},className:'font-sans text-[12px] text-gray-500 ml-auto mr-20 relative cursor-pointer',children:[selectedCategory,\"\\u25BC\",searchCategory&&/*#__PURE__*/_jsx(SearchCategory,{onSelect:value=>{setSelectedCategory(value);setSearchCategory(false);console.log(\"선택된 정렬 기준:\",value);setSort(value);}})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between sm:hidden h-full w-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-full w-[30vh] text-[30px]\",children:\"BucketMate\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-end mr-4\",children:/*#__PURE__*/_jsx(\"img\",{className:\"w-10 h-10\",src:\"/images/\\uAC80\\uC0C9.png\",alt:\"\\uAC80\\uC0C9\"})})]})]})});}","map":{"version":3,"names":["Link","useSearchParams","useState","useEffect","search","SearchCategory","SearchModal","fetchSearchModal","fetchUserInfo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Header","props","_userInfo$0$profile_i","_userInfo$","item_center","button_hover","name","username","setSort","setSearchUser","src","userInfo","setUserInfo","searchParams","setSearchParams","Token","setToken","searchImage","setSearchImage","searchCategory","setSearchCategory","selectedCategory","setSelectedCategory","storedToken","localStorage","getItem","searchValues","setSearchValues","searchModalValues","setSearchModalValues","profile_image","searchHashtags","setSearchHashtags","handleTags","tags","parseHashtags","split","filter","Boolean","map","word","trim","prevTags","validTags","hasInvalidTag","forEach","tag","length","test","includes","push","alert","getUserInfo","res","children","className","alt","onClick","console","log","type","id","value","placeholder","onChange","e","target","searchModalInfo","onKeyDown","key","to","set","friend_id","profile_image_url","prev","onSelect"],"sources":["C:/git/project/client/src/componant/content/header.js"],"sourcesContent":["import \"../../App.css\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { search } from \"./utilities/search\";\r\nimport SearchCategory from \"./ui/searchCategory\";\r\nimport { SearchModal } from \"./ui/searchModal\";\r\nimport { fetchSearchModal } from \"./api/search\";\r\nimport { fetchUserInfo } from \"../community/api/fetchUserInfo\";\r\n\r\nexport default function Header(props) {\r\n\r\n    // 플렉스 상태 아이템 중앙\r\n    const item_center = \"flex items-center justify-center\";\r\n    // 로그인관련 옵션 버튼 호버\r\n    const button_hover = \"hover:bg-gray-200\";\r\n\r\n    // 토큰에서 검증된 유저이름\r\n    const { name,username,setSort,setSearchUser,src } = props;\r\n\r\n    // 로그인한 유저 정보\r\n    const [userInfo, setUserInfo] = useState([]);\r\n\r\n    // url 파라미터 조작\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    // 로그인 로그아웃 상태관리 스테이트\r\n    const [Token, setToken] = useState(null);\r\n\r\n    // 검색창 이미지 변경 스테이트\r\n    const [searchImage, setSearchImage] = useState(true);\r\n\r\n    // 검색 옵션 상태관리 스테이트\r\n    const [searchCategory, setSearchCategory] = useState(false);\r\n    // 검색 옵션선택 상태관리 스테이트\r\n    const [selectedCategory, setSelectedCategory] = useState(\"최신순\");\r\n\r\n    // 컴포넌트가 마운트될 때 토큰 가져오기\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        if (storedToken && storedToken !== 'null') {\r\n            setToken(storedToken);\r\n        }\r\n    }, []);;\r\n\r\n    // 검색창 정보를 관리하는 스테이트\r\n    const [searchValues, setSearchValues] = useState(\"\");\r\n\r\n    // 검색창 모달 정보 상태관리\r\n    const [searchModalValues, setSearchModalValues] = useState([{name:\"\"},{username:\"\"},{profile_image:\"\"}]);\r\n\r\n    // 해쉬태그를 저장하는 스테이트\r\n    const [searchHashtags, setSearchHashtags] = useState([]);\r\n    // 이후 추가적으로 해쉬태그 저장배열을 통해서 데이터베이스에\r\n    // 데이터를 요청하는 작업수행 <<< 이곳에\r\n\r\n    // 해쉬태그 분리 함수\r\n    const handleTags = (tags) => {\r\n        // #을 기준으로 태그를 분리\r\n        const parseHashtags = tags\r\n            .split('#')  // #을 기준으로 분리\r\n            .filter(Boolean)  // 빈 값을 필터링\r\n            .map(word => word.trim());  // 각 단어에서 앞뒤 공백 제거\r\n\r\n        setSearchHashtags(prevTags => {\r\n            const validTags = [];\r\n            let hasInvalidTag = false;\r\n\r\n            parseHashtags.forEach(tag => {\r\n                // 태그 길이가 20자를 초과하면 유효하지 않음\r\n                if (tag.length > 0 && tag.length <= 20 && /^[a-zA-Z0-9가-힣\\s]+$/.test(tag) && !prevTags.includes(tag)) {\r\n                    validTags.push(tag);  // 유효한 태그만 추가\r\n                } else {\r\n                    hasInvalidTag = true;  // 유효하지 않은 태그가 있으면 알림 표시\r\n                }\r\n            });\r\n\r\n            // 유효하지 않은 태그가 있으면 알림 띄우기\r\n            if (hasInvalidTag) {\r\n                alert('모든 태그는 \"#\"으로 시작해야 하며, 특수문자 외에 띄어쓰기는 허용됩니다. 또한, 태그의 길이는 20자 이하이어야 합니다.');\r\n            }\r\n\r\n            // 유효한 태그만 반환\r\n            return [...prevTags, ...validTags];\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(searchHashtags);\r\n        search(searchHashtags);\r\n    }, [searchHashtags]);\r\n\r\n    useEffect(()=>{\r\n        const getUserInfo = async (name)=>{\r\n            const res = await fetchUserInfo(name);\r\n            if(res){\r\n                setUserInfo(res);\r\n            }\r\n        }\r\n            if(name){\r\n                getUserInfo(name);\r\n            }\r\n    },[name])\r\n\r\n    return (\r\n        <>\r\n            <div className={\"flex sm:flex-col sm:justify-center sm:items-center h-[15%] sm:h-[15%] max-w-[1920px] sm:relative\"}>\r\n                {/* PC화면 기본요소 */}\r\n                <div className={\"hidden sm:flex sm:item-center sm:w-full max-w-[1920px] sm:h-[40px]\"}>\r\n                    <div className={`absolute w-9 mx-8 mt-[0.45rem] right-search-line-after`}>\r\n                        <img\r\n                            src={`/images/${searchImage ? \"유저검색\" : \"태그검색\"}.png`}\r\n                            alt=\"검색창 이미지\"\r\n                            className={\"w-[25px] h-[25px] z-10 relative cursor-pointer opacity-50 hover:opacity-100  transition-o duration-500\"}\r\n                            onClick={() => { searchImage ? setSearchImage(false) : setSearchImage(true); console.log(searchImage) }}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* 검색창 영역 */}\r\n                    <input\r\n                        type='text'\r\n                        id='search'\r\n                        name='search'\r\n                        className={\"h-full w-[77%] pl-16 rounded-full mx-5 shadow-lg border-[1px] border-gray-400 font-sans\"}\r\n                        value={searchValues}\r\n                        placeholder={`${searchImage ? \"유저 검색 (아이콘을 눌러 전환)\" : \"태그 검색 (아이콘을 눌러 전환)\"}`}\r\n\r\n                        // 인풋란에 입력값이 들어올때 마다 상태 업데이트\r\n                        onChange={async (e) => {\r\n                            // 검색 값 업데이트\r\n                            setSearchValues(e.target.value);\r\n                            // 검색 모달 값 업데이트\r\n                            const searchModalInfo = await fetchSearchModal(e.target.value);\r\n                            setSearchModalValues(searchModalInfo);\r\n                            console.log(\"검색된 유저\",searchModalInfo);\r\n                        }}\r\n                        // 엔터를 눌러서도 검색이 가능하도록 변경\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === 'Enter' && src !== \"/profile\") {\r\n                                if (!searchImage) {\r\n                                    handleTags(searchValues);\r\n                                    setSearchValues(\"\");\r\n                                    \r\n                                }else{\r\n                                    search(searchValues);\r\n                                    setSearchUser(searchValues);\r\n                                    setSearchValues(\"\");\r\n                                }\r\n                            }else if(e.key === \"Enter\" && src === \"/profile\") {\r\n                                alert(\"프로필의 경우 하나의 대상만 선택해주세요.\")\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                    {/* 검색 모달 */}\r\n                    {<SearchModal setSearchUser = {setSearchUser} setSearchValues={setSearchValues} searchModalValues={searchModalValues} searchValues={searchValues}/>}\r\n                    <img\r\n                        src=\"/images/검색.png\"\r\n                        alt=\"검색\"\r\n                        className={`w-[25px] h-[25px] relative right-16 mt-2 opacity-50 hover:opacity-100 transition-opacity duration-300 cursor-pointer `}\r\n                        onClick={() => {\r\n                            if (!searchImage) {\r\n                                handleTags(searchValues);\r\n                                setSearchValues(\"\");\r\n                            } else {\r\n\r\n                                // 여기에 데이터베이스에 데이터 요청하는 코드작성\r\n                                search(searchValues);\r\n                                setSearchUser(searchValues);\r\n                                setSearchValues(\"\");\r\n                            }\r\n                        }}\r\n                    ></img>\r\n\r\n                    {/* 비로그인 시 요소 */}\r\n                    <div className={`${item_center} ${Token !== null ? \"hidden\" : \"\"} h-full w-[100px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ml-16 mr-5 ${button_hover}`}><Link to=\"/login\">로그인</Link></div>\r\n                    <div className={`${item_center} ${Token !== null ? \"hidden\" : \"\"} h-full w-[120px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ${button_hover}`}><Link to=\"/signup\">회원가입</Link></div>\r\n\r\n                    {/* 로그인 시 요소 */}\r\n                    <div className={`flex items-center ${Token === null ? \"hidden\" : \"\"} w-[300px] text-[20px] ml-auto mr-14`}>\r\n                        <p \r\n                            onClick={()=>{\r\n                                console.log(\"함수가 동작합니다.\")\r\n                                if(src === \"/profile\"){\r\n                                    searchParams.set(\"username\",userInfo[0].name);\r\n                                    searchParams.set(\"userID\",userInfo[0].friend_id);\r\n                                    setSearchParams(searchParams);\r\n                                }\r\n                            }}\r\n                            className={` flex justify-end items-center text-end font-sans font-bold ml-auto cursor-pointer`}\r\n                        >\r\n                            <img src={`${userInfo[0]?.profile_image_url?? \"images/미니프로필.png\"}`} alt=\"미니프로필\" className={`w-[40px] h-[40px] mr-2 rounded-[50%] aspect-square`} />{username}\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={\"hidden sm:flex sm:items-end sm:ml-12 sm:w-full max-w-[1920px] h-[30%] max-h-[30%]\"}>\r\n\r\n                    {/* 태그요소 랜더링하는 부분 */}\r\n                    <div className={\"flex font-sans italic max-h-full overflow-y-auto\"}>\r\n                        {searchHashtags.map((tags) => {\r\n                            return (\r\n                                <div\r\n                                    key={tags}\r\n                                    className={`flex justify-center items-center ml-2 bg-gray-200 p-1 px-2 rounded-2xl cursor-pointer`}\r\n                                    onClick={() => {\r\n                                        // 클릭된 태그를 배열에서 제거하는 함수\r\n                                        setSearchHashtags((prevTags) => prevTags.filter(tag => tag !== tags));\r\n                                    }}\r\n                                >#{tags}\r\n                                    <img\r\n                                        src=\"/images/엑스표시.png\"\r\n                                        alt=\"엑스표시\"\r\n                                        className={`w-4 h-4 ml-1 opacity-50`}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {src !== 3 &&\r\n                        <div \r\n                        onClick={(e)=>{setSearchCategory(prev => !prev)}}\r\n                        className={'font-sans text-[12px] text-gray-500 ml-auto mr-20 relative cursor-pointer'}>\r\n                            {selectedCategory}▼\r\n                            {searchCategory&& \r\n                                <SearchCategory \r\n                                    onSelect={(value) => {\r\n                                        setSelectedCategory(value);\r\n                                        setSearchCategory(false);\r\n                                        console.log(\"선택된 정렬 기준:\",value);\r\n                                        setSort(value);\r\n                                    }}\r\n                                    \r\n                            />}\r\n                    </div>\r\n                    }\r\n                </div>\r\n\r\n                {/* 모바일화면 기본요소 */}\r\n                <div className={\"flex justify-between sm:hidden h-full w-full\"}>\r\n                    <div className={\"flex justify-center items-center h-full w-[30vh] text-[30px]\"}>BucketMate</div>\r\n                    <div className={\"flex justify-center items-end mr-4\"}>\r\n                        <img className={\"w-10 h-10\"} src=\"/images/검색.png\" alt=\"검색\"></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}