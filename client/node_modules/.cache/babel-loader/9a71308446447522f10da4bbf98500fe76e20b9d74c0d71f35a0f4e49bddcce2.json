{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\content\\\\header.js\",\n  _s = $RefreshSig$();\nimport \"../../App.css\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { search } from \"./utilities/search\";\nimport SearchCategory from \"./ui/searchCategory\";\nimport { SearchModal } from \"./ui/searchModal\";\nimport { fetchSearchModal } from \"./api/search\";\nimport { fetchUserInfo } from \"../community/api/fetchUserInfo\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n  var _userInfo$0$profile_i, _userInfo$;\n  // 플렉스 상태 아이템 중앙\n  const item_center = \"flex items-center justify-center\";\n  // 로그인관련 옵션 버튼 호버\n  const button_hover = \"hover:bg-gray-200\";\n\n  // 토큰에서 검증된 유저이름\n  const {\n    name,\n    username,\n    setSort,\n    setSearchUser,\n    src\n  } = props;\n\n  // 로그인한 유저 정보\n  const [userInfo, setUserInfo] = useState([]);\n\n  // url 파라미터 조작\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  // 로그인 로그아웃 상태관리 스테이트\n  const [Token, setToken] = useState(null);\n\n  // 검색창 이미지 변경 스테이트\n  const [searchImage, setSearchImage] = useState(true);\n\n  // 검색 옵션 상태관리 스테이트\n  const [searchCategory, setSearchCategory] = useState(false);\n  // 검색 옵션선택 상태관리 스테이트\n  const [selectedCategory, setSelectedCategory] = useState(\"최신순\");\n\n  // 컴포넌트가 마운트될 때 토큰 가져오기\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken && storedToken !== 'null') {\n      setToken(storedToken);\n    }\n  }, []);\n  ;\n\n  // 검색창 정보를 관리하는 스테이트\n  const [searchValues, setSearchValues] = useState(\"\");\n\n  // 검색창 모달 정보 상태관리\n  const [searchModalValues, setSearchModalValues] = useState([{\n    name: \"\"\n  }, {\n    username: \"\"\n  }, {\n    profile_image: \"\"\n  }]);\n\n  // 해쉬태그를 저장하는 스테이트\n  const [searchHashtags, setSearchHashtags] = useState([]);\n  // 이후 추가적으로 해쉬태그 저장배열을 통해서 데이터베이스에\n  // 데이터를 요청하는 작업수행 <<< 이곳에\n\n  // 해쉬태그 분리 함수\n  const handleTags = tags => {\n    // #을 기준으로 태그를 분리\n    const parseHashtags = tags.split('#') // #을 기준으로 분리\n    .filter(Boolean) // 빈 값을 필터링\n    .map(word => word.trim()); // 각 단어에서 앞뒤 공백 제거\n\n    setSearchHashtags(prevTags => {\n      const validTags = [];\n      let hasInvalidTag = false;\n      parseHashtags.forEach(tag => {\n        // 태그 길이가 20자를 초과하면 유효하지 않음\n        if (tag.length > 0 && tag.length <= 20 && /^[a-zA-Z0-9가-힣\\s]+$/.test(tag) && !prevTags.includes(tag)) {\n          validTags.push(tag); // 유효한 태그만 추가\n        } else {\n          hasInvalidTag = true; // 유효하지 않은 태그가 있으면 알림 표시\n        }\n      });\n\n      // 유효하지 않은 태그가 있으면 알림 띄우기\n      if (hasInvalidTag) {\n        alert('모든 태그는 \"#\"으로 시작해야 하며, 특수문자 외에 띄어쓰기는 허용됩니다. 또한, 태그의 길이는 20자 이하이어야 합니다.');\n      }\n\n      // 유효한 태그만 반환\n      return [...prevTags, ...validTags];\n    });\n  };\n  useEffect(() => {\n    // console.log(searchHashtags);\n    search(searchHashtags);\n  }, [searchHashtags]);\n  useEffect(() => {\n    const getUserInfo = async name => {\n      const res = await fetchUserInfo(name);\n      if (res) {\n        setUserInfo(res);\n      }\n    };\n    if (name) {\n      getUserInfo(name);\n    }\n  }, [name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex sm:flex-col sm:justify-center sm:items-center h-[15%] sm:h-[15%] max-w-[1920px] sm:relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden sm:flex sm:item-center sm:w-full max-w-[1920px] sm:h-[40px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `absolute w-9 mx-8 mt-[0.45rem] right-search-line-after`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/${searchImage ? \"유저검색\" : \"태그검색\"}.png`,\n            alt: \"\\uAC80\\uC0C9\\uCC3D \\uC774\\uBBF8\\uC9C0\",\n            className: \"w-[25px] h-[25px] z-10 relative cursor-pointer opacity-50 hover:opacity-100  transition-o duration-500\",\n            onClick: () => {\n              searchImage ? setSearchImage(false) : setSearchImage(true);\n              console.log(searchImage);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          name: \"search\",\n          className: \"h-full w-[77%] pl-16 rounded-full mx-5 shadow-lg border-[1px] border-gray-400 font-sans\",\n          value: searchValues,\n          placeholder: `${searchImage ? \"유저 검색 (아이콘을 눌러 전환)\" : \"태그 검색 (아이콘을 눌러 전환)\"}`\n\n          // 인풋란에 입력값이 들어올때 마다 상태 업데이트\n          ,\n          onChange: async e => {\n            // 검색 값 업데이트\n            setSearchValues(e.target.value);\n            // 검색 모달 값 업데이트\n            const searchModalInfo = await fetchSearchModal(e.target.value);\n            setSearchModalValues(searchModalInfo);\n            console.log(\"검색된 유저\", searchModalInfo);\n          }\n          // 엔터를 눌러서도 검색이 가능하도록 변경\n          ,\n          onKeyDown: e => {\n            if (e.key === 'Enter' && src !== \"/profile\") {\n              if (!searchImage) {\n                handleTags(searchValues);\n                setSearchValues(\"\");\n              } else {\n                search(searchValues);\n                setSearchUser(searchValues);\n                setSearchValues(\"\");\n              }\n            } else if (e.key === \"Enter\" && src === \"/profile\") {\n              alert(\"프로필의 경우 하나의 대상만 선택해주세요.\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchModal, {\n          setSearchUser: setSearchUser,\n          setSearchValues: setSearchValues,\n          searchModalValues: searchModalValues,\n          searchValues: searchValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/\\uAC80\\uC0C9.png\",\n          alt: \"\\uAC80\\uC0C9\",\n          className: `w-[25px] h-[25px] relative right-16 mt-2 opacity-50 hover:opacity-100 transition-opacity duration-300 cursor-pointer `,\n          onClick: () => {\n            if (!searchImage) {\n              handleTags(searchValues);\n              setSearchValues(\"\");\n            } else {\n              // 여기에 데이터베이스에 데이터 요청하는 코드작성\n              search(searchValues);\n              setSearchUser(searchValues);\n              setSearchValues(\"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${item_center} ${Token !== null ? \"hidden\" : \"\"} h-full w-[100px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ml-16 mr-5 ${button_hover}`,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 195\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${item_center} ${Token !== null ? \"hidden\" : \"\"} h-full w-[120px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ${button_hover}`,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 184\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-center ${Token === null ? \"hidden\" : \"\"} w-[300px] text-[20px] ml-auto mr-14`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: () => {\n              console.log(\"함수가 동작합니다.\");\n              if (src === \"/profile\") {\n                searchParams.set(\"username\", userInfo[0].name);\n                searchParams.set(\"userID\", userInfo[0].friend_id);\n                setSearchParams(searchParams);\n              }\n            },\n            className: ` flex justify-end items-center text-end font-sans font-bold ml-auto cursor-pointer`,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${(_userInfo$0$profile_i = (_userInfo$ = userInfo[0]) === null || _userInfo$ === void 0 ? void 0 : _userInfo$.profile_image_url) !== null && _userInfo$0$profile_i !== void 0 ? _userInfo$0$profile_i : \"images/미니프로필.png\"}`,\n              alt: \"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",\n              className: `w-[40px] h-[40px] mr-2 rounded-[50%] aspect-square`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden sm:flex sm:items-end sm:ml-12 sm:w-full max-w-[1920px] h-[30%] max-h-[30%]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex font-sans italic max-h-full overflow-y-auto\",\n          children: searchHashtags.map(tags => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex justify-center items-center ml-2 bg-gray-200 p-1 px-2 rounded-2xl cursor-pointer`,\n              onClick: () => {\n                // 클릭된 태그를 배열에서 제거하는 함수\n                setSearchHashtags(prevTags => prevTags.filter(tag => tag !== tags));\n              },\n              children: [\"#\", tags, /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/\\uC5D1\\uC2A4\\uD45C\\uC2DC.png\",\n                alt: \"\\uC5D1\\uC2A4\\uD45C\\uC2DC\",\n                className: `w-4 h-4 ml-1 opacity-50`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 37\n              }, this)]\n            }, tags, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this), src !== 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            setSearchCategory(prev => !prev);\n          },\n          className: 'font-sans text-[12px] text-gray-500 ml-auto mr-20 relative cursor-pointer',\n          children: [selectedCategory, \"\\u25BC\", searchCategory && /*#__PURE__*/_jsxDEV(SearchCategory, {\n            onSelect: value => {\n              setSelectedCategory(value);\n              setSearchCategory(false);\n              console.log(\"선택된 정렬 기준:\", value);\n              setSort(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between sm:hidden h-full w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-center h-full w-[30vh] text-[30px]\",\n          children: \"BucketMate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center items-end mr-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-10 h-10\",\n            src: \"/images/\\uAC80\\uC0C9.png\",\n            alt: \"\\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Header, \"ofPcI1JWtQAo/MYo8Yezmpu/tHA=\", false, function () {\n  return [useSearchParams];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Link","useSearchParams","useState","useEffect","search","SearchCategory","SearchModal","fetchSearchModal","fetchUserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","props","_s","_userInfo$0$profile_i","_userInfo$","item_center","button_hover","name","username","setSort","setSearchUser","src","userInfo","setUserInfo","searchParams","setSearchParams","Token","setToken","searchImage","setSearchImage","searchCategory","setSearchCategory","selectedCategory","setSelectedCategory","storedToken","localStorage","getItem","searchValues","setSearchValues","searchModalValues","setSearchModalValues","profile_image","searchHashtags","setSearchHashtags","handleTags","tags","parseHashtags","split","filter","Boolean","map","word","trim","prevTags","validTags","hasInvalidTag","forEach","tag","length","test","includes","push","alert","getUserInfo","res","children","className","alt","onClick","console","log","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","placeholder","onChange","e","target","searchModalInfo","onKeyDown","key","to","set","friend_id","profile_image_url","prev","onSelect","_c","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/content/header.js"],"sourcesContent":["import \"../../App.css\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { search } from \"./utilities/search\";\r\nimport SearchCategory from \"./ui/searchCategory\";\r\nimport { SearchModal } from \"./ui/searchModal\";\r\nimport { fetchSearchModal } from \"./api/search\";\r\nimport { fetchUserInfo } from \"../community/api/fetchUserInfo\";\r\n\r\nexport default function Header(props) {\r\n\r\n    // 플렉스 상태 아이템 중앙\r\n    const item_center = \"flex items-center justify-center\";\r\n    // 로그인관련 옵션 버튼 호버\r\n    const button_hover = \"hover:bg-gray-200\";\r\n\r\n    // 토큰에서 검증된 유저이름\r\n    const { name,username,setSort,setSearchUser,src } = props;\r\n\r\n    // 로그인한 유저 정보\r\n    const [userInfo, setUserInfo] = useState([]);\r\n\r\n    // url 파라미터 조작\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    // 로그인 로그아웃 상태관리 스테이트\r\n    const [Token, setToken] = useState(null);\r\n\r\n    // 검색창 이미지 변경 스테이트\r\n    const [searchImage, setSearchImage] = useState(true);\r\n\r\n    // 검색 옵션 상태관리 스테이트\r\n    const [searchCategory, setSearchCategory] = useState(false);\r\n    // 검색 옵션선택 상태관리 스테이트\r\n    const [selectedCategory, setSelectedCategory] = useState(\"최신순\");\r\n\r\n    // 컴포넌트가 마운트될 때 토큰 가져오기\r\n    useEffect(() => {\r\n        const storedToken = localStorage.getItem('token');\r\n        if (storedToken && storedToken !== 'null') {\r\n            setToken(storedToken);\r\n        }\r\n    }, []);;\r\n\r\n    // 검색창 정보를 관리하는 스테이트\r\n    const [searchValues, setSearchValues] = useState(\"\");\r\n\r\n    // 검색창 모달 정보 상태관리\r\n    const [searchModalValues, setSearchModalValues] = useState([{name:\"\"},{username:\"\"},{profile_image:\"\"}]);\r\n\r\n    // 해쉬태그를 저장하는 스테이트\r\n    const [searchHashtags, setSearchHashtags] = useState([]);\r\n    // 이후 추가적으로 해쉬태그 저장배열을 통해서 데이터베이스에\r\n    // 데이터를 요청하는 작업수행 <<< 이곳에\r\n\r\n    // 해쉬태그 분리 함수\r\n    const handleTags = (tags) => {\r\n        // #을 기준으로 태그를 분리\r\n        const parseHashtags = tags\r\n            .split('#')  // #을 기준으로 분리\r\n            .filter(Boolean)  // 빈 값을 필터링\r\n            .map(word => word.trim());  // 각 단어에서 앞뒤 공백 제거\r\n\r\n        setSearchHashtags(prevTags => {\r\n            const validTags = [];\r\n            let hasInvalidTag = false;\r\n\r\n            parseHashtags.forEach(tag => {\r\n                // 태그 길이가 20자를 초과하면 유효하지 않음\r\n                if (tag.length > 0 && tag.length <= 20 && /^[a-zA-Z0-9가-힣\\s]+$/.test(tag) && !prevTags.includes(tag)) {\r\n                    validTags.push(tag);  // 유효한 태그만 추가\r\n                } else {\r\n                    hasInvalidTag = true;  // 유효하지 않은 태그가 있으면 알림 표시\r\n                }\r\n            });\r\n\r\n            // 유효하지 않은 태그가 있으면 알림 띄우기\r\n            if (hasInvalidTag) {\r\n                alert('모든 태그는 \"#\"으로 시작해야 하며, 특수문자 외에 띄어쓰기는 허용됩니다. 또한, 태그의 길이는 20자 이하이어야 합니다.');\r\n            }\r\n\r\n            // 유효한 태그만 반환\r\n            return [...prevTags, ...validTags];\r\n        });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(searchHashtags);\r\n        search(searchHashtags);\r\n    }, [searchHashtags]);\r\n\r\n    useEffect(()=>{\r\n        const getUserInfo = async (name)=>{\r\n            const res = await fetchUserInfo(name);\r\n            if(res){\r\n                setUserInfo(res);\r\n            }\r\n        }\r\n            if(name){\r\n                getUserInfo(name);\r\n            }\r\n    },[name])\r\n\r\n    return (\r\n        <>\r\n            <div className={\"flex sm:flex-col sm:justify-center sm:items-center h-[15%] sm:h-[15%] max-w-[1920px] sm:relative\"}>\r\n                {/* PC화면 기본요소 */}\r\n                <div className={\"hidden sm:flex sm:item-center sm:w-full max-w-[1920px] sm:h-[40px]\"}>\r\n                    <div className={`absolute w-9 mx-8 mt-[0.45rem] right-search-line-after`}>\r\n                        <img\r\n                            src={`/images/${searchImage ? \"유저검색\" : \"태그검색\"}.png`}\r\n                            alt=\"검색창 이미지\"\r\n                            className={\"w-[25px] h-[25px] z-10 relative cursor-pointer opacity-50 hover:opacity-100  transition-o duration-500\"}\r\n                            onClick={() => { searchImage ? setSearchImage(false) : setSearchImage(true); console.log(searchImage) }}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* 검색창 영역 */}\r\n                    <input\r\n                        type='text'\r\n                        id='search'\r\n                        name='search'\r\n                        className={\"h-full w-[77%] pl-16 rounded-full mx-5 shadow-lg border-[1px] border-gray-400 font-sans\"}\r\n                        value={searchValues}\r\n                        placeholder={`${searchImage ? \"유저 검색 (아이콘을 눌러 전환)\" : \"태그 검색 (아이콘을 눌러 전환)\"}`}\r\n\r\n                        // 인풋란에 입력값이 들어올때 마다 상태 업데이트\r\n                        onChange={async (e) => {\r\n                            // 검색 값 업데이트\r\n                            setSearchValues(e.target.value);\r\n                            // 검색 모달 값 업데이트\r\n                            const searchModalInfo = await fetchSearchModal(e.target.value);\r\n                            setSearchModalValues(searchModalInfo);\r\n                            console.log(\"검색된 유저\",searchModalInfo);\r\n                        }}\r\n                        // 엔터를 눌러서도 검색이 가능하도록 변경\r\n                        onKeyDown={(e) => {\r\n                            if (e.key === 'Enter' && src !== \"/profile\") {\r\n                                if (!searchImage) {\r\n                                    handleTags(searchValues);\r\n                                    setSearchValues(\"\");\r\n                                    \r\n                                }else{\r\n                                    search(searchValues);\r\n                                    setSearchUser(searchValues);\r\n                                    setSearchValues(\"\");\r\n                                }\r\n                            }else if(e.key === \"Enter\" && src === \"/profile\") {\r\n                                alert(\"프로필의 경우 하나의 대상만 선택해주세요.\")\r\n                            }\r\n                        }}\r\n                    >\r\n                    </input>\r\n                    {/* 검색 모달 */}\r\n                    {<SearchModal setSearchUser = {setSearchUser} setSearchValues={setSearchValues} searchModalValues={searchModalValues} searchValues={searchValues}/>}\r\n                    <img\r\n                        src=\"/images/검색.png\"\r\n                        alt=\"검색\"\r\n                        className={`w-[25px] h-[25px] relative right-16 mt-2 opacity-50 hover:opacity-100 transition-opacity duration-300 cursor-pointer `}\r\n                        onClick={() => {\r\n                            if (!searchImage) {\r\n                                handleTags(searchValues);\r\n                                setSearchValues(\"\");\r\n                            } else {\r\n\r\n                                // 여기에 데이터베이스에 데이터 요청하는 코드작성\r\n                                search(searchValues);\r\n                                setSearchUser(searchValues);\r\n                                setSearchValues(\"\");\r\n                            }\r\n                        }}\r\n                    ></img>\r\n\r\n                    {/* 비로그인 시 요소 */}\r\n                    <div className={`${item_center} ${Token !== null ? \"hidden\" : \"\"} h-full w-[100px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ml-16 mr-5 ${button_hover}`}><Link to=\"/login\">로그인</Link></div>\r\n                    <div className={`${item_center} ${Token !== null ? \"hidden\" : \"\"} h-full w-[120px] rounded-full font-sans shadow-lg border-[1px] border-gray-400 ${button_hover}`}><Link to=\"/signup\">회원가입</Link></div>\r\n\r\n                    {/* 로그인 시 요소 */}\r\n                    <div className={`flex items-center ${Token === null ? \"hidden\" : \"\"} w-[300px] text-[20px] ml-auto mr-14`}>\r\n                        <p \r\n                            onClick={()=>{\r\n                                console.log(\"함수가 동작합니다.\")\r\n                                if(src === \"/profile\"){\r\n                                    searchParams.set(\"username\",userInfo[0].name);\r\n                                    searchParams.set(\"userID\",userInfo[0].friend_id);\r\n                                    setSearchParams(searchParams);\r\n                                }\r\n                            }}\r\n                            className={` flex justify-end items-center text-end font-sans font-bold ml-auto cursor-pointer`}\r\n                        >\r\n                            <img src={`${userInfo[0]?.profile_image_url?? \"images/미니프로필.png\"}`} alt=\"미니프로필\" className={`w-[40px] h-[40px] mr-2 rounded-[50%] aspect-square`} />{username}\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={\"hidden sm:flex sm:items-end sm:ml-12 sm:w-full max-w-[1920px] h-[30%] max-h-[30%]\"}>\r\n\r\n                    {/* 태그요소 랜더링하는 부분 */}\r\n                    <div className={\"flex font-sans italic max-h-full overflow-y-auto\"}>\r\n                        {searchHashtags.map((tags) => {\r\n                            return (\r\n                                <div\r\n                                    key={tags}\r\n                                    className={`flex justify-center items-center ml-2 bg-gray-200 p-1 px-2 rounded-2xl cursor-pointer`}\r\n                                    onClick={() => {\r\n                                        // 클릭된 태그를 배열에서 제거하는 함수\r\n                                        setSearchHashtags((prevTags) => prevTags.filter(tag => tag !== tags));\r\n                                    }}\r\n                                >#{tags}\r\n                                    <img\r\n                                        src=\"/images/엑스표시.png\"\r\n                                        alt=\"엑스표시\"\r\n                                        className={`w-4 h-4 ml-1 opacity-50`}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    {src !== 3 &&\r\n                        <div \r\n                        onClick={(e)=>{setSearchCategory(prev => !prev)}}\r\n                        className={'font-sans text-[12px] text-gray-500 ml-auto mr-20 relative cursor-pointer'}>\r\n                            {selectedCategory}▼\r\n                            {searchCategory&& \r\n                                <SearchCategory \r\n                                    onSelect={(value) => {\r\n                                        setSelectedCategory(value);\r\n                                        setSearchCategory(false);\r\n                                        console.log(\"선택된 정렬 기준:\",value);\r\n                                        setSort(value);\r\n                                    }}\r\n                                    \r\n                            />}\r\n                    </div>\r\n                    }\r\n                </div>\r\n\r\n                {/* 모바일화면 기본요소 */}\r\n                <div className={\"flex justify-between sm:hidden h-full w-full\"}>\r\n                    <div className={\"flex justify-center items-center h-full w-[30vh] text-[30px]\"}>BucketMate</div>\r\n                    <div className={\"flex justify-center items-end mr-4\"}>\r\n                        <img className={\"w-10 h-10\"} src=\"/images/검색.png\" alt=\"검색\"></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}