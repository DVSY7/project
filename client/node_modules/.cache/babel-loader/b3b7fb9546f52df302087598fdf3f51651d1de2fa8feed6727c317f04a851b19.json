{"ast":null,"code":"// client/src/componant/routes/kakaoRedirectPage.js\nimport{useEffect,useRef}from\"react\";import{useSearchParams}from\"react-router-dom\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";export default function KakaoRedirectPage(){const[searchParams]=useSearchParams();const calledRef=useRef(false);useEffect(()=>{// url에서 code값 추출\nconst code=searchParams.get('code');console.log('카카오에서 받은 code: ',code);if(code&&!calledRef.current){calledRef.current=true;// 백엔드로 code를 보내서 토큰 요청\nconst getToken=async()=>{try{const response=await axios.post('http://localhost:5000/auth/kakao/token',{code:code// code값을 body로 전송\n});console.log(\"토큰 응답:\",response.data.token);localStorage.setItem(\"token\",response.data.token);window.location.href='/home';}catch(error){console.error(\"카카오 토큰 요청 실패: \",error);}};getToken();// 함수 호출\n}},[searchParams]);return/*#__PURE__*/_jsx(\"div\",{children:\"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778 \\uC911\\uC785\\uB2C8\\uB2E4...\"});}","map":{"version":3,"names":["useEffect","useRef","useSearchParams","axios","jsx","_jsx","KakaoRedirectPage","searchParams","calledRef","code","get","console","log","current","getToken","response","post","data","token","localStorage","setItem","window","location","href","error","children"],"sources":["C:/git/project/client/src/componant/routes/kakaoRedirectPage.js"],"sourcesContent":["// client/src/componant/routes/kakaoRedirectPage.js\r\n\r\nimport {useEffect, useRef} from \"react\";\r\nimport {useSearchParams} from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function KakaoRedirectPage(){\r\n    const [searchParams] = useSearchParams();\r\n    const calledRef = useRef(false);\r\n    \r\n    useEffect(()=> {\r\n        // url에서 code값 추출\r\n        const code = searchParams.get('code');\r\n        console.log('카카오에서 받은 code: ', code);\r\n         if(code && !calledRef.current){\r\n            calledRef.current = true;\r\n            // 백엔드로 code를 보내서 토큰 요청\r\n            const getToken = async () =>{\r\n               try{\r\n                const response = await axios.post('http://localhost:5000/auth/kakao/token',{\r\n                    code: code, // code값을 body로 전송\r\n                });\r\n\r\n                console.log(\"토큰 응답:\", response.data.token);\r\n                localStorage.setItem(\"token\", response.data.token);\r\n                window.location.href = '/home';\r\n               }catch(error){\r\n                console.error(\"카카오 토큰 요청 실패: \", error);\r\n               }\r\n            };\r\n            getToken(); // 함수 호출\r\n         }\r\n    },[searchParams]);\r\n\r\n    return <div>카카오 로그인 중입니다...</div>\r\n}\r\n"],"mappings":"AAAA;AAEA,OAAQA,SAAS,CAAEC,MAAM,KAAO,OAAO,CACvC,OAAQC,eAAe,KAAO,kBAAkB,CAChD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1B,cAAe,SAAS,CAAAC,iBAAiBA,CAAA,CAAE,CACvC,KAAM,CAACC,YAAY,CAAC,CAAGL,eAAe,CAAC,CAAC,CACxC,KAAM,CAAAM,SAAS,CAAGP,MAAM,CAAC,KAAK,CAAC,CAE/BD,SAAS,CAAC,IAAK,CACX;AACA,KAAM,CAAAS,IAAI,CAAGF,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,CACrCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEH,IAAI,CAAC,CACnC,GAAGA,IAAI,EAAI,CAACD,SAAS,CAACK,OAAO,CAAC,CAC3BL,SAAS,CAACK,OAAO,CAAG,IAAI,CACxB;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAA,GAAW,CACzB,GAAG,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,IAAI,CAAC,wCAAwC,CAAC,CACvEP,IAAI,CAAEA,IAAM;AAChB,CAAC,CAAC,CAEFE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAEG,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAC1CC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAClDG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,OAAO,CAC/B,CAAC,MAAMC,KAAK,CAAC,CACZb,OAAO,CAACa,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACvC,CACH,CAAC,CACDV,QAAQ,CAAC,CAAC,CAAE;AACf,CACL,CAAC,CAAC,CAACP,YAAY,CAAC,CAAC,CAEjB,mBAAOF,IAAA,QAAAoB,QAAA,CAAK,mEAAe,CAAK,CAAC,CACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}