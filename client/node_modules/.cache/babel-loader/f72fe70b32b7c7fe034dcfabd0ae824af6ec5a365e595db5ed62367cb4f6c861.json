{"ast":null,"code":"import axios from \"axios\";\n\n// 리스트 정보 불러오기\nexport const fetchListInfo = async (urlUserID, currentUserID) => {\n  try {\n    if (urlUserID) {\n      const res = await axios.post(`http://localhost:5000/api/listInfo`, {\n        urlUserID,\n        currentUserID\n      });\n      return res.data;\n    }\n  } catch (error) {\n    console.log(\"리스트 정보 불러오기 오류:\", error);\n    return;\n  }\n};\n\n// 북마크 변경 요청\nexport const bookmarkChange = async (listID, userID, isBookmark) => {\n  try {\n    // 북마크 변경 정보가 모두 있으면 요청을 보냄\n    if (listID && userID) {\n      const res = await axios.post(`http://localhost:5000/api/users/bookmark`, {\n        listID,\n        userID,\n        isBookmark\n      });\n      console.log(\"북마크 변경 중\", res);\n      return res;\n    }\n  } catch (error) {\n    // 에러발생\n    console.log(\"북마크 변경 실패\");\n    return;\n  }\n};\n\n// 리스트 참여하기\nexport const addUserRoom = async (listID, userID) => {\n  console.log(userID, listID);\n  if (userID && listID) {\n    try {\n      const res = await axios.post(`http://localhost:5000/api/users/addUserRoom`, {\n        listID,\n        userID\n      });\n      return res.data;\n    } catch (error) {\n      return 0;\n    }\n  }\n};","map":{"version":3,"names":["axios","fetchListInfo","urlUserID","currentUserID","res","post","data","error","console","log","bookmarkChange","listID","userID","isBookmark","addUserRoom"],"sources":["C:/git/project/client/src/componant/profile/api/List.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n\r\n// 리스트 정보 불러오기\r\nexport const fetchListInfo = async(urlUserID,currentUserID)=>{\r\n    try{\r\n        if(urlUserID){\r\n            const res = await axios.post(`http://localhost:5000/api/listInfo`,{ urlUserID,currentUserID });\r\n            return res.data;\r\n        }\r\n    }catch(error){\r\n        console.log(\"리스트 정보 불러오기 오류:\",error);\r\n        return;\r\n    }\r\n}\r\n\r\n// 북마크 변경 요청\r\nexport const bookmarkChange = async(listID, userID, isBookmark) => {\r\n    try{\r\n        // 북마크 변경 정보가 모두 있으면 요청을 보냄\r\n        if(listID && userID){\r\n            const res = await axios.post(`http://localhost:5000/api/users/bookmark`,{listID,userID,isBookmark})\r\n            console.log(\"북마크 변경 중\",res);\r\n            return res;\r\n        }\r\n    }catch(error){\r\n        // 에러발생\r\n        console.log(\"북마크 변경 실패\");\r\n        return;\r\n    }\r\n}\r\n\r\n// 리스트 참여하기\r\nexport const addUserRoom = async(listID, userID) =>{\r\n    console.log(userID,listID);\r\n    if(userID && listID){\r\n        try{\r\n            const res = await axios.post(`http://localhost:5000/api/users/addUserRoom`,{listID,userID});\r\n            return res.data;\r\n        }catch(error){\r\n            return 0;\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAGzB;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAMC,SAAS,EAACC,aAAa,KAAG;EACzD,IAAG;IACC,IAAGD,SAAS,EAAC;MACT,MAAME,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,oCAAoC,EAAC;QAAEH,SAAS;QAACC;MAAc,CAAC,CAAC;MAC9F,OAAOC,GAAG,CAACE,IAAI;IACnB;EACJ,CAAC,QAAMC,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACF,KAAK,CAAC;IACpC;EACJ;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAMC,MAAM,EAAEC,MAAM,EAAEC,UAAU,KAAK;EAC/D,IAAG;IACC;IACA,IAAGF,MAAM,IAAIC,MAAM,EAAC;MAChB,MAAMR,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,0CAA0C,EAAC;QAACM,MAAM;QAACC,MAAM;QAACC;MAAU,CAAC,CAAC;MACnGL,OAAO,CAACC,GAAG,CAAC,UAAU,EAACL,GAAG,CAAC;MAC3B,OAAOA,GAAG;IACd;EACJ,CAAC,QAAMG,KAAK,EAAC;IACT;IACAC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB;EACJ;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,WAAW,GAAG,MAAAA,CAAMH,MAAM,EAAEC,MAAM,KAAI;EAC/CJ,OAAO,CAACC,GAAG,CAACG,MAAM,EAACD,MAAM,CAAC;EAC1B,IAAGC,MAAM,IAAID,MAAM,EAAC;IAChB,IAAG;MACC,MAAMP,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,6CAA6C,EAAC;QAACM,MAAM;QAACC;MAAM,CAAC,CAAC;MAC3F,OAAOR,GAAG,CAACE,IAAI;IACnB,CAAC,QAAMC,KAAK,EAAC;MACT,OAAO,CAAC;IACZ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}