{"ast":null,"code":"// client/DayList.js\nimport KakaoMap from\"./KakaoMap\";import ListAddPhoto from\"./ListAddPhoto\";import{useState}from\"react\";import{DndProvider,useDrag,useDrop}from'react-dnd';import{HTML5Backend}from'react-dnd-html5-backend';// 드래그 가능한 일차 버튼 컴포넌트\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const DraggableDayButton=_ref=>{let{day,index,moveDay,isActive,onClick}=_ref;const[{isDragging},drag]=useDrag({type:'DAY',item:{index},collect:monitor=>({isDragging:monitor.isDragging()})});const[{isOver},drop]=useDrop({accept:'DAY',hover:draggedItem=>{if(draggedItem.index!==index){moveDay(draggedItem.index,index);draggedItem.index=index;}},collect:monitor=>({isOver:monitor.isOver()})});return/*#__PURE__*/_jsx(\"div\",{ref:node=>drag(drop(node)),onClick:onClick,className:`font-sans text-white bg-blue-500 mr-1 rounded-2xl flex items-center justify-center px-4 py-2 cursor-move transition-all duration-200 ${isActive?\"bg-blue-500 text-white\":\"bg-gray-200\"} ${isDragging?'opacity-50 scale-110 shadow-lg':''} ${isOver?'border-2 border-blue-400 scale-105':''}`,children:day});};// 드래그 가능한 아이템 컴포넌트\nconst DraggableItem=_ref2=>{let{item,index,moveItem,handleEditItem,handleDeleteItem}=_ref2;// item: 항목 데이터 (장소 또는 이미지)\n// index: 현재 아이템의 리스트 내 위치\n// moveItem: 드래그된 아이템을 새로운 위치로 이동시키는 함수\n// useDrag 훅으로 드래그 가능한 요소로 설정\nconst[{isDragging},drag]=useDrag({type:'ITEM',// 드래그 타입\nitem:{index},// 드래그되는 항목의 데이터\ncollect:monitor=>({isDragging:monitor.isDragging()// 드래그 중인지 여부를 수집\n})});// useDrop 훅으로 드롭 가능한 영역 결정\nconst[,drop]=useDrop({accept:'ITEM',// 드롭 가능한 항목 타입\nhover:draggedItem=>{// 다른 위치로 드래그했을 때만 동작\nif(draggedItem.index!==index){moveItem(draggedItem.index,index);// 항목 위치 바꾸기\ndraggedItem.index=index;// 드래그 된 항목의 인덱스도 엡데이트\n}}});return/*#__PURE__*/_jsxs(\"div\",{ref:node=>drag(drop(node)),className:`flex items-center rounded-lg bg-white shadow mb-4 h-36 ${isDragging?'opacity-50':''}`,style:{cursor:'move'},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:item.image||`images/장소준비중.png`,alt:\"\\uB4F1\\uB85D\\uB41C \\uC774\\uBBF8\\uC9C0\",className:\"ml-2 w-48 h-32 object-cover rounded\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold text-lg mb-2\",children:item.description}),item.type==='place'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-1\",children:item.address}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mb-1\",children:item.category}),item.phone&&/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mb-1\",children:item.phone}),item.placeUrl&&/*#__PURE__*/_jsx(\"a\",{href:item.placeUrl,target:\"_blank\",rel:\"noopener noreferrer\",className:\"inline-flex items-center px-1 py-1 text-sm text-blue-600 rounded-lg hover:bg-blue-100 transition-colors\",onClick:e=>e.stopPropagation(),children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uC0C1\\uC138\\uBCF4\\uAE30\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 pr-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditItem(item),className:\"px-3 py-1 rounded hover:text-blue-600\",children:\"\\uC218\\uC815\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteItem(item.id),className:\"px-3 py-1 rounded hover:text-blue-600\",children:\"\\uC0AD\\uC81C\"})]})]});};export default function DayList(_ref3){let{days,setDays,registeredItems,setRegisteredItems}=_ref3;// 사진 첨부 표시 여부\nconst[showImageInput,setshowImageInput]=useState(false);// 이미지 URL 상태\nconst[ImageSrc,setImageSrc]=useState(null);// 텍스트 상태\nconst[text,setText]=useState(\"\");// 사진 첨부 수정\nconst[editingItem,setEditingItem]=useState(null);const[editText,setEditText]=useState(\"\");const[editImage,setEditImage]=useState(null);// 현재 활성화된 날짜\nconst[activeDay,setActiveDay]=useState(\"1일차\");// 버튼 표시 여부 스테이트\nconst[showAddDayButton,setShowAddDayButton]=useState(true);// 지도 표시 여부\nconst[showMap,setShowMap]=useState(false);// 장소 수정\nconst[editingPlace,setEditingPlace]=useState(null);// 이미지 업로드 핸들러\nconst handleImageUpload=async e=>{var _e$target$files;e.stopPropagation();// 이벤트 버블링 중지\ne.preventDefault();// 기본 동작 방지 (페이지 이동, 제출 등)\n// 1. 파일 선택\nconst file=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0];// 첫번째 파일 선택\nif(!file)return;// 2. 파일 크기 제한 (10MB)\nif(file.size>10*1024*1024){alert(\"파일 크기는 10MB 이하여야 합니다.\");e.target.value=null;return;}try{// 3. FormData 생성\nconst formData=new FormData();formData.append('image',file);// 4. 서버로 POST 요청\nconst response=await fetch('http://localhost:5000/api/images/upload',{method:'POST',body:formData});// 5. 서버 응답 처리\nconst result=await response.json();if(result.success){// 이미지 경로 설정 (서버의 정적 파일 경로)\nconst imageUrl=`http://localhost:5000/${result.imagePath}`;setImageSrc(imageUrl);console.log('이미지가 성공적으로 업로드되었습니다:',result.filename);}else{alert('이미지 업로드에 실패했습니다.');}}catch(error){console.error('이미지 업로드 오류:',error);alert('이미지 업로드 중 오류가 발생했습니다.');}// 파일 선택기 초기화 (중복 첨부 방지용)\ne.target.value=null;};// 일차 추가 함수\nconst handleAddDay=()=>{const newDay=`${days.length+1}일차`;if(days.length<10){// 10일차 까지만\nsetDays([...days,newDay]);}};// 클릭한 날자 활성화\nconst handleDayClick=day=>{setActiveDay(day);};// 이미지 등록 로직\nconst handleRegisterForActiveDay=()=>{if(!ImageSrc){alert(\"이미지를 첨부해주세요\");return;}else if(text.trim()===\"\"){alert(\"텍스트를 입력해주세요\");return;}// 이미지와 글이 모두 입력된 경우에만 등록 가능\nsetRegisteredItems(prevItems=>{const existingItems=prevItems[activeDay]||[];// 수정 할 때\nif(editingItem){const updatedItems={...prevItems,[activeDay]:existingItems.map(item=>item.id===editingItem.id?{...item,description:text,image:ImageSrc}:item)};console.log('수정 후 등록된 모든 항목:',updatedItems);return updatedItems;}// 이미지 등록 하루 한개 제한\nconst hasImage=existingItems.some(item=>item.type===\"image\");if(hasImage){return prevItems;}// 새로 등록할 때\nconst placeItems=existingItems.filter(item=>item.type==='place');const newItems={...prevItems,[activeDay]:[{image:ImageSrc,description:text,type:\"image\",id:Date.now()},...placeItems]};console.log('이미지 등록 후 모든 항목:',newItems);return newItems;});// 초기화\nsetEditingItem(null);setImageSrc(null);setText(\"\");setshowImageInput(false);};// 장소 등록 로직\nconst handlePlaceSelect=item=>{// 수정 모드인지 확인\nconst isEdit=Boolean(editingPlace);if(isEdit){// 기존 항목을 새로운 item으로 수정\nhandleSaveEditPlace(item);// 수정 완료 메시지\nalert(\"수정이 완료되었습니다\");// 함수 종료 (등록 안함)\nreturn;}// 새 항목을 등록하는 경우\nsetRegisteredItems(prevItems=>{// 선택한 날짜에 해당하는 기존 항복이 있는지 확인, 없으면 빈 배열\nconst existingItems=prevItems[activeDay]||[];// some : 배열 중 하나라도 만족하는 요소가 있으면 true\nconst isDuplicate=existingItems.some(i=>i.image===item.image&&i.description===item.description);// 증복이면 기존 항목을 그대로 반환, 추가 안함\nif(isDuplicate)return prevItems;// 새로 항목 추가 : 기존 항목 유지 + 현재 선택된 일차에 추가\nconst newItems={...prevItems,[activeDay]:[...existingItems,{...item,type:\"place\",id:Date.now()}// 고유 Id 부여\n]};console.log('장소 등록 후 모든 항목:',newItems);// 업데이트된 항목 변환 (setRegisteredItems에 적용)\nreturn newItems;});setShowMap(false);};// 삭제 할 경우\nconst handleDeleteItem=itemId=>{// 사용자가 확인을 클릭시 true\nif(window.confirm(\"정말 삭제하시겠습니까?\")){setRegisteredItems(prevItems=>{const existingItems=prevItems[activeDay]||[];return{...prevItems,// itemId와 일치하지 않는 항목들만 남김, 해당 항목 삭제\n[activeDay]:existingItems.filter(item=>item.id!==itemId)};});}else{return;}};const handleCancelEdit=()=>{setEditingItem(null);setEditText(\"\");setEditImage(null);setshowImageInput(false);setText(\"\");setImageSrc(null);setEditingPlace(null);setShowMap(false);};// 사진 첨부 수정\nconst handleSaveEdit=()=>{if(!editingItem)return;setRegisteredItems(prevItems=>{const existingItems=prevItems[activeDay]||[];return{...prevItems,[activeDay]:existingItems.map(item=>item.id===editingItem.id?{...item,description:text,image:ImageSrc}:item)};});handleCancelEdit();};// 장소 수정\nconst handleSaveEditPlace=updatesPlace=>{if(!editingPlace)return;setRegisteredItems(prevItems=>{const existingItems=prevItems[activeDay]||[];return{...prevItems,[activeDay]:existingItems.map(item=>item.id===editingPlace.id?{...updatesPlace,type:\"place\",id:editingPlace.id}:item)};});handleCancelEdit();};// 중복 항목 제거 후 새로운 배열\nconst itemsForActiveDay=(registeredItems[activeDay]||[]).filter((item,index,self)=>index===self.findIndex(t=>t.image===item.image&&t.description===item.description));const hasRegisteredImage=itemsForActiveDay.some(item=>item.type===\"image\");const handleEditItem=item=>{setEditingItem(item);setEditText(item.description);setEditImage(item.image);if(item.type===\"image\"){setshowImageInput(true);setText(item.description);setImageSrc(item.image);}else if(item.type===\"place\"){setEditingPlace(item);setShowMap(true);}};// 아이템 이동 함수\nconst moveItem=(dragIndex,hoverIndex)=>{setRegisteredItems(prevItems=>{const items=[...(prevItems[activeDay]||[])];const draggedItem=items[dragIndex];items.splice(dragIndex,1);items.splice(hoverIndex,0,draggedItem);const newItems={...prevItems,[activeDay]:items};// 순서가 변경된 항목들을 콘솔에 출력\nconsole.log('순서 변경 후 항목들:',{날짜:activeDay,항목들:items.map((item,index)=>({순서:index+1,타입:item.type,설명:item.description,ID:item.id}))});return newItems;});};// 일차 이동 함수\nconst moveDay=(dragIndex,hoverIndex)=>{setDays(prevDays=>{const newDays=[...prevDays];const draggedDay=newDays[dragIndex];newDays.splice(dragIndex,1);newDays.splice(hoverIndex,0,draggedDay);// 일차 번호 업데이트\nreturn newDays.map((_,index)=>`${index+1}일차`);});// 현재 선택된 일차가 이동된 경우, 해당 일차의 내용도 함께 이동\nsetRegisteredItems(prevItems=>{const newItems={};const oldDays=[...days];const draggedDay=oldDays[dragIndex];oldDays.splice(dragIndex,1);oldDays.splice(hoverIndex,0,draggedDay);console.log('이동 전 항목들:',prevItems);console.log('이동하는 일차:',draggedDay);console.log('이동 전 일차 순서:',oldDays);// 새로운 순서에 맞게 항목들 재배치\noldDays.forEach((oldDay,index)=>{const newDay=`${index+1}일차`;if(prevItems[oldDay]){newItems[newDay]=prevItems[oldDay];console.log(`${oldDay}의 항목들이 ${newDay}로 이동됨:`,prevItems[oldDay]);}});console.log('이동 후 항목들:',newItems);return newItems;});};const handleDayDelete=activeday=>{if(window.confirm(`${activeDay}의 모든 항목을 삭제하시겠습니까?`)){// days 배열에서 해당 날짜 삭제\nsetDays(prevDays=>{const newDays=prevDays.filter(day=>day!==activeDay);//남은 날짜들의 번호 재조정\nreturn newDays.map((_,index)=>`${index+1}일차`);});// registeredItems 업데이트\nsetRegisteredItems(prevItems=>{const newItems={};const oldDays=[...days];const deletedIndex=oldDays.indexOf(activeDay);// 삭제된 날짜 이후의 항목들을 한 칸씩 앞으로 이동\noldDays.forEach((oldDay,index)=>{if(index<deletedIndex){// 삭제된 날짜 이전의 항목들은 그대로 유지\nnewItems[`${index+1}일차`]=prevItems[oldDay];}else if(index>deletedIndex){// 삭제된 날짜 이후의 항목들은 한 칸씩 앞으로 이동\nnewItems[`${index}일차`]=prevItems[oldDay];}});console.log('삭제후 항목들',newItems);return newItems;});}};return/*#__PURE__*/_jsxs(DndProvider,{backend:HTML5Backend,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[days.map((day,index)=>/*#__PURE__*/_jsx(DraggableDayButton,{day:day,index:index,moveDay:moveDay,isActive:activeDay===day,onClick:()=>handleDayClick(day)},index)),days.length<10&&/*#__PURE__*/_jsx(\"button\",{onClick:handleAddDay,className:\"w-8\",children:\"+\"}),days.length>1&&/*#__PURE__*/_jsx(\"button\",{className:\"ml-auto text-gray-400 hover:text-red-500\",onClick:()=>handleDayDelete(activeDay),children:\"\\uC0AD\\uC81C\"})]}),activeDay&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative max-h-[650px] overflow-y-auto\",children:[!editingItem&&!showImageInput&&!showMap&&!editingPlace&&/*#__PURE__*/_jsx(\"div\",{children:itemsForActiveDay.map((item,index)=>/*#__PURE__*/_jsx(DraggableItem,{item:item,index:index,moveItem:moveItem,handleEditItem:handleEditItem,handleDeleteItem:handleDeleteItem},item.id))}),showImageInput&&/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 bg-gray-100 border rounded-xl z-10 h-[650px] relative\",children:[!editingItem&&/*#__PURE__*/_jsx(\"button\",{className:\"absolute top-4 right-4\",onClick:()=>setshowImageInput(false),children:\"\\u2715\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center mb-4\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold\",children:editingItem?\"항목 수정하기\":\"새로운 항목 추가하기\"})}),ImageSrc?/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-[300px] mb-4\",children:/*#__PURE__*/_jsx(\"img\",{src:ImageSrc,alt:\"\\uCCA8\\uBD80\\uB41C \\uC774\\uBBF8\\uC9C0\",className:\"w-full h-full object-cover rounded-xl\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-[300px] mb-4 bg-red-100\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"flex w-full h-44 resize-none p-2 mb-4 border rounded\",placeholder:\"\\uC774\\uBBF8\\uC9C0\\uC5D0 \\uB300\\uD55C \\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",value:text,onChange:e=>setText(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",onChange:handleImageUpload,className:\"flex mb-4\"},ImageSrc),/*#__PURE__*/_jsx(\"div\",{className:\"flex gap-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 text-white px-4 rounded mb-4 hover:bg-blue-600\",onClick:()=>{// 수정일때\nif(editingItem){handleSaveEdit();alert(\"수정이 완료되었습니다\");}else{handleRegisterForActiveDay();}},children:editingItem?\"수정 완료\":\"등록\"})})]})]})]}),showMap&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"absolute top-4 right-4 z-20 bg-white rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100 transition-colors\",onClick:handleCancelEdit,children:\"\\u2715\"}),/*#__PURE__*/_jsx(KakaoMap,{showMap:showMap,setShowMap:setShowMap,handlePlaceSelect:handlePlaceSelect,editingPlace:editingPlace})]}),!editingItem&&!showImageInput&&!showMap&&/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"bg-white border rounded py-1 px-4 text-gray-500 mr-1.5\",onClick:()=>setShowMap(true),children:\"\\uC7A5\\uC18C \\uB4F1\\uB85D\\uD558\\uAE30 +\"}),!hasRegisteredImage&&/*#__PURE__*/_jsx(ListAddPhoto,{setshowImageInput:setshowImageInput})]})]})]});}","map":{"version":3,"names":["KakaoMap","ListAddPhoto","useState","DndProvider","useDrag","useDrop","HTML5Backend","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DraggableDayButton","_ref","day","index","moveDay","isActive","onClick","isDragging","drag","type","item","collect","monitor","isOver","drop","accept","hover","draggedItem","ref","node","className","children","DraggableItem","_ref2","moveItem","handleEditItem","handleDeleteItem","style","cursor","src","image","alt","description","address","category","phone","placeUrl","href","target","rel","e","stopPropagation","id","DayList","_ref3","days","setDays","registeredItems","setRegisteredItems","showImageInput","setshowImageInput","ImageSrc","setImageSrc","text","setText","editingItem","setEditingItem","editText","setEditText","editImage","setEditImage","activeDay","setActiveDay","showAddDayButton","setShowAddDayButton","showMap","setShowMap","editingPlace","setEditingPlace","handleImageUpload","_e$target$files","preventDefault","file","files","size","alert","value","formData","FormData","append","response","fetch","method","body","result","json","success","imageUrl","imagePath","console","log","filename","error","handleAddDay","newDay","length","handleDayClick","handleRegisterForActiveDay","trim","prevItems","existingItems","updatedItems","map","hasImage","some","placeItems","filter","newItems","Date","now","handlePlaceSelect","isEdit","Boolean","handleSaveEditPlace","isDuplicate","i","itemId","window","confirm","handleCancelEdit","handleSaveEdit","updatesPlace","itemsForActiveDay","self","findIndex","t","hasRegisteredImage","dragIndex","hoverIndex","items","splice","날짜","항목들","순서","타입","설명","ID","prevDays","newDays","draggedDay","_","oldDays","forEach","oldDay","handleDayDelete","activeday","deletedIndex","indexOf","backend","placeholder","onChange"],"sources":["C:/git/project/client/src/componant/create/list/DayList.js"],"sourcesContent":["// client/DayList.js\r\n\r\nimport KakaoMap from \"./KakaoMap\";\r\nimport ListAddPhoto from \"./ListAddPhoto\";\r\nimport { useState } from \"react\";\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\n// 드래그 가능한 일차 버튼 컴포넌트\r\nconst DraggableDayButton = ({ day, index, moveDay, isActive, onClick }) => {\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'DAY',\r\n    item: { index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: 'DAY',\r\n    hover: (draggedItem) => {\r\n      if (draggedItem.index !== index) {\r\n        moveDay(draggedItem.index, index);\r\n        draggedItem.index = index;\r\n      }\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={(node) => drag(drop(node))}\r\n      onClick={onClick}\r\n      className={`font-sans text-white bg-blue-500 mr-1 rounded-2xl flex items-center justify-center px-4 py-2 cursor-move transition-all duration-200 ${\r\n        isActive ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\r\n      } ${isDragging ? 'opacity-50 scale-110 shadow-lg' : ''} ${\r\n        isOver ? 'border-2 border-blue-400 scale-105' : ''\r\n      }`}\r\n    >\r\n      {day}\r\n    </div>\r\n  );\r\n};\r\n\r\n// 드래그 가능한 아이템 컴포넌트\r\nconst DraggableItem = ({ item, index, moveItem, handleEditItem, handleDeleteItem }) => {\r\n  // item: 항목 데이터 (장소 또는 이미지)\r\n  // index: 현재 아이템의 리스트 내 위치\r\n  // moveItem: 드래그된 아이템을 새로운 위치로 이동시키는 함수\r\n  \r\n  // useDrag 훅으로 드래그 가능한 요소로 설정\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'ITEM', // 드래그 타입\r\n    item: { index }, // 드래그되는 항목의 데이터\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(), // 드래그 중인지 여부를 수집\r\n    }),\r\n  });\r\n\r\n  // useDrop 훅으로 드롭 가능한 영역 결정\r\n  const [, drop] = useDrop({\r\n    accept: 'ITEM', // 드롭 가능한 항목 타입\r\n    hover: (draggedItem) => {\r\n      // 다른 위치로 드래그했을 때만 동작\r\n      if (draggedItem.index !== index) {\r\n        moveItem(draggedItem.index, index); // 항목 위치 바꾸기\r\n        draggedItem.index = index; // 드래그 된 항목의 인덱스도 엡데이트\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={(node) => drag(drop(node))}\r\n      className={`flex items-center rounded-lg bg-white shadow mb-4 h-36 ${isDragging ? 'opacity-50' : ''}`}\r\n      style={{ cursor: 'move' }}\r\n    >\r\n      <div>\r\n        <img\r\n          src={item.image || `images/장소준비중.png`}\r\n          alt=\"등록된 이미지\"\r\n          className=\"ml-2 w-48 h-32 object-cover rounded\"\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 p-4\">\r\n        <p className=\"font-bold text-lg mb-2\">\r\n          {item.description}\r\n        </p>\r\n        {item.type === 'place' && (\r\n          <>\r\n            <p className=\"text-sm text-gray-600 mb-1\">\r\n              {item.address}\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 mb-1\">\r\n              {item.category}\r\n            </p>\r\n            {item.phone && (\r\n              <p className=\"text-sm text-gray-500 mb-1\">\r\n                {item.phone}\r\n              </p>\r\n            )}\r\n            {item.placeUrl && (\r\n              <a\r\n                href={item.placeUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"inline-flex items-center px-1 py-1 text-sm text-blue-600 rounded-lg hover:bg-blue-100 transition-colors\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <span>상세보기</span>\r\n              </a>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"flex items-center gap-2 pr-4\">\r\n        <button\r\n          onClick={() => handleEditItem(item)}\r\n          className=\"px-3 py-1 rounded hover:text-blue-600\"\r\n        >\r\n          수정\r\n        </button>\r\n        <button\r\n          onClick={() => handleDeleteItem(item.id)}\r\n          className=\"px-3 py-1 rounded hover:text-blue-600\"\r\n        >\r\n          삭제\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function DayList({days, setDays, registeredItems,setRegisteredItems}) {\r\n  // 사진 첨부 표시 여부\r\n  const [showImageInput, setshowImageInput] = useState(false);\r\n  // 이미지 URL 상태\r\n  const [ImageSrc, setImageSrc] = useState(null);\r\n  // 텍스트 상태\r\n  const [text, setText] = useState(\"\");\r\n  \r\n\r\n  // 사진 첨부 수정\r\n  const [editingItem, setEditingItem] = useState(null);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [editImage, setEditImage] = useState(null);\r\n\r\n  \r\n  // 현재 활성화된 날짜\r\n  const [activeDay, setActiveDay] = useState(\"1일차\");\r\n\r\n  // 버튼 표시 여부 스테이트\r\n  const [showAddDayButton, setShowAddDayButton] = useState(true);\r\n  // 지도 표시 여부\r\n  const [showMap, setShowMap] = useState(false);\r\n  // 장소 수정\r\n  const [editingPlace, setEditingPlace] = useState(null);\r\n\r\n  // 이미지 업로드 핸들러\r\n  const handleImageUpload = async (e) => {\r\n    e.stopPropagation(); // 이벤트 버블링 중지\r\n    e.preventDefault(); // 기본 동작 방지 (페이지 이동, 제출 등)\r\n\r\n    // 1. 파일 선택\r\n    const file = e.target.files?.[0]; // 첫번째 파일 선택\r\n    if (!file) return;\r\n\r\n    // 2. 파일 크기 제한 (10MB)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      alert(\"파일 크기는 10MB 이하여야 합니다.\");\r\n      e.target.value = null;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 3. FormData 생성\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      // 4. 서버로 POST 요청\r\n      const response = await fetch('http://localhost:5000/api/images/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      // 5. 서버 응답 처리\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        // 이미지 경로 설정 (서버의 정적 파일 경로)\r\n        const imageUrl = `http://localhost:5000/${result.imagePath}`;\r\n        setImageSrc(imageUrl);\r\n        console.log('이미지가 성공적으로 업로드되었습니다:', result.filename);\r\n      } else {\r\n        alert('이미지 업로드에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('이미지 업로드 오류:', error);\r\n      alert('이미지 업로드 중 오류가 발생했습니다.');\r\n    }\r\n\r\n    // 파일 선택기 초기화 (중복 첨부 방지용)\r\n    e.target.value = null;\r\n  };\r\n\r\n  // 일차 추가 함수\r\n  const handleAddDay = () => {\r\n    const newDay = `${days.length + 1}일차`;\r\n    if (days.length < 10) {\r\n      // 10일차 까지만\r\n      setDays([...days, newDay]);\r\n    }\r\n  };\r\n\r\n  // 클릭한 날자 활성화\r\n  const handleDayClick = (day) => {\r\n    setActiveDay(day);\r\n  };\r\n\r\n  // 이미지 등록 로직\r\n  const handleRegisterForActiveDay = () => {\r\n    if (!ImageSrc) {\r\n      alert(\"이미지를 첨부해주세요\");\r\n      return;\r\n    } else if (text.trim() === \"\") {\r\n      alert(\"텍스트를 입력해주세요\");\r\n      return;\r\n    }\r\n\r\n    // 이미지와 글이 모두 입력된 경우에만 등록 가능\r\n    setRegisteredItems((prevItems) => {\r\n      const existingItems = prevItems[activeDay] || [];\r\n\r\n      // 수정 할 때\r\n      if (editingItem) {\r\n        const updatedItems = {\r\n          ...prevItems,\r\n          [activeDay]: existingItems.map(\r\n            (item) =>\r\n              item.id === editingItem.id\r\n                ? { ...item, description: text, image: ImageSrc }\r\n                : item\r\n          ),\r\n        };\r\n        console.log('수정 후 등록된 모든 항목:', updatedItems);\r\n        return updatedItems;\r\n      }\r\n\r\n      // 이미지 등록 하루 한개 제한\r\n      const hasImage = existingItems.some((item) => item.type === \"image\");\r\n      if (hasImage) {\r\n        return prevItems;\r\n      }\r\n\r\n      // 새로 등록할 때\r\n      const placeItems = existingItems.filter(item => item.type === 'place')\r\n      const newItems = {\r\n        ...prevItems,\r\n        [activeDay]: [\r\n          { image: ImageSrc, description: text, type: \"image\", id: Date.now() },\r\n          ...placeItems,\r\n        ],\r\n      };\r\n      console.log('이미지 등록 후 모든 항목:', newItems);\r\n      return newItems;\r\n    });\r\n\r\n    // 초기화\r\n    setEditingItem(null);\r\n    setImageSrc(null);\r\n    setText(\"\");\r\n    setshowImageInput(false);\r\n  };\r\n\r\n  // 장소 등록 로직\r\n  const handlePlaceSelect = (item) => {\r\n    // 수정 모드인지 확인\r\n    const isEdit = Boolean(editingPlace);\r\n    if(isEdit) {\r\n      // 기존 항목을 새로운 item으로 수정\r\n      handleSaveEditPlace(item);\r\n      // 수정 완료 메시지\r\n      alert(\"수정이 완료되었습니다\");\r\n      // 함수 종료 (등록 안함)\r\n      return;\r\n    }\r\n\r\n    // 새 항목을 등록하는 경우\r\n    setRegisteredItems((prevItems) => {\r\n      // 선택한 날짜에 해당하는 기존 항복이 있는지 확인, 없으면 빈 배열\r\n      const existingItems = prevItems[activeDay] || [];\r\n      // some : 배열 중 하나라도 만족하는 요소가 있으면 true\r\n      const isDuplicate = existingItems.some(\r\n        (i) => i.image === item.image && i.description === item.description\r\n      );\r\n      // 증복이면 기존 항목을 그대로 반환, 추가 안함\r\n      if (isDuplicate) return prevItems;\r\n\r\n      // 새로 항목 추가 : 기존 항목 유지 + 현재 선택된 일차에 추가\r\n      const newItems = {\r\n        ...prevItems,\r\n        [activeDay]: [\r\n          ...existingItems,\r\n          { ...item, type: \"place\", id: Date.now() }, // 고유 Id 부여\r\n        ],\r\n      };\r\n      console.log('장소 등록 후 모든 항목:', newItems);\r\n\r\n      // 업데이트된 항목 변환 (setRegisteredItems에 적용)\r\n      return newItems;\r\n    });\r\n    setShowMap(false);\r\n  };\r\n\r\n  // 삭제 할 경우\r\n  const handleDeleteItem = (itemId) => {\r\n    // 사용자가 확인을 클릭시 true\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      setRegisteredItems((prevItems) => {\r\n        const existingItems = prevItems[activeDay] || [];\r\n        return {\r\n          ...prevItems,\r\n          // itemId와 일치하지 않는 항목들만 남김, 해당 항목 삭제\r\n          [activeDay]: existingItems.filter((item) => item.id !== itemId),\r\n        };\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingItem(null);\r\n    setEditText(\"\");\r\n    setEditImage(null);\r\n    setshowImageInput(false);\r\n    setText(\"\");\r\n    setImageSrc(null);\r\n    setEditingPlace(null);\r\n    setShowMap(false);\r\n  };\r\n\r\n  // 사진 첨부 수정\r\n  const handleSaveEdit = () => {\r\n    if (!editingItem) return;\r\n\r\n    setRegisteredItems((prevItems) => {\r\n      const existingItems = prevItems[activeDay] || [];\r\n      return {\r\n        ...prevItems,\r\n        [activeDay]: existingItems.map((item) =>\r\n          item.id === editingItem.id\r\n            ? { ...item, description: text, image: ImageSrc }\r\n            : item\r\n        ),\r\n      };\r\n    });\r\n\r\n    handleCancelEdit();\r\n  };\r\n\r\n  // 장소 수정\r\n  const handleSaveEditPlace = (updatesPlace) => {\r\n    if (!editingPlace) return;\r\n\r\n    setRegisteredItems((prevItems) => {\r\n      const existingItems = prevItems[activeDay] || [];\r\n\r\n      return {\r\n        ...prevItems,\r\n        [activeDay]: existingItems.map((item) => item.id === editingPlace.id\r\n          ? { ...updatesPlace, type: \"place\", id: editingPlace.id }\r\n          : item,\r\n      )\r\n      };\r\n    });\r\n\r\n    handleCancelEdit();\r\n  };\r\n\r\n  // 중복 항목 제거 후 새로운 배열\r\n  const itemsForActiveDay = (registeredItems[activeDay] || []).filter(\r\n    (item, index, self) =>\r\n      index ===\r\n      self.findIndex(\r\n        (t) => t.image === item.image && t.description === item.description\r\n      )\r\n  );\r\n\r\n  const hasRegisteredImage = itemsForActiveDay.some(\r\n    (item) => item.type === \"image\"\r\n  );\r\n\r\n  const handleEditItem = (item) => {\r\n    setEditingItem(item);\r\n    setEditText(item.description);\r\n    setEditImage(item.image);\r\n    if (item.type === \"image\") {\r\n      setshowImageInput(true);\r\n      setText(item.description);\r\n      setImageSrc(item.image);\r\n    } else if (item.type === \"place\") {\r\n      setEditingPlace(item);\r\n      setShowMap(true);\r\n    }\r\n  };\r\n\r\n  // 아이템 이동 함수\r\n  const moveItem = (dragIndex, hoverIndex) => {\r\n    setRegisteredItems((prevItems) => {\r\n      const items = [...(prevItems[activeDay] || [])];\r\n      const draggedItem = items[dragIndex];\r\n      items.splice(dragIndex, 1);\r\n      items.splice(hoverIndex, 0, draggedItem);\r\n      \r\n      const newItems = {\r\n        ...prevItems,\r\n        [activeDay]: items,\r\n      };\r\n      \r\n      // 순서가 변경된 항목들을 콘솔에 출력\r\n      console.log('순서 변경 후 항목들:', {\r\n        날짜: activeDay,\r\n        항목들: items.map((item, index) => ({\r\n          순서: index + 1,\r\n          타입: item.type,\r\n          설명: item.description,\r\n          ID: item.id\r\n        }))\r\n      });\r\n      \r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  // 일차 이동 함수\r\n  const moveDay = (dragIndex, hoverIndex) => {\r\n    setDays((prevDays) => {\r\n      const newDays = [...prevDays];\r\n      const draggedDay = newDays[dragIndex];\r\n      newDays.splice(dragIndex, 1);\r\n      newDays.splice(hoverIndex, 0, draggedDay);\r\n      \r\n      // 일차 번호 업데이트\r\n      return newDays.map((_, index) => `${index + 1}일차`);\r\n    });\r\n\r\n    // 현재 선택된 일차가 이동된 경우, 해당 일차의 내용도 함께 이동\r\n    setRegisteredItems((prevItems) => {\r\n      const newItems = {};\r\n      const oldDays = [...days];\r\n      const draggedDay = oldDays[dragIndex];\r\n      oldDays.splice(dragIndex, 1);\r\n      oldDays.splice(hoverIndex, 0, draggedDay);\r\n\r\n      console.log('이동 전 항목들:', prevItems);\r\n      console.log('이동하는 일차:', draggedDay);\r\n      console.log('이동 전 일차 순서:', oldDays);\r\n\r\n      // 새로운 순서에 맞게 항목들 재배치\r\n      oldDays.forEach((oldDay, index) => {\r\n        const newDay = `${index + 1}일차`;\r\n        if (prevItems[oldDay]) {\r\n          newItems[newDay] = prevItems[oldDay];\r\n          console.log(`${oldDay}의 항목들이 ${newDay}로 이동됨:`, prevItems[oldDay]);\r\n        }\r\n      });\r\n\r\n      console.log('이동 후 항목들:', newItems);\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n\r\n  const handleDayDelete = (activeday) =>{\r\n      if(window.confirm(`${activeDay}의 모든 항목을 삭제하시겠습니까?`)){\r\n          // days 배열에서 해당 날짜 삭제\r\n        setDays((prevDays) => {\r\n          const newDays = prevDays.filter(day => day!== activeDay);\r\n          //남은 날짜들의 번호 재조정\r\n          return newDays.map((_, index) => (`${index + 1}일차`));\r\n        });\r\n\r\n        // registeredItems 업데이트\r\n        setRegisteredItems((prevItems) => {\r\n          const newItems = {};\r\n          const oldDays = [...days];\r\n          const deletedIndex = oldDays.indexOf(activeDay);\r\n\r\n          // 삭제된 날짜 이후의 항목들을 한 칸씩 앞으로 이동\r\n          oldDays.forEach((oldDay, index) => {\r\n            if(index < deletedIndex) {\r\n              // 삭제된 날짜 이전의 항목들은 그대로 유지\r\n              newItems[`${index + 1}일차`] = prevItems[oldDay];\r\n             }else if(index > deletedIndex) {\r\n              // 삭제된 날짜 이후의 항목들은 한 칸씩 앞으로 이동\r\n              newItems[`${index}일차`] = prevItems[oldDay];\r\n             }\r\n          });        \r\n        console.log('삭제후 항목들', newItems);\r\n        return newItems;\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"flex items-center\">\r\n        {days.map((day, index) => (\r\n          <DraggableDayButton\r\n            key={index}\r\n            day={day}\r\n            index={index}\r\n            moveDay={moveDay}\r\n            isActive={activeDay === day}\r\n            onClick={() => handleDayClick(day)}\r\n          />\r\n        ))}\r\n        {days.length < 10 && (\r\n          <button onClick={handleAddDay} className=\"w-8\">\r\n            +\r\n          </button>\r\n        )}\r\n\r\n\r\n        {days.length > 1 && (\r\n           <button className=\"ml-auto text-gray-400 hover:text-red-500\"\r\n           onClick={() => handleDayDelete(activeDay)}\r\n         >삭제</button>\r\n        )}\r\n       \r\n      </div>\r\n\r\n      {activeDay && (\r\n        <div className=\"relative max-h-[650px] overflow-y-auto\">\r\n          {!editingItem && !showImageInput && !showMap && !editingPlace && (\r\n            <div>\r\n              {itemsForActiveDay.map((item, index) => (\r\n                <DraggableItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  index={index}\r\n                  moveItem={moveItem}\r\n                  handleEditItem={handleEditItem}\r\n                  handleDeleteItem={handleDeleteItem}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* 이미지 폼 ( 등록 / 수정 ) */}\r\n          {showImageInput && (\r\n            <div className=\"p-4 bg-gray-100 border rounded-xl z-10 h-[650px] relative\">\r\n              {/* 닫기 버튼 */}\r\n              {!editingItem && (\r\n                <button\r\n                  className=\"absolute top-4 right-4\"\r\n                  onClick={() => setshowImageInput(false)}\r\n                >\r\n                  ✕\r\n                </button>\r\n              )}\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-lg font-bold\">\r\n                  {editingItem ? \"항목 수정하기\" : \"새로운 항목 추가하기\"}\r\n                </h2>\r\n              </div>\r\n              {ImageSrc ? (\r\n                <div className=\"w-full h-[300px] mb-4\">\r\n                  <img\r\n                    src={ImageSrc}\r\n                    alt=\"첨부된 이미지\"\r\n                    className=\"w-full h-full object-cover rounded-xl\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"w-full h-[300px] mb-4 bg-red-100\"></div>\r\n              )}\r\n              <div className=\"flex flex-col w-full\">\r\n                <textarea\r\n                  className=\"flex w-full h-44 resize-none p-2 mb-4 border rounded\"\r\n                  placeholder=\"이미지에 대한 설명을 입력하세요...\"\r\n                  value={text}\r\n                  onChange={(e) => setText(e.target.value)}\r\n                />\r\n                <div className=\"flex justify-between\">\r\n                  <input\r\n                    key={ImageSrc}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageUpload}\r\n                    className=\"flex mb-4\"\r\n                  />\r\n                  <div className=\"flex gap-2\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white px-4 rounded mb-4 hover:bg-blue-600\"\r\n                      onClick={() => {\r\n                        // 수정일때\r\n                        if (editingItem) {\r\n                          handleSaveEdit();\r\n                          alert(\"수정이 완료되었습니다\");\r\n                        } else {\r\n                          handleRegisterForActiveDay();\r\n                        }\r\n                      }}\r\n                    >\r\n                      {editingItem ? \"수정 완료\" : \"등록\"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 지도 폼 ( 등록 / 수정 ) */}\r\n          {showMap && (\r\n            <div className=\"relative\">\r\n              {/* 닫기 버튼 */}\r\n              <button\r\n                className=\"absolute top-4 right-4 z-20 bg-white rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100 transition-colors\"\r\n                onClick={handleCancelEdit}\r\n              >\r\n                ✕\r\n              </button>\r\n              <KakaoMap\r\n                showMap={showMap}\r\n                setShowMap={setShowMap}\r\n                handlePlaceSelect={handlePlaceSelect}\r\n                editingPlace={editingPlace}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!editingItem && !showImageInput && !showMap && (\r\n            <div className=\"relative\">\r\n              <button\r\n                className=\"bg-white border rounded py-1 px-4 text-gray-500 mr-1.5\"\r\n                onClick={() => setShowMap(true)}\r\n              >\r\n                장소 등록하기 +\r\n              </button>\r\n              {!hasRegisteredImage && (\r\n                <ListAddPhoto setshowImageInput={setshowImageInput} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </DndProvider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}