{"ast":null,"code":"//client/src/componant/community/friend.js\nimport{useState}from\"react\";import ProfileModal from\"./ui/profileModal\";import{CommunityButtons}from\"./ui/button\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Friend(props){// 친구목록 탭을 관리하기 위해 전달받은 값\nconst{selectedTab,communityTab,flexCenter,friendList,setActionList,userInfo,// 유저 정보\nuserID// 현재 유저 이름\n}=props;// 차단버튼 상태관리\nconst[checkedAction,setCheckedAction]=useState({});console.log(\"친구목록\",friendList);console.log(\"유저정보\",userInfo);// 프로필 모달 상태관리 \nconst[clickedProfile,setClickedProfile]=useState({});const isSelectedTab=selectedTab===communityTab[0];return/*#__PURE__*/_jsxs(_Fragment,{children:[isSelectedTab&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:`w-full ml-12`,children:\"\\uB0B4 \\uD504\\uB85C\\uD544\"}),/*#__PURE__*/_jsxs(\"div\",{className:`${isSelectedTab?\"block\":\"hidden\"} flex w-[90%] h-[90px] rounded-lg border border-solid border-gray-300 mb-2 cursor-pointer hover:bg-gray-100 font-sans font-bold`,children:[/*#__PURE__*/_jsxs(\"div\",{className:`${flexCenter} w-[80px] h-full`,children:[/*#__PURE__*/_jsx(\"img\",{onClick:()=>{setClickedProfile(prev=>({...prev,[userID]:true}));},src:`${userInfo[0].profile_image_url}`,className:`w-[60px] h-[60px] my-2 rounded-[50%]`}),/*#__PURE__*/_jsx(ProfileModal,{requestComponent:\"myProfile\",clickedProfile:clickedProfile,setClickedProfile:setClickedProfile,chattingList:userInfo,MemberKey:userID,profile_image:userInfo[0].profile_image_url,setActionList:setActionList,userID:userID})]}),/*#__PURE__*/_jsx(\"div\",{className:`flex items-center w-[calc(100%_-_140px)] h-full`,children:userInfo[0].name})]})]}),friendList.length===0&&selectedTab===communityTab[0]?/*#__PURE__*/_jsx(\"div\",{className:`${flexCenter} text-black text-opacity-50 w-full h-full`,children:\"\\uB4F1\\uB85D\\uB41C \\uCE5C\\uAD6C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uCE5C\\uAD6C\\uB97C \\uCD94\\uAC00\\uD558\\uC138\\uC694!\"}):\"\",selectedTab===communityTab[0]&&/*#__PURE__*/_jsxs(\"div\",{className:`w-full ml-12`,children:[\"\\uC804\\uCCB4 \",friendList.length]}),friendList.map((friend,i)=>{return/*#__PURE__*/_jsxs(\"div\",{className:`${isSelectedTab?\"block\":\"hidden\"} flex w-[90%] h-[90px] rounded-lg border border-solid border-gray-300 mb-2 cursor-pointer hover:bg-gray-100 `,children:[/*#__PURE__*/_jsxs(\"div\",{className:`${flexCenter} w-[80px] h-full`,children:[/*#__PURE__*/_jsx(\"img\",{onClick:()=>{setClickedProfile(prev=>({...prev,[friend.friend_id]:true}));},src:`${friend.profile_image_url}`,alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",className:`w-[60px] h-[60px] rounded-[50%] bg-cover bg-center`}),/*#__PURE__*/_jsx(ProfileModal,{clickedProfile:clickedProfile,setClickedProfile:setClickedProfile,friendList:friendList,MemberKey:friend.friend_id,profile_image:friend.profile_image_url,setActionList:setActionList,userID:userID})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flex flex-col w-[calc(100%_-_140px)] h-full`,children:[/*#__PURE__*/_jsx(\"div\",{className:`mt-3 font-sans font-bold`,children:friend.name}),/*#__PURE__*/_jsxs(\"div\",{className:`mt-3`,children:[/*#__PURE__*/_jsx(\"span\",{className:`text-yellow-400`,children:\"\\u2605 \\u2605 \\u2605 \\u2605 \\u2605\"}),/*#__PURE__*/_jsx(\"span\",{className:`ml-2 font-sans text-[0.7rem]`,children:\"4.82\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:`w-[60px] h-full`,children:/*#__PURE__*/_jsx(\"div\",{onClick:()=>{setCheckedAction(prev=>({...prev,[i]:true}));},className:`${flexCenter} w-[50px] h-[24px] mt-2 border border-solid border-gray-300 rounded-md font-sans text-[0.7rem]`,children:\"\\uCC28\\uB2E8\"})}),/*#__PURE__*/_jsx(CommunityButtons,{checkedAction:checkedAction,setCheckedAction:setCheckedAction,title:\"친구차단\",message:`${friend.name}님을 차단 하시겠습니까?`,action:\"차단\",index:i,setActionList:setActionList,userID:friend.friend_id})]},i);})]});}","map":{"version":3,"names":["useState","ProfileModal","CommunityButtons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Friend","props","selectedTab","communityTab","flexCenter","friendList","setActionList","userInfo","userID","checkedAction","setCheckedAction","console","log","clickedProfile","setClickedProfile","isSelectedTab","children","className","onClick","prev","src","profile_image_url","requestComponent","chattingList","MemberKey","profile_image","name","length","map","friend","i","friend_id","alt","title","message","action","index"],"sources":["C:/git/project/client/src/componant/community/friend.js"],"sourcesContent":["//client/src/componant/community/friend.js\r\n\r\nimport {useState} from \"react\";\r\nimport ProfileModal from \"./ui/profileModal\";\r\nimport { CommunityButtons } from \"./ui/button\";\r\n\r\nexport default function Friend(props) {\r\n    // 친구목록 탭을 관리하기 위해 전달받은 값\r\n    const { \r\n        selectedTab,\r\n        communityTab, \r\n        flexCenter, \r\n        friendList, \r\n        setActionList,\r\n        userInfo, // 유저 정보\r\n        userID,// 현재 유저 이름\r\n    } = props;\r\n\r\n\r\n    // 차단버튼 상태관리\r\n    const [checkedAction, setCheckedAction] = useState({});\r\n\r\n    console.log(\"친구목록\", friendList);\r\n    console.log(\"유저정보\", userInfo);\r\n\r\n    // 프로필 모달 상태관리 \r\n    const [clickedProfile, setClickedProfile] = useState({});   \r\n    const isSelectedTab = selectedTab === communityTab[0]\r\n    return (\r\n        <>\r\n            {isSelectedTab &&\r\n            <>\r\n                {/* 내 프로필 헤더*/}\r\n                <div className={`w-full ml-12`}>내 프로필</div>\r\n                {/* 내 프로필 영역 */}\r\n                <div className={`${isSelectedTab ? \"block\" : \"hidden\"} flex w-[90%] h-[90px] rounded-lg border border-solid border-gray-300 mb-2 cursor-pointer hover:bg-gray-100 font-sans font-bold`}>\r\n                    {/* 내 프로필 사진영역 */}\r\n                    <div className={`${flexCenter} w-[80px] h-full`}>\r\n                        <img \r\n                        onClick={()=>{\r\n                            setClickedProfile(prev => ({...prev,[userID]:true}));\r\n                        }}\r\n                        src={`${userInfo[0].profile_image_url}`} className={`w-[60px] h-[60px] my-2 rounded-[50%]`}></img>\r\n                        <ProfileModal\r\n                            requestComponent = {\"myProfile\"}\r\n                            clickedProfile = {clickedProfile}\r\n                            setClickedProfile = {setClickedProfile}\r\n                            chattingList = {userInfo}\r\n                            MemberKey = {userID}\r\n                            profile_image = {userInfo[0].profile_image_url}\r\n                            setActionList = {setActionList}\r\n                            userID = {userID}\r\n                            />\r\n                    </div>\r\n                    {/* 닉네임 영역 */}\r\n                    <div className={`flex items-center w-[calc(100%_-_140px)] h-full`}>{userInfo[0].name}</div>\r\n                </div>\r\n            </>\r\n            }\r\n            {/* 가져온 정보가 하나도 없을 시 */}\r\n            {friendList.length === 0 && selectedTab === communityTab[0] ? (\r\n                <div className={`${flexCenter} text-black text-opacity-50 w-full h-full`}>등록된 친구가 없습니다. 친구를 추가하세요!</div>) :\r\n                (\"\")}\r\n\r\n            {/* 가져온 정보가 있다면 */}\r\n            {/* 친구 수 헤더 */}\r\n            {selectedTab === communityTab[0] && \r\n            <div className={`w-full ml-12`}>전체 {friendList.length}</div>\r\n            }\r\n            {/* 친구목록 반복문 */}\r\n            {friendList.map((friend, i) => {\r\n                return (\r\n                    <div key={i} className={`${isSelectedTab ? \"block\" : \"hidden\"} flex w-[90%] h-[90px] rounded-lg border border-solid border-gray-300 mb-2 cursor-pointer hover:bg-gray-100 `} >\r\n                        {/* 프로필 사진 영역 */}\r\n                        <div className={`${flexCenter} w-[80px] h-full`}>\r\n                            {/* 프로필 사진 요소 */}\r\n                            <img \r\n                            onClick={()=>{\r\n                                setClickedProfile(prev=> ({...prev,[friend.friend_id]:true}))\r\n                            }}\r\n                            src={`${friend.profile_image_url}`} alt='미니프로필' className={`w-[60px] h-[60px] rounded-[50%] bg-cover bg-center`}></img>\r\n                            {/* 프로필 모달 */}\r\n                            <ProfileModal\r\n                            clickedProfile = {clickedProfile}\r\n                            setClickedProfile = {setClickedProfile}\r\n                            friendList = {friendList}\r\n                            MemberKey = {friend.friend_id}\r\n                            profile_image = {friend.profile_image_url}\r\n                            setActionList = {setActionList}\r\n                            userID = {userID}\r\n                            />\r\n                        </div>\r\n                        {/* 닉네임/별점 영역 */}\r\n                        <div className={`flex flex-col w-[calc(100%_-_140px)] h-full`}>\r\n                            {/* 닉네임 요소 */}\r\n                            <div className={`mt-3 font-sans font-bold`}>{friend.name}</div>\r\n                            {/* 별점 요소 */}\r\n                            <div className={`mt-3`}><span className={`text-yellow-400`}>★ ★ ★ ★ ★</span><span className={`ml-2 font-sans text-[0.7rem]`}>4.82</span></div>\r\n                        </div>\r\n                        {/* 차단버튼 영역 */}\r\n                        <div className={`w-[60px] h-full`}>\r\n                            {/* 차단버튼 요소 */}\r\n                            <div\r\n                            onClick={()=>{setCheckedAction(prev => ({...prev,[i]:true}));}} \r\n                            className={`${flexCenter} w-[50px] h-[24px] mt-2 border border-solid border-gray-300 rounded-md font-sans text-[0.7rem]`}>차단</div>\r\n                        </div>\r\n                        {/* 차단버튼 모달 */}\r\n                        <CommunityButtons\r\n                        checkedAction = {checkedAction}\r\n                        setCheckedAction = {setCheckedAction}\r\n                        title = {\"친구차단\"}\r\n                        message = {`${friend.name}님을 차단 하시겠습니까?`}\r\n                        action = {\"차단\"}\r\n                        index = {i}\r\n                        setActionList = {setActionList}\r\n                        userID = {friend.friend_id}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n\r\n\r\n        </>\r\n    )\r\n}"],"mappings":"AAAA;AAEA,OAAQA,QAAQ,KAAO,OAAO,CAC9B,MAAO,CAAAC,YAAY,KAAM,mBAAmB,CAC5C,OAASC,gBAAgB,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE/C,cAAe,SAAS,CAAAC,MAAMA,CAACC,KAAK,CAAE,CAClC;AACA,KAAM,CACFC,WAAW,CACXC,YAAY,CACZC,UAAU,CACVC,UAAU,CACVC,aAAa,CACbC,QAAQ,CAAE;AACVC,MAAO;AACX,CAAC,CAAGP,KAAK,CAGT;AACA,KAAM,CAACQ,aAAa,CAAEC,gBAAgB,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEtDoB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEP,UAAU,CAAC,CAC/BM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAEL,QAAQ,CAAC,CAE7B;AACA,KAAM,CAACM,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC,CACxD,KAAM,CAAAwB,aAAa,CAAGb,WAAW,GAAKC,YAAY,CAAC,CAAC,CAAC,CACrD,mBACIN,KAAA,CAAAE,SAAA,EAAAiB,QAAA,EACKD,aAAa,eACdlB,KAAA,CAAAE,SAAA,EAAAiB,QAAA,eAEIrB,IAAA,QAAKsB,SAAS,CAAE,cAAe,CAAAD,QAAA,CAAC,2BAAK,CAAK,CAAC,cAE3CnB,KAAA,QAAKoB,SAAS,CAAE,GAAGF,aAAa,CAAG,OAAO,CAAG,QAAQ,iIAAkI,CAAAC,QAAA,eAEnLnB,KAAA,QAAKoB,SAAS,CAAE,GAAGb,UAAU,kBAAmB,CAAAY,QAAA,eAC5CrB,IAAA,QACAuB,OAAO,CAAEA,CAAA,GAAI,CACTJ,iBAAiB,CAACK,IAAI,GAAK,CAAC,GAAGA,IAAI,CAAC,CAACX,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CACxD,CAAE,CACFY,GAAG,CAAE,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAACc,iBAAiB,EAAG,CAACJ,SAAS,CAAE,sCAAuC,CAAM,CAAC,cAClGtB,IAAA,CAACH,YAAY,EACT8B,gBAAgB,CAAI,WAAY,CAChCT,cAAc,CAAIA,cAAe,CACjCC,iBAAiB,CAAIA,iBAAkB,CACvCS,YAAY,CAAIhB,QAAS,CACzBiB,SAAS,CAAIhB,MAAO,CACpBiB,aAAa,CAAIlB,QAAQ,CAAC,CAAC,CAAC,CAACc,iBAAkB,CAC/Cf,aAAa,CAAIA,aAAc,CAC/BE,MAAM,CAAIA,MAAO,CAChB,CAAC,EACL,CAAC,cAENb,IAAA,QAAKsB,SAAS,CAAE,iDAAkD,CAAAD,QAAA,CAAET,QAAQ,CAAC,CAAC,CAAC,CAACmB,IAAI,CAAM,CAAC,EAC1F,CAAC,EACR,CAAC,CAGFrB,UAAU,CAACsB,MAAM,GAAK,CAAC,EAAIzB,WAAW,GAAKC,YAAY,CAAC,CAAC,CAAC,cACvDR,IAAA,QAAKsB,SAAS,CAAE,GAAGb,UAAU,2CAA4C,CAAAY,QAAA,CAAC,oHAAwB,CAAK,CAAC,CACvG,EAAG,CAIPd,WAAW,GAAKC,YAAY,CAAC,CAAC,CAAC,eAChCN,KAAA,QAAKoB,SAAS,CAAE,cAAe,CAAAD,QAAA,EAAC,eAAG,CAACX,UAAU,CAACsB,MAAM,EAAM,CAAC,CAG3DtB,UAAU,CAACuB,GAAG,CAAC,CAACC,MAAM,CAAEC,CAAC,GAAK,CAC3B,mBACIjC,KAAA,QAAaoB,SAAS,CAAE,GAAGF,aAAa,CAAG,OAAO,CAAG,QAAQ,8GAA+G,CAAAC,QAAA,eAExKnB,KAAA,QAAKoB,SAAS,CAAE,GAAGb,UAAU,kBAAmB,CAAAY,QAAA,eAE5CrB,IAAA,QACAuB,OAAO,CAAEA,CAAA,GAAI,CACTJ,iBAAiB,CAACK,IAAI,GAAI,CAAC,GAAGA,IAAI,CAAC,CAACU,MAAM,CAACE,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CACjE,CAAE,CACFX,GAAG,CAAE,GAAGS,MAAM,CAACR,iBAAiB,EAAG,CAACW,GAAG,CAAC,gCAAO,CAACf,SAAS,CAAE,oDAAqD,CAAM,CAAC,cAEvHtB,IAAA,CAACH,YAAY,EACbqB,cAAc,CAAIA,cAAe,CACjCC,iBAAiB,CAAIA,iBAAkB,CACvCT,UAAU,CAAIA,UAAW,CACzBmB,SAAS,CAAIK,MAAM,CAACE,SAAU,CAC9BN,aAAa,CAAII,MAAM,CAACR,iBAAkB,CAC1Cf,aAAa,CAAIA,aAAc,CAC/BE,MAAM,CAAIA,MAAO,CAChB,CAAC,EACD,CAAC,cAENX,KAAA,QAAKoB,SAAS,CAAE,6CAA8C,CAAAD,QAAA,eAE1DrB,IAAA,QAAKsB,SAAS,CAAE,0BAA2B,CAAAD,QAAA,CAAEa,MAAM,CAACH,IAAI,CAAM,CAAC,cAE/D7B,KAAA,QAAKoB,SAAS,CAAE,MAAO,CAAAD,QAAA,eAACrB,IAAA,SAAMsB,SAAS,CAAE,iBAAkB,CAAAD,QAAA,CAAC,oCAAS,CAAM,CAAC,cAAArB,IAAA,SAAMsB,SAAS,CAAE,8BAA+B,CAAAD,QAAA,CAAC,MAAI,CAAM,CAAC,EAAK,CAAC,EAC7I,CAAC,cAENrB,IAAA,QAAKsB,SAAS,CAAE,iBAAkB,CAAAD,QAAA,cAE9BrB,IAAA,QACAuB,OAAO,CAAEA,CAAA,GAAI,CAACR,gBAAgB,CAACS,IAAI,GAAK,CAAC,GAAGA,IAAI,CAAC,CAACW,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAE,CAC/Db,SAAS,CAAE,GAAGb,UAAU,gGAAiG,CAAAY,QAAA,CAAC,cAAE,CAAK,CAAC,CACjI,CAAC,cAENrB,IAAA,CAACF,gBAAgB,EACjBgB,aAAa,CAAIA,aAAc,CAC/BC,gBAAgB,CAAIA,gBAAiB,CACrCuB,KAAK,CAAI,MAAO,CAChBC,OAAO,CAAI,GAAGL,MAAM,CAACH,IAAI,eAAgB,CACzCS,MAAM,CAAI,IAAK,CACfC,KAAK,CAAIN,CAAE,CACXxB,aAAa,CAAIA,aAAc,CAC/BE,MAAM,CAAIqB,MAAM,CAACE,SAAU,CAC1B,CAAC,GA5CID,CA6CL,CAAC,CAEd,CAAC,CAAC,EAGJ,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}