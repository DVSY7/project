{"ast":null,"code":"// client/src/componant/content/gallery.js\nimport Masonry from'react-masonry-css';import{useEffect,useRef,useState}from'react';import GalleryHover from'./ui/galleryHover';import{galleryfetch}from'./api/gallery';import ShowGalleryModal from'./ui/showGalleryModal';import{galleryImageFetch}from'./api/galleryImage';import ProfileModal from'../community/ui/profileModal';import{fetchList}from'../community/api/fetchListAPI';import{fetchIsLiked}from'./api/likes';import{useSearchParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Gallery(props){const{src,sort,searchUser,setSearchUser,profileInfo,name,userID}=props;const[items,setItems]=useState([]);const[page,setPage]=useState(1);const[hasMore,setHasMore]=useState(true);const[hoverIndex,setHoverIndex]=useState(null);const observerRef=useRef(null);// 갤러리 클릭 시 갤러리 클릭 상태 관리\nconst[clickedGallery,setClickedGallery]=useState(null);// 갤러리 클릭 시 갤러리 이미지 상태관리\nconst[galleryImage,setGalleryImage]=useState([]);// 갤러리 뷰 화면 데이터 상태관리\nconst[galleryInfo,setGalleryInfo]=useState([]);// 프로필 옵션 선택 상태관리\nconst[actionList,setActionList]=useState([]);// 친구 리스트\nconst[friendList,setFriendList]=useState([]);// 차단 리스트\nconst[blockedList,setBlockedList]=useState([]);// 좋아요 토글관리 스테이트\nconst[isliked,setIsLiked]=useState();// url에 있는 유저 아이디\nconst[searchParams]=useSearchParams();const PAGE_SIZE=15;// 갤러리 프로필 이미지 클릭 시 상태관리\nconst[clickedProfile,setClickedProfile]=useState({});const breakpointColumnsObj={default:src===\"profile\"?3:5,1536:src===\"profile\"?3:5,1280:src===\"profile\"?2:4,1024:src===\"profile\"?1:3,768:src===\"profile\"?1:2,640:src===\"profile\"?1:1};// 데이터 확인을 위한 코드\nuseEffect(()=>{console.log({profileInfo:profileInfo});},[profileInfo]);useEffect(()=>{if(src===\"profile\"&&searchParams.get(\"userID\")){setSearchUser(searchParams.get(\"userID\"));console.log(\"현재 검색중인 유저\",searchUser);}else if(src===\"profile\"){setSearchUser(profileInfo.name);}},[profileInfo,searchUser]);// 정렬 기준이 바뀔 때 상태 초기화\nuseEffect(()=>{setItems([]);setPage(1);setHasMore(true);},[sort,searchUser]);// 페이지 바뀔 때마다 데이터 가져오기\nconst loadPage=async()=>{const newItems=await galleryfetch(page,PAGE_SIZE,sort,searchUser);setItems(prev=>[...prev,...newItems]);if(newItems.length<PAGE_SIZE){setHasMore(false);}};useEffect(()=>{if(src===\"home\"){loadPage();}else if(src===\"profile\"&&profileInfo.id!==0){loadPage();console.log(\"profile Start\");}console.log(\"profileUserInfo\",profileInfo);},[page,sort,searchUser]);// 무한스크롤: observer가 보이고, 더 가져올 게 있으면 page++\nuseEffect(()=>{if(!hasMore)return;const obs=new IntersectionObserver(_ref=>{let[entry]=_ref;if(entry.isIntersecting){setPage(p=>p+1);}},{threshold:1.0});if(observerRef.current)obs.observe(observerRef.current);return()=>obs.disconnect();},[hasMore]);// 갤러리 클릭 시 데이터 가져오기\nconst fetchGalleryImage=async galleryID=>{return await galleryImageFetch(galleryID);};useEffect(()=>{const getList=async()=>{try{const friendData=await fetchList(\"friendList\",name);const blockedData=await fetchList(\"blockList\",name);setFriendList(friendData);setBlockedList(blockedData);console.log(\"데이터 요청 성공\");}catch(error){console.log(\"데이터요청 에러:\",error);}};getList();},[name]);useEffect(()=>{console.log(\"userName:\",blockedList);console.log(\"현재정보\",items);},[friendList,blockedList]);// 좋아요 상태 요청\nuseEffect(()=>{const fetchAllIsLiked=async()=>{const likedState=await Promise.all(items.map(item=>{var _userID$0$id,_userID$;return fetchIsLiked(item.id,(_userID$0$id=(_userID$=userID[0])===null||_userID$===void 0?void 0:_userID$.id)!==null&&_userID$0$id!==void 0?_userID$0$id:0);}));setIsLiked(()=>likedState);};if(items.length>0&&userID){fetchAllIsLiked();}},[items,userID]);if(Object.keys(items)>0)return;return/*#__PURE__*/_jsxs(\"div\",{className:`\n      h-full w-full sm:overflow-y-auto sm:p-4 sm:pr-8\n      ${src===\"profile\"?\"2xl:w-[65%] w-[800px]\":\"\"}\n    `,children:[items.length===0&&/*#__PURE__*/_jsx(\"div\",{className:`h-full w-full flex justify-center items-center border-[1px] border-gray-200 rounded-2xl bg-gray-50`,children:\"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsx(Masonry,{breakpointCols:breakpointColumnsObj,className:\"hidden sm:flex gap-5\",columnClassName:\"flex flex-col gap-5\",children:items.map((item,idx)=>{var _userID$0$id2,_userID$2,_userID$0$id3,_userID$3,_userID$0$id4,_userID$4;return/*#__PURE__*/_jsxs(\"div\",{onMouseEnter:()=>{if(clickedProfile!==false){setHoverIndex(idx);}},onMouseLeave:()=>setHoverIndex(null),className:`relative rounded-2xl overflow-hidden\n              ${idx%3===1?'h-[500px]':idx%3===2?'h-[400px]':'h-[300px]'}\n            `,children:[/*#__PURE__*/_jsx(\"div\",{className:`\n              absolute inset-0 bg-black bg-opacity-50 z-10 text-white\n              ${hoverIndex===idx?'opacity-100':'opacity-0'}\n              transition-opacity duration-300\n            `,children:isliked&&userID&&/*#__PURE__*/_jsx(GalleryHover,{id:item.friend_id,galleryID:item.id,userID:(_userID$0$id2=(_userID$2=userID[0])===null||_userID$2===void 0?void 0:_userID$2.id)!==null&&_userID$0$id2!==void 0?_userID$0$id2:0,title:item.title,name:name,username:item.username,profile_image:item.profile_image,date:item.date,likes:item.likes,isliked:isliked,setGalleryInfo:setGalleryInfo,views:item.views,location:item.location,clickedGallery:clickedGallery,setClickedGallery:setClickedGallery,index:idx,setGalleryImage:setGalleryImage,fetchGalleryImage:fetchGalleryImage,setClickedProfile:setClickedProfile})}),console.log(item),/*#__PURE__*/_jsx(ProfileModal,{clickedProfile:clickedProfile,setClickedProfile:setClickedProfile,friendList:friendList,blockedList:blockedList,chattingList:[item],userID:(_userID$0$id3=(_userID$3=userID[0])===null||_userID$3===void 0?void 0:_userID$3.id)!==null&&_userID$0$id3!==void 0?_userID$0$id3:0,setActionList:setActionList,profile_image:item.profile_image,MemberKey:item.id,requestComponent:\"home\"}),clickedGallery===idx&&/*#__PURE__*/_jsx(ShowGalleryModal,{username:item.name,title:item.title,text:item.text,galleryID:item.id,userID:(_userID$0$id4=(_userID$4=userID[0])===null||_userID$4===void 0?void 0:_userID$4.id)!==null&&_userID$0$id4!==void 0?_userID$0$id4:0,index:idx,clickedGallery:clickedGallery,setClickedGallery:setClickedGallery,galleryImage:galleryImage,galleryInfo:galleryInfo[idx]}),/*#__PURE__*/_jsx(\"img\",{className:\"w-full h-full object-cover\",src:encodeURI(item.thumbnail_url),alt:item.title})]},`${item}${idx}`);})}),hasMore&&/*#__PURE__*/_jsx(\"div\",{ref:observerRef,className:\"h-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"block sm:hidden overflow-y-auto h-full\",children:items.map((item,idx)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsx(\"img\",{className:\"w-full h-[60vh] object-cover\",src:encodeURI(item.thumbnail_url),alt:item.title})},idx),/*#__PURE__*/_jsx(\"div\",{className:`h-[23vh] w-screen`})]},idx))})]});}","map":{"version":3,"names":["Masonry","useEffect","useRef","useState","GalleryHover","galleryfetch","ShowGalleryModal","galleryImageFetch","ProfileModal","fetchList","fetchIsLiked","useSearchParams","jsx","_jsx","jsxs","_jsxs","Gallery","props","src","sort","searchUser","setSearchUser","profileInfo","name","userID","items","setItems","page","setPage","hasMore","setHasMore","hoverIndex","setHoverIndex","observerRef","clickedGallery","setClickedGallery","galleryImage","setGalleryImage","galleryInfo","setGalleryInfo","actionList","setActionList","friendList","setFriendList","blockedList","setBlockedList","isliked","setIsLiked","searchParams","PAGE_SIZE","clickedProfile","setClickedProfile","breakpointColumnsObj","default","console","log","get","loadPage","newItems","prev","length","id","obs","IntersectionObserver","_ref","entry","isIntersecting","p","threshold","current","observe","disconnect","fetchGalleryImage","galleryID","getList","friendData","blockedData","error","fetchAllIsLiked","likedState","Promise","all","map","item","_userID$0$id","_userID$","Object","keys","className","children","breakpointCols","columnClassName","idx","_userID$0$id2","_userID$2","_userID$0$id3","_userID$3","_userID$0$id4","_userID$4","onMouseEnter","onMouseLeave","friend_id","title","username","profile_image","date","likes","views","location","index","chattingList","MemberKey","requestComponent","text","encodeURI","thumbnail_url","alt","ref"],"sources":["C:/git/project/client/src/componant/content/gallery.js"],"sourcesContent":["// client/src/componant/content/gallery.js\r\n\r\nimport Masonry from 'react-masonry-css';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport GalleryHover from './ui/galleryHover';\r\nimport { galleryfetch } from './api/gallery';\r\nimport ShowGalleryModal from './ui/showGalleryModal';\r\nimport { galleryImageFetch } from './api/galleryImage';\r\nimport ProfileModal from '../community/ui/profileModal';\r\nimport { fetchList } from '../community/api/fetchListAPI';\r\nimport { fetchIsLiked } from './api/likes';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Gallery(props) {\r\n  const { src, sort,searchUser,setSearchUser,profileInfo,name,userID} = props;\r\n  const [items, setItems] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [hoverIndex, setHoverIndex] = useState(null);\r\n  const observerRef = useRef(null);\r\n  // 갤러리 클릭 시 갤러리 클릭 상태 관리\r\n  const [clickedGallery, setClickedGallery] = useState(null);\r\n  // 갤러리 클릭 시 갤러리 이미지 상태관리\r\n  const [galleryImage, setGalleryImage] = useState([]);\r\n\r\n  // 갤러리 뷰 화면 데이터 상태관리\r\n  const [galleryInfo, setGalleryInfo] = useState([]);\r\n\r\n  // 프로필 옵션 선택 상태관리\r\n  const [actionList, setActionList] = useState([]);\r\n\r\n  // 친구 리스트\r\n  const [friendList, setFriendList] = useState([]);\r\n  // 차단 리스트\r\n  const [blockedList, setBlockedList] = useState([]);\r\n  // 좋아요 토글관리 스테이트\r\n  const [isliked, setIsLiked] = useState();\r\n  // url에 있는 유저 아이디\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const PAGE_SIZE = 15;\r\n\r\n\r\n  // 갤러리 프로필 이미지 클릭 시 상태관리\r\n  const [clickedProfile, setClickedProfile] = useState({});\r\n\r\n  const breakpointColumnsObj = {\r\n    default: src === \"profile\" ? 3 : 5,\r\n    1536: src === \"profile\" ? 3 : 5,\r\n    1280: src === \"profile\" ? 2 : 4,\r\n    1024: src === \"profile\" ? 1 : 3,\r\n    768: src === \"profile\" ? 1 : 2,\r\n    640: src === \"profile\" ? 1 : 1,\r\n  };\r\n\r\n  // 데이터 확인을 위한 코드\r\n  useEffect(()=>{\r\n    console.log({profileInfo:profileInfo});\r\n  },[profileInfo]);\r\n\r\n  useEffect(()=>{\r\n    if(src === \"profile\" && searchParams.get(\"userID\")){\r\n      setSearchUser(searchParams.get(\"userID\"));\r\n      console.log(\"현재 검색중인 유저\",searchUser);\r\n    }else if(src === \"profile\"){\r\n      setSearchUser(profileInfo.name);\r\n    }\r\n  },[profileInfo,searchUser])\r\n\r\n  // 정렬 기준이 바뀔 때 상태 초기화\r\n  useEffect(() => {\r\n    setItems([]);\r\n    setPage(1);\r\n    setHasMore(true);\r\n  }, [sort, searchUser]);\r\n\r\n  // 페이지 바뀔 때마다 데이터 가져오기\r\n  const loadPage = async () => {\r\n      const newItems = await galleryfetch(page, PAGE_SIZE, sort, searchUser);\r\n      setItems(prev => [...prev, ...newItems]);\r\n      if (newItems.length < PAGE_SIZE) {\r\n        setHasMore(false);\r\n      }\r\n    };\r\n  useEffect(() => {\r\n    if(src===\"home\"){\r\n      loadPage();\r\n    }else if(src === \"profile\" && profileInfo.id !== 0){\r\n      loadPage();\r\n      console.log(\"profile Start\");\r\n    }\r\n    console.log(\"profileUserInfo\",profileInfo);\r\n  }, [page,sort,searchUser]);\r\n\r\n  // 무한스크롤: observer가 보이고, 더 가져올 게 있으면 page++\r\n  useEffect(() => {\r\n    if (!hasMore) return;\r\n    const obs = new IntersectionObserver(([entry]) => {\r\n      if (entry.isIntersecting) {\r\n        setPage(p => p + 1);\r\n      }\r\n    }, { threshold: 1.0 });\r\n    if (observerRef.current) obs.observe(observerRef.current);\r\n    return () => obs.disconnect();\r\n  }, [hasMore]);\r\n\r\n  // 갤러리 클릭 시 데이터 가져오기\r\n  const fetchGalleryImage = async (galleryID) => {\r\n      return await galleryImageFetch(galleryID);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    const getList = async ()=>{\r\n      try{\r\n        const friendData = await fetchList(\"friendList\",name);\r\n        const blockedData = await fetchList(\"blockList\",name);\r\n        setFriendList(friendData);\r\n        setBlockedList(blockedData);\r\n        console.log(\"데이터 요청 성공\");\r\n      }catch(error){\r\n        console.log(\"데이터요청 에러:\",error);\r\n      }\r\n    }\r\n    getList();\r\n  },[name])\r\n\r\n  useEffect(()=>{\r\n    console.log(\"userName:\",blockedList);\r\n    console.log(\"현재정보\",items);\r\n  },[friendList,blockedList]);\r\n\r\n  // 좋아요 상태 요청\r\n  useEffect(()=>{\r\n    const fetchAllIsLiked = async ()=>{\r\n      const likedState = await Promise.all(\r\n        items.map((item) =>fetchIsLiked(item.id, userID[0]?.id??0))\r\n      );\r\n      setIsLiked(()=>likedState);\r\n    };\r\n    if(items.length > 0 && userID){\r\n      fetchAllIsLiked();\r\n    }\r\n  },[items, userID]);\r\n\r\n  if(Object.keys(items) > 0)return;\r\n\r\n  return (\r\n    <div className={`\r\n      h-full w-full sm:overflow-y-auto sm:p-4 sm:pr-8\r\n      ${src === \"profile\" ? \"2xl:w-[65%] w-[800px]\" : \"\"}\r\n    `}>\r\n      {items.length === 0 &&\r\n      <div className={`h-full w-full flex justify-center items-center border-[1px] border-gray-200 rounded-2xl bg-gray-50`}>게시글이 존재하지 않습니다.</div>\r\n      }\r\n      {/* PC Masonry */}\r\n      <Masonry\r\n        breakpointCols={breakpointColumnsObj}\r\n        className=\"hidden sm:flex gap-5\"\r\n        columnClassName=\"flex flex-col gap-5\"\r\n      >\r\n        {items.map((item, idx) =>{\r\n          return(\r\n          <div\r\n            key={`${item}${idx}`}\r\n            onMouseEnter={() => {\r\n              if(clickedProfile !== false){\r\n                setHoverIndex(idx)\r\n              }\r\n            }}\r\n            onMouseLeave={() => setHoverIndex(null)}\r\n            className={`relative rounded-2xl overflow-hidden\r\n              ${idx % 3 === 1 ? 'h-[500px]' : idx % 3 === 2 ? 'h-[400px]' : 'h-[300px]'}\r\n            `}\r\n          >\r\n            <div className={`\r\n              absolute inset-0 bg-black bg-opacity-50 z-10 text-white\r\n              ${hoverIndex === idx ? 'opacity-100' : 'opacity-0'}\r\n              transition-opacity duration-300\r\n            `}>\r\n              {isliked&& userID &&\r\n              <GalleryHover\r\n                id={item.friend_id}\r\n                galleryID = {item.id}\r\n                userID = {userID[0]?.id??0}\r\n                title={item.title}\r\n                name={name}\r\n                username={item.username}\r\n                profile_image={item.profile_image}\r\n                date={item.date}\r\n                likes={item.likes}\r\n                isliked={isliked}\r\n                setGalleryInfo={setGalleryInfo}\r\n                views={item.views}\r\n                location={item.location}\r\n                clickedGallery={clickedGallery}\r\n                setClickedGallery={setClickedGallery}\r\n                index={idx}\r\n                setGalleryImage={setGalleryImage}\r\n                fetchGalleryImage={fetchGalleryImage}\r\n                setClickedProfile = {setClickedProfile}\r\n              />\r\n              }\r\n            </div>\r\n            {/* 프로필 모달 */}\r\n                    {console.log(item)}\r\n                    <ProfileModal\r\n                    clickedProfile = {clickedProfile}\r\n                    setClickedProfile = {setClickedProfile}\r\n                    friendList = {friendList}\r\n                    blockedList = {blockedList}\r\n                    chattingList = {[item]}\r\n                    userID = {userID[0]?.id??0}\r\n                    setActionList = {setActionList}\r\n                    profile_image = {item.profile_image}\r\n                    MemberKey = {item.id}\r\n                    requestComponent = {\"home\"}\r\n                    />  \r\n                    {/* {console.log(\"현재정보:\",item)} */}\r\n            {/* 갤러리 클릭 시 모달 띄우기 */}\r\n            {clickedGallery === idx && (\r\n              <ShowGalleryModal\r\n                username={item.name}\r\n                title = {item.title}\r\n                text = {item.text}\r\n                galleryID={item.id}\r\n                userID = {userID[0]?.id??0}\r\n                index = {idx}\r\n                clickedGallery={clickedGallery}\r\n                setClickedGallery={setClickedGallery}\r\n                galleryImage={galleryImage}\r\n                galleryInfo={galleryInfo[idx]}\r\n              />\r\n            )}\r\n            <img\r\n              className=\"w-full h-full object-cover\"\r\n              src={encodeURI(item.thumbnail_url)}\r\n              alt={item.title}\r\n            />\r\n          </div>\r\n        )})}\r\n        {/* 무한스크롤 관찰 div */}\r\n      </Masonry>\r\n      {hasMore && <div ref={observerRef} className=\"h-1\" />}\r\n\r\n      {/* Mobile 뷰 */}\r\n      <div className=\"block sm:hidden overflow-y-auto h-full\">\r\n        {items.map((item, idx) => (\r\n          <div key={idx}>\r\n            <div key={idx} className=\"mb-4\">\r\n              <img\r\n                className=\"w-full h-[60vh] object-cover\"\r\n                src={encodeURI(item.thumbnail_url)}\r\n                alt={item.title}\r\n              />\r\n            </div>\r\n            <div className={`h-[23vh] w-screen`}></div>\r\n          </div>\r\n\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}