{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\community\\\\ui\\\\profileModal.js\",\n  _s = $RefreshSig$();\n// client/src/componant/community/ui/profileModal.js\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { CommunityButtons } from \"./button\";\n\n// 프로필 클릭시 나타나는 모달\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProfileModal(props) {\n  _s();\n  const {\n    clickedProfile,\n    setClickedProfile,\n    MemberKey,\n    blockedList = [],\n    friendList = [],\n    chattingList = [],\n    profile_image,\n    setActionList,\n    requestComponent,\n    userID\n  } = props;\n  const navigate = useNavigate();\n  const [checkedAction, setCheckedAction] = useState({});\n\n  // 모달 닫기 함수\n  const handleClicked = () => {\n    setClickedProfile(prev => {\n      const updateClickedMember = {\n        ...prev\n      };\n      updateClickedMember[MemberKey] = false;\n      return updateClickedMember;\n    });\n  };\n\n  // 이미 친구인지 확인하는 변수\n  const isFriend = friendList.some(member => member.friend_id === MemberKey);\n\n  // 친구리스트 차단리스트 구분 변수\n  const isChecked = blockedList.some(member => member.friend_id === MemberKey) ? \"해제\"\n  // 이미 추가된 사용자면 차단버튼으로 설정\n  : isFriend ? \"차단\" : \"친구추가\";\n\n  // 프로필 이름 설정\n  const profile = {\n    \"차단\": friendList.filter(member => member.friend_id === MemberKey),\n    \"해제\": blockedList.filter(member => member.friend_id === MemberKey),\n    \"친구추가\": chattingList.filter(member => member.friend_id === MemberKey)\n  };\n\n  // 설정된 프로필 이름 변수\n  const selectedProfile = profile[isChecked][0];\n  const profileName = selectedProfile ? selectedProfile.name : chattingList[0].name;\n  const friend_id = selectedProfile ? selectedProfile.friend_id : chattingList[0].friend_id;\n\n  // 프로필 옵션 관리 변수\n  const profileOptions = [{\n    option: \"정보보기\",\n    img: \"images/검색.png\"\n  }, {\n    option: isChecked,\n    img: `images/${isChecked}.png`\n  }];\n  // 포로필 옵션동작 함수\n  const optionHandlers = {\n    \"정보보기\": () => {\n      console.log(\"정보보기 동작\");\n      navigate(`/profile?username=${profileName}&userID=${friend_id}`);\n    },\n    \"친구추가\": () => {\n      console.log(\"친구추가 동작\");\n      handleChangeFunc();\n    },\n    \"해제\": () => {\n      console.log(\"차단해제 동작\");\n      handleChangeFunc();\n    },\n    \"차단\": () => {\n      console.log(\"차단 동작\");\n      handleChangeFunc();\n    }\n  };\n\n  // 클릭한 버튼에 따라 동작하는 함수\n  const handleChangeFunc = () => {\n    setCheckedAction(prev => ({\n      ...prev,\n      [MemberKey]: true\n    }));\n  };\n  const handleMoveProfile = direction => {\n    const currentList = chattingList.length !== 0 ? [...chattingList] : [...blockedList, ...friendList];\n    const memberIds = currentList.map(member => member.friend_id);\n    const currentIndex = memberIds.indexOf(MemberKey);\n    if (currentIndex === -1 || memberIds.length === 0) return;\n    let newIndex;\n    if (direction === \"next\") {\n      newIndex = (currentIndex + 1) % memberIds.length; // 다음 → 끝이면 0번으로\n    } else {\n      newIndex = (currentIndex - 1 + memberIds.length) % memberIds.length; // 이전 → 0번이면 마지막으로\n    }\n    const newMemberKey = memberIds[newIndex];\n    setClickedProfile(prev => {\n      const updated = Object.fromEntries(Object.keys(prev).map(key => [key, false]));\n      updated[newMemberKey] = true;\n      return updated;\n    });\n  };\n  const currentRef = useRef(null);\n\n  // 프로필 클릭 시 랜더링\n  if (!clickedProfile[MemberKey]) {\n    return null;\n  }\n  ;\n  console.log(clickedProfile);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: currentRef,\n      id: MemberKey,\n      onClick: () => {\n        handleClicked();\n      },\n      className: `flex justify-center items-center bg-black bg-opacity-50 text-black z-50 fixed w-screen h-screen left-0 top-0`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => {\n          e.stopPropagation();\n        },\n        className: `flex flex-col bg-white justify-center items-center w-[600px] h-[800px] rounded-xl`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex w-full justify-end h-[50px]`,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\\uB2EB\\uAE30\",\n            src: \"images/\\uB2EB\\uAE30.png\",\n            className: `h-[30px] w-[30px] mx-4 mt-4 opacity-50 hover:opacity-100 transition-opacity duration-300`,\n            onClick: handleClicked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex flex-col justify-center items-center h-[630px] w-full`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",\n            src: profile_image,\n            className: `w-[400px] h-[400px] rounded-[50%]`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-[2.2rem]`,\n            children: profileName !== undefined ? profileName : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex justify-around border-t-[2px] border-gray-200 h-[120px] w-full`,\n          children: [profileOptions.map((options, index) => {\n            var _ref, _chattingList$;\n            if (userID === MemberKey && index === 1 && options.option === \"친구추가\") {\n              // 로그인한 유저가 친구추가를 할 수 없도록 설정1\n              return null;\n            }\n            if (((_ref = userID === ((_chattingList$ = chattingList[0]) === null || _chattingList$ === void 0 ? void 0 : _chattingList$.friend_id)) !== null && _ref !== void 0 ? _ref : 0) && options.option === \"차단\") {\n              // 로그인한 유저가 차단을 할 수 없도록 설정2\n              return null;\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                optionHandlers[options.option]();\n              },\n              className: `flex flex-col justify-center items-center w-[100px] hover:bg-gray-200 transition-colors duration-200`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: `${options.option}`,\n                src: `${options.img}`,\n                className: `w-[50px] h-45px`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: options.option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this);\n          }), requestComponent !== \"conversation\" && requestComponent !== \"myProfile\" && requestComponent !== \"home\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoveProfile(\"prev\"),\n              className: \"absolute left-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\",\n              children: \"\\u25C0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoveProfile(\"next\"),\n              className: \"absolute right-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\",\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(CommunityButtons, {\n            checkedAction: checkedAction,\n            setCheckedAction: setCheckedAction,\n            title: `${isChecked}`,\n            message: `${profileName !== undefined ? profileName : null}님을 ${isChecked} 하시겠습니까?`,\n            action: `${isChecked}`,\n            index: MemberKey,\n            userID: friend_id,\n            setActionList: setActionList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, MemberKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ProfileModal, \"rcrzU1G2SBcIPLS4OzqxmPu22MM=\", false, function () {\n  return [useNavigate];\n});\n_c = ProfileModal;\nvar _c;\n$RefreshReg$(_c, \"ProfileModal\");","map":{"version":3,"names":["useNavigate","useState","useRef","useEffect","CommunityButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileModal","props","_s","clickedProfile","setClickedProfile","MemberKey","blockedList","friendList","chattingList","profile_image","setActionList","requestComponent","userID","navigate","checkedAction","setCheckedAction","handleClicked","prev","updateClickedMember","isFriend","some","member","friend_id","isChecked","profile","filter","selectedProfile","profileName","name","profileOptions","option","img","optionHandlers","정보보기","console","log","친구추가","handleChangeFunc","해제","차단","handleMoveProfile","direction","currentList","length","memberIds","map","currentIndex","indexOf","newIndex","newMemberKey","updated","Object","fromEntries","keys","key","currentRef","children","ref","id","onClick","className","e","stopPropagation","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","undefined","options","index","_ref","_chattingList$","title","message","action","_c","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/community/ui/profileModal.js"],"sourcesContent":["// client/src/componant/community/ui/profileModal.js\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useState,useRef,useEffect} from \"react\";\r\nimport { CommunityButtons } from \"./button\";\r\n\r\n\r\n\r\n// 프로필 클릭시 나타나는 모달\r\nexport default function ProfileModal(props) {\r\n\r\n    const { \r\n        clickedProfile, \r\n        setClickedProfile, \r\n        MemberKey, \r\n        blockedList =[], \r\n        friendList =[],\r\n        chattingList =[], \r\n        profile_image,\r\n        setActionList,\r\n        requestComponent,\r\n        userID\r\n    } = props;\r\n    const navigate = useNavigate();\r\n\r\n    const [checkedAction, setCheckedAction] = useState({});\r\n\r\n    // 모달 닫기 함수\r\n    const handleClicked = ()=>{\r\n        setClickedProfile(prev => {\r\n            const updateClickedMember = {...prev};\r\n            updateClickedMember[MemberKey] = false;\r\n            return updateClickedMember;\r\n        })\r\n    }\r\n    \r\n    // 이미 친구인지 확인하는 변수\r\n    const isFriend = friendList.some(member => member.friend_id === MemberKey );\r\n\r\n    // 친구리스트 차단리스트 구분 변수\r\n    const isChecked = blockedList.some(member => member.friend_id === MemberKey) \r\n    ? \"해제\" \r\n    // 이미 추가된 사용자면 차단버튼으로 설정\r\n    : isFriend ? \"차단\" : \"친구추가\";\r\n\r\n    // 프로필 이름 설정\r\n    const profile = {\r\n        \"차단\": friendList.filter(member => member.friend_id === MemberKey),\r\n        \"해제\": blockedList.filter(member => member.friend_id === MemberKey),\r\n        \"친구추가\" : chattingList.filter(member => member.friend_id === MemberKey)\r\n    };\r\n\r\n    // 설정된 프로필 이름 변수\r\n    const selectedProfile = profile[isChecked][0];\r\n    const profileName = selectedProfile? selectedProfile.name : chattingList[0].name;\r\n    const friend_id = selectedProfile? selectedProfile.friend_id : chattingList[0].friend_id;\r\n    \r\n    // 프로필 옵션 관리 변수\r\n    const profileOptions = [\r\n        {option: \"정보보기\", img: \"images/검색.png\"},\r\n        {option: isChecked, img: `images/${isChecked}.png`},\r\n    ]\r\n    // 포로필 옵션동작 함수\r\n    const optionHandlers = {\r\n        \"정보보기\": ()=>{console.log(\"정보보기 동작\");\r\n            navigate(`/profile?username=${profileName}&userID=${friend_id}`);\r\n        },\r\n        \"친구추가\": ()=>{console.log(\"친구추가 동작\");\r\n            handleChangeFunc();\r\n        },\r\n        \"해제\": ()=>{console.log(\"차단해제 동작\");\r\n            handleChangeFunc();\r\n        },\r\n        \"차단\": ()=>{console.log(\"차단 동작\");\r\n            handleChangeFunc();\r\n        }\r\n    }\r\n\r\n\r\n    // 클릭한 버튼에 따라 동작하는 함수\r\n    const handleChangeFunc = ()=>{\r\n        setCheckedAction(prev => ({...prev, [MemberKey]: true}));\r\n    }\r\n\r\n    const handleMoveProfile = (direction) => {\r\n    const currentList = chattingList.length !== 0 ? [...chattingList] : [...blockedList, ...friendList];\r\n    const memberIds = currentList.map(member => member.friend_id);\r\n    const currentIndex = memberIds.indexOf(MemberKey);\r\n\r\n\r\n    if (currentIndex === -1 || memberIds.length === 0) return;\r\n\r\n    let newIndex;\r\n    if (direction === \"next\") {\r\n        newIndex = (currentIndex + 1) % memberIds.length;  // 다음 → 끝이면 0번으로\r\n    } else {\r\n        newIndex = (currentIndex - 1 + memberIds.length) % memberIds.length; // 이전 → 0번이면 마지막으로\r\n    }\r\n\r\n    const newMemberKey = memberIds[newIndex];\r\n\r\n    setClickedProfile(prev => {\r\n        const updated = Object.fromEntries(\r\n            Object.keys(prev).map(key => [key, false])\r\n        );\r\n        updated[newMemberKey] = true;\r\n        return updated;\r\n    });\r\n};\r\n\r\n    const currentRef = useRef(null);\r\n\r\n\r\n    // 프로필 클릭 시 랜더링\r\n    if (!clickedProfile[MemberKey]) { return null };\r\n    console.log(clickedProfile);\r\n    return (\r\n        <>\r\n            {/* 프로필 모달 전체영역 */}\r\n            <div\r\n                ref={currentRef}\r\n                id={MemberKey}\r\n                onClick={()=>{handleClicked();}}\r\n                key={MemberKey} className={`flex justify-center items-center bg-black bg-opacity-50 text-black z-50 fixed w-screen h-screen left-0 top-0`}>\r\n                {/* 프로필 모달 요소영역 */}\r\n                <div onClick={(e)=>{e.stopPropagation()}} className={`flex flex-col bg-white justify-center items-center w-[600px] h-[800px] rounded-xl`}>\r\n                    {/* 프로필 닫기 영역 */}\r\n                    <div className={`flex w-full justify-end h-[50px]`}>\r\n                        <img \r\n                        alt=\"닫기\"\r\n                        src=\"images/닫기.png\" \r\n                        className={`h-[30px] w-[30px] mx-4 mt-4 opacity-50 hover:opacity-100 transition-opacity duration-300`}\r\n                        onClick={handleClicked}\r\n                        ></img>\r\n\r\n                    </div>\r\n                    {/* 프로필 정보영역 */}\r\n                    <div className={`flex flex-col justify-center items-center h-[630px] w-full`}>\r\n                        {/* 프로필 이미지 */}\r\n                        <img alt=\"미니프로필\" src={profile_image} className={`w-[400px] h-[400px] rounded-[50%]`}></img>\r\n                        {/* 프로필 이름 */}\r\n                        <p className={`text-[2.2rem]`}>{profileName !== undefined ? profileName : null}</p>\r\n                    </div>\r\n                    {/* 프로필 옵션영역 */}\r\n                    <div className={`flex justify-around border-t-[2px] border-gray-200 h-[120px] w-full`}>\r\n                        {/* 프로필 옵션 변수를 순회하는 함수 */}\r\n                        {profileOptions.map((options,index)=>{\r\n\r\n                            if(userID === MemberKey && index === 1 && options.option === \"친구추가\"){\r\n                                // 로그인한 유저가 친구추가를 할 수 없도록 설정1\r\n                                return null;\r\n                            }\r\n                            if((userID === chattingList[0]?.friend_id?? 0) && options.option === \"차단\"){\r\n                                // 로그인한 유저가 차단을 할 수 없도록 설정2\r\n                                return null;\r\n                            }\r\n                            return(\r\n                                <div \r\n                                onClick={()=> {optionHandlers[options.option]()}}\r\n                                key={index} className={`flex flex-col justify-center items-center w-[100px] hover:bg-gray-200 transition-colors duration-200`}>\r\n                                <img alt={`${options.option}`} src={`${options.img}`} className={`w-[50px] h-45px`}></img>\r\n                                <p>{options.option}</p>\r\n                            </div>\r\n                            )\r\n                        })}\r\n\r\n                        {/* 대화창에서 누르면 버튼 비활성화 */}\r\n                        {requestComponent !== \"conversation\" && requestComponent !== \"myProfile\" && requestComponent !== \"home\" &&\r\n                        <>\r\n                            {/* 왼쪽 이동 버튼 */}\r\n                            <button\r\n                            onClick={() => handleMoveProfile(\"prev\")}\r\n                            className=\"absolute left-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\"\r\n                            >\r\n                            ◀\r\n                            </button>\r\n\r\n                            {/* 오른쪽 이동 버튼 */}\r\n                            <button\r\n                            onClick={() => handleMoveProfile(\"next\")}\r\n                            className=\"absolute right-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\"\r\n                            >\r\n                            ▶\r\n                            </button>\r\n                            \r\n                        </>\r\n                        }\r\n                        {/* 버튼클릭 시 확인메세지 모달 */}\r\n                        {<CommunityButtons\r\n                        checkedAction = {checkedAction}\r\n                        setCheckedAction = {setCheckedAction}\r\n                        title = {`${isChecked}`}\r\n                        message = {`${profileName !== undefined ? profileName : null}님을 ${isChecked} 하시겠습니까?`}\r\n                        action = {`${isChecked}`}\r\n                        index = {MemberKey}\r\n                        userID = {friend_id}\r\n                        setActionList = {setActionList}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}