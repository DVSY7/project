{"ast":null,"code":"// client/createList.js\nimport{useEffect,useState}from\"react\";import Menu from\"./menu.js\";import TopButtons from\"./create/list/TopButtons.js\";import IsPlanned from\"./create/list/IsPlanned.js\";import TagManager from\"./create/list/TagManager.js\";import TitleAndSelectInterest from\"./create/list/TitleAndSelectInterest.js\";import DayList from\"./create/list/DayList.js\";import axios from\"axios\";import{checkedToken}from\"./function/checkedToken.js\";import{fetchUserID}from\"./function/fetchUserID.js\";import{fetchUserInfo}from\"./community/api/fetchUserInfo.js\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function CreateList(){const[name,setName]=useState(\"\");const[userName,setUsername]=useState(\"\");const[userID,setUserID]=useState(\"\");const[userInfo,setUserInfo]=useState(\"\");useEffect(()=>{const getUserInfo=async()=>{try{await checkedToken(setUsername,setName);}catch(error){console.error(error);}};getUserInfo();},[]);useEffect(()=>{const getUserID=async()=>{try{const id=await fetchUserID(name);const userInfo=await fetchUserInfo(name);setUserID(id);setUserInfo(userInfo);}catch(error){console.error(error);}};getUserID();},[name,userName]);useEffect(()=>{console.log(userID);},[userID]);// 계획형, 비계획형 상태관리 스테이트\nconst[isPlanned,setIsPlanned]=useState(true);// 제목과 소개글 상태 추가\nconst[title,setTitle]=useState(\"\");const[text,setText]=useState(\"\");// 마감 날짜\nconst[endDate,setEndDate]=useState(\"\");// 만날 장소\nconst[meetPlace,setMeetPlace]=useState(\"\");// 예산\nconst[budget,setBudget]=useState(\"\");// 실행 기간\nconst[periodStartDate,setPeriodStartDate]=useState(\"\");const[periodEndDate,setPeriodEndDate]=useState(\"\");//선택된 관심사 상태\nconst[selectedInterest,setSelectedInterest]=useState(\"\");// 관심사 선택 항목변수\nconst selectInterest=[\"여행 & 탐험\",\"도전 & 어드벤처\",\"자기계발 & 교육\",\"건강 & 운동\",\"문화 & 예술\",\"요리 & 미식\",\"봉사 & 나눔\",\"취미 & 라이프\",\"기타\"];// 태그 목록\nconst[tags,setTags]=useState([]);// 입력 필드 표시 여부\nconst[showInput,setShowInput]=useState(false);// 현재 입력된 태그\nconst[currentTag,setCurrentTag]=useState(\"\");// 수정 중인 태그의 인덱스\nconst[editingIndex,setEditingIndex]=useState(null);// 수정 중인 태그 값\nconst[editingTag,setEditingTag]=useState(\"\");// 혼자하기, 같이하기 상태관리 스테이트\nconst[Group,setGroup]=useState(true);// 대면, 비대면 여부 상태관리 스테이트\nconst[Offline,setOffline]=useState(true);// 일차 목록 스태이트\nconst[days,setDays]=useState([\"1일차\"]);// 등록된 항목 상태\nconst[registeredItems,setRegisteredItems]=useState({});// 태그 추가 함수\nconst handleAddTag=()=>{if(currentTag.trim()!==\"\"){// 제목과 글에서 단어 추출\nconst titleWords=title.split(/\\s+/).filter(word=>word.length>1);const textWords=text.split(/\\s+/).filter(word=>word.length>1);// 태그로 사용할수 있는 단어 목록 생성\nconst availableWords=[...new Set([...titleWords,...textWords])];// 앞에 #이 붙였으면 자르고, 없으면 그래로 비교\nconst tagWithoutHash=currentTag.startsWith(\"#\")?currentTag.slice(1):currentTag;// 입력된 태그다 제목이나 글에 포함된 단어인지 확인\nif(!availableWords.some(word=>word.includes(tagWithoutHash))){alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");// 잘못된 태그 입력시 입력값 초기화\nsetCurrentTag(\"\");// 잘못된 태그 입력시 입력 필드 숨김\nsetShowInput(false);return;}// 태그 앞에 #이 없으면 추가\nconst formattedTag=currentTag.startsWith(\"#\")?currentTag.trim():`#${currentTag.trim()}`;setTags([...tags,formattedTag]);// 입력 필드 초기화\nsetCurrentTag(\"\");// 입력 필드 숨기기\nsetShowInput(false);}};// 태그 수정 완료 함수\nconst handleEditTag=()=>{if(editingTag.trim()!==\"\"){// 제목과 글에서 단어 추출\nconst titleWords=title.split(/\\s+/).filter(word=>word.length>1);const textWords=text.split(/\\s+/).filter(word=>word.length>1);const availableWords=[...new Set([...titleWords,...textWords])];// 수정된 태그가 앞에 #붙어있으면 자르고, 없으면 그대로 비교\nconst tagWithoutHash=editingTag.startsWith(\"#\")?editingTag.slice(1):editingTag;// 포함된 단어가 없다면 alert창 실행\nif(!availableWords.some(word=>word.includes(tagWithoutHash))){alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");return;}const formattedTag=editingTag.startsWith(\"#\")?editingTag.trim():`#${editingTag.trim()}`;const updatedTags=[...tags];// 수정된 태그 저장\nupdatedTags[editingIndex]=formattedTag;setTags(updatedTags);}// 수정 상태 초기화\nsetEditingIndex(null);// 수정 필드 초기화\nsetEditingTag(\"\");};// 제목이나 글 수정 할때마다 태그 검사\nuseEffect(()=>{const titleWords=title.split(/\\s+/).filter(word=>word.length>1);const textWords=text.split(/\\s+/).filter(word=>word.length>1);const availableWords=[...new Set([...titleWords,textWords])];// 태그들 중에서 유효하지 않은 태그 제거\nconst validTags=tags.filter(tag=>{const tagWithoutHash=tag.startsWith(\"#\")?tag.slice(1):tag;return!availableWords.some(word=>word.includes(tagWithoutHash));});// 유효하지 않은 태그가 있다면 태그 목록 업데이트\nif(validTags.length!==tags.length){setTags(validTags);}},[title,text]);// 태그 삭제 함수\nconst handleDeleteTag=index=>{// 해당 인덱스의 태그 제거\nconst updatedTags=tags.filter((_,i)=>i!==index);// 삭제할 태그만 삭제, 나머지 남김\nsetTags(updatedTags);};// 엔터 키로 태그 추가\nconst handleKeyPress=e=>{if(e.key===\"Enter\"){handleAddTag();}};// AI 추천 결과 자동 적용\nuseEffect(()=>{const aiRecommendedItems=localStorage.getItem('aiRecommendedItems');const aiRecommendedTitle=localStorage.getItem('aiRecommendedTitle');const aiRecommendedDescription=localStorage.getItem('aiRecommendedDescription');if(aiRecommendedItems){try{const parsedItems=JSON.parse(aiRecommendedItems);// 일차 수에 맞게 days 배열 업데이트\nconst dayKeys=Object.keys(parsedItems);if(dayKeys.length>0){setDays(dayKeys);}// AI 추천 항목들을 registeredItems에 적용\nsetRegisteredItems(parsedItems);// 제목과 설명도 자동으로 설정\nif(aiRecommendedTitle){setTitle(aiRecommendedTitle);}if(aiRecommendedDescription){setText(aiRecommendedDescription);}// localStorage에서 데이터 삭제 (한 번만 적용되도록)\nlocalStorage.removeItem('aiRecommendedItems');localStorage.removeItem('aiRecommendedTitle');localStorage.removeItem('aiRecommendedDescription');console.log('AI 추천 결과가 성공적으로 적용되었습니다:',parsedItems);}catch(error){console.error('AI 추천 결과 적용 중 오류:',error);alert('AI 추천 결과 적용 중 오류가 발생했습니다.');}}},[]);// 등록버튼 로직\nconst handleSubmit=async()=>{try{if(!title.trim()){alert(\"제목을 입력해주세요\");return;}if(!text.trim()){alert(\"소개글을 입력해주세요\");return;}if(!selectedInterest){alert(\"테마를 선택해주세요\");return;}// ---일차별 항목 유효성 검사---\nconst hasValidItems=days.every((day,index)=>{const dayItems=registeredItems[day]||[];// 각 일차에 등로된 항목들\nif(dayItems.length===0){alert(`${index+1}일차에 최소 하나이상의 항목(이미지 또는 장소)를 등록해주세요`);return false;}return true;});// 유효하지 않으면 아래 코드 실행하지 않음\nif(!hasValidItems)return;// 계획형일 경우에만\nif(isPlanned){if(!endDate){alert(\"마감 날짜를 설정해주세요 📅\");return;}if(!meetPlace){alert(\"만날 장소를 설정헤주세요 📍\");return;}if(!budget){alert(\"예산을 입력해주세요 💰\");return;}if(!periodStartDate||!periodEndDate){alert(\"실행 기간을 설정해주세요 📆\");return;}}// ---서버에 보낼 데이터 구성---\nconst listData={userID:userID[0].id,title:title.trim(),description:text.trim(),isPlanned,isGroup:Group,maxParticipants:Group?parseInt(document.querySelector(\"select\").value):1,isOffline:Offline,interest:selectedInterest,days:days.map((day,index)=>({dayNumber:index+1,// 각 날짜에 등록된 항목들(사진, 장소)\nitems:registeredItems[day]||[]})),// # 제거\ntags:tags.map(tag=>tag.replace(/^#/,\"\")),// 계획형일 때만 추가 필드들 포함\n...(isPlanned&&{endDate:endDate,meetPlace:meetPlace,budget:parseInt(budget)||0,periodStartDate:periodStartDate,periodEndDate:periodEndDate})};// post 요청으로 로컬호스트 5000번에 보냄, 2번째 인자: 전송할 json데이터, 3번째 인자: 옴션\nconst response=await axios.post(\"http://localhost:5000/api/lists/create\",listData,{headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${localStorage.getItem(\"token\")}`}});if(!window.confirm(\"리스트 작성을 완료하시겠습니까?\")){return;};if(response.data.success){alert(\"리스트가 성공적으로 등록되었습니다.\");// 등록 성공 후 홈으로 이동\nwindow.location.href=\"/home\";}}catch(error){var _error$response,_error$response$data;console.error(\"리스트 등록 중 오류 발생: \",error);alert(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"리스트 등록 중 오류가 발생했습니다.\");}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 grid-rows-9 sm:grid-rows-1 sm:grid-cols-sm-minmax sm:grid-cols-9 h-screen overflow-x-hidden\",children:[/*#__PURE__*/_jsx(Menu,{current_src:5}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col flex-wrap row-span-9 sm:col-span-8 \",children:/*#__PURE__*/_jsxs(\"div\",{className:`w-full h-full grid grid-cols-[3fr_2fr]`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-rows-[1fr_7fr_1fr] px-4 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex grid grid-rows-[0.5fr_1fr]\",children:[/*#__PURE__*/_jsx(TopButtons,{isPlanned:isPlanned,setIsPlanned:setIsPlanned,Group:Group,setGroup:setGroup,Offline:Offline,setOffline:setOffline}),/*#__PURE__*/_jsx(TitleAndSelectInterest,{selectInterest:selectInterest,selectedInterest:selectedInterest,setSelectedInterest:setSelectedInterest,title:title,setTitle:setTitle,userInfo:userInfo})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-rows-[1fr_10fr]\",children:/*#__PURE__*/_jsx(DayList,{days:days,setDays:setDays,registeredItems:registeredItems,setRegisteredItems:setRegisteredItems})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center\",children:/*#__PURE__*/_jsx(TagManager,{tags:tags,setTags:setTags,showInput:showInput,setShowInput:setShowInput,currentTag:currentTag,setCurrentTag:setCurrentTag,editingIndex:editingIndex,setEditingIndex:setEditingIndex,editingTag:editingTag,setEditingTag:setEditingTag,handleAddTag:handleAddTag,handleEditTag:handleEditTag,handleDeleteTag:handleDeleteTag,handleKeyPress:handleKeyPress,title:title,setTitle:setTitle})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border-l flex flex-col h-full\",children:isPlanned?/*#__PURE__*/// 계획형: 40% (마감날짜/만날장소/예산/실행기간) + 50% (글작성) + 10% (등록하기)\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-[40%] flex items-center justify-center\",children:/*#__PURE__*/_jsx(IsPlanned,{setEndDate:setEndDate,setMeetPlace:setMeetPlace,setBudget:setBudget,setPeriodStartDate:setPeriodStartDate,setPeriodEndDate:setPeriodEndDate})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[50%] flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"w-full h-full border rounded m-4 p-4 resize-none\",placeholder:\"\\uC18C\\uAC1C \\uAE00\\uC744 \\uC790\\uC720\\uB86D\\uAC8C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:text,onChange:e=>setText(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[10%] flex justify-end items-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\",onClick:handleSubmit,children:\"\\uB4F1\\uB85D\\uD558\\uAE30\"})})]}):/*#__PURE__*/// 자유형: 90% (글작성) + 10% (등록하기)\n_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-[90%] flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"w-full h-full border rounded p-2 resize-none\",placeholder:\"\\uC18C\\uAC1C \\uAE00\\uC744 \\uC790\\uC720\\uB86D\\uAC8C \\uC785\\uB825\\uD558\\uC138\\uC694\",value:text,onChange:e=>setText(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[10%] flex justify-end items-center\",children:/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\",onClick:handleSubmit,children:\"\\uB4F1\\uB85D\\uD558\\uAE30\"})})]})})]})})]})});}","map":{"version":3,"names":["useEffect","useState","Menu","TopButtons","IsPlanned","TagManager","TitleAndSelectInterest","DayList","axios","checkedToken","fetchUserID","fetchUserInfo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CreateList","name","setName","userName","setUsername","userID","setUserID","userInfo","setUserInfo","getUserInfo","error","console","getUserID","id","log","isPlanned","setIsPlanned","title","setTitle","text","setText","endDate","setEndDate","meetPlace","setMeetPlace","budget","setBudget","periodStartDate","setPeriodStartDate","periodEndDate","setPeriodEndDate","selectedInterest","setSelectedInterest","selectInterest","tags","setTags","showInput","setShowInput","currentTag","setCurrentTag","editingIndex","setEditingIndex","editingTag","setEditingTag","Group","setGroup","Offline","setOffline","days","setDays","registeredItems","setRegisteredItems","handleAddTag","trim","titleWords","split","filter","word","length","textWords","availableWords","Set","tagWithoutHash","startsWith","slice","some","includes","alert","formattedTag","handleEditTag","updatedTags","validTags","tag","handleDeleteTag","index","_","i","handleKeyPress","e","key","aiRecommendedItems","localStorage","getItem","aiRecommendedTitle","aiRecommendedDescription","parsedItems","JSON","parse","dayKeys","Object","keys","removeItem","handleSubmit","hasValidItems","every","day","dayItems","listData","description","isGroup","maxParticipants","parseInt","document","querySelector","value","isOffline","interest","map","dayNumber","items","replace","response","post","headers","Authorization","window","confirm","data","success","location","href","_error$response","_error$response$data","message","children","className","current_src","placeholder","onChange","target","onClick"],"sources":["C:/git/project/client/src/componant/createList.js"],"sourcesContent":["// client/createList.js\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Menu from \"./menu.js\";\r\nimport TopButtons from \"./create/list/TopButtons.js\";\r\nimport IsPlanned from \"./create/list/IsPlanned.js\";\r\nimport TagManager from \"./create/list/TagManager.js\";\r\nimport TitleAndSelectInterest from \"./create/list/TitleAndSelectInterest.js\";\r\nimport DayList from \"./create/list/DayList.js\";\r\nimport axios from \"axios\";\r\nimport { checkedToken } from \"./function/checkedToken.js\";\r\nimport { fetchUserID } from \"./function/fetchUserID.js\";\r\nimport { fetchUserInfo } from \"./community/api/fetchUserInfo.js\";\r\n\r\nexport default function CreateList() {\r\n\r\n\r\n  const [name,setName] = useState(\"\");\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    const getUserInfo = async()=>{\r\n      try{\r\n        await checkedToken(setUsername, setName);\r\n      }catch(error){\r\n        console.error(error);\r\n      }\r\n    }\r\n    getUserInfo();\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    const getUserID = async()=>{\r\n      try{\r\n        const id = await fetchUserID(name);\r\n        const userInfo = await fetchUserInfo(name);\r\n        setUserID(id);\r\n        setUserInfo(userInfo);\r\n      }catch(error){\r\n        console.error(error);\r\n      }\r\n    }\r\n    getUserID();\r\n  },[name,userName]);\r\n\r\n  useEffect(()=>{\r\n    console.log(userID);\r\n  },[userID])\r\n\r\n  // 계획형, 비계획형 상태관리 스테이트\r\n  const [isPlanned, setIsPlanned] = useState(true);\r\n  // 제목과 소개글 상태 추가\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  // 마감 날짜\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  // 만날 장소\r\n  const [meetPlace, setMeetPlace] = useState(\"\");\r\n  // 예산\r\n  const [budget, setBudget] = useState(\"\");\r\n  // 실행 기간\r\n  const [periodStartDate, setPeriodStartDate] = useState(\"\");\r\n  const [periodEndDate, setPeriodEndDate] = useState(\"\");\r\n\r\n  //선택된 관심사 상태\r\n  const [selectedInterest, setSelectedInterest] = useState(\"\");\r\n  // 관심사 선택 항목변수\r\n  const selectInterest = [\r\n    \"여행 & 탐험\",\r\n    \"도전 & 어드벤처\",\r\n    \"자기계발 & 교육\",\r\n    \"건강 & 운동\",\r\n    \"문화 & 예술\",\r\n    \"요리 & 미식\",\r\n    \"봉사 & 나눔\",\r\n    \"취미 & 라이프\",\r\n    \"기타\",\r\n  ];\r\n\r\n  // 태그 목록\r\n  const [tags, setTags] = useState([]);\r\n  // 입력 필드 표시 여부\r\n  const [showInput, setShowInput] = useState(false);\r\n  // 현재 입력된 태그\r\n  const [currentTag, setCurrentTag] = useState(\"\");\r\n  // 수정 중인 태그의 인덱스\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n  // 수정 중인 태그 값\r\n  const [editingTag, setEditingTag] = useState(\"\");\r\n\r\n  // 혼자하기, 같이하기 상태관리 스테이트\r\n  const [Group, setGroup] = useState(true);\r\n  // 대면, 비대면 여부 상태관리 스테이트\r\n  const [Offline, setOffline] = useState(true);\r\n\r\n  // 일차 목록 스태이트\r\n  const [days, setDays] = useState([\"1일차\"]);\r\n  // 등록된 항목 상태\r\n  const [registeredItems, setRegisteredItems] = useState({});\r\n\r\n  // 태그 추가 함수\r\n  const handleAddTag = () => {\r\n    if (currentTag.trim() !== \"\") {\r\n      // 제목과 글에서 단어 추출\r\n      const titleWords = title.split(/\\s+/).filter((word) => word.length > 1);\r\n      const textWords = text.split(/\\s+/).filter((word) => word.length > 1);\r\n      // 태그로 사용할수 있는 단어 목록 생성\r\n      const availableWords = [...new Set([...titleWords, ...textWords])];\r\n\r\n      // 앞에 #이 붙였으면 자르고, 없으면 그래로 비교\r\n      const tagWithoutHash = currentTag.startsWith(\"#\")\r\n        ? currentTag.slice(1)\r\n        : currentTag;\r\n      // 입력된 태그다 제목이나 글에 포함된 단어인지 확인\r\n      if (!availableWords.some((word) => word.includes(tagWithoutHash))) {\r\n        alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");\r\n        // 잘못된 태그 입력시 입력값 초기화\r\n        setCurrentTag(\"\");\r\n        // 잘못된 태그 입력시 입력 필드 숨김\r\n        setShowInput(false);\r\n        return;\r\n      }\r\n\r\n      // 태그 앞에 #이 없으면 추가\r\n      const formattedTag = currentTag.startsWith(\"#\")\r\n        ? currentTag.trim()\r\n        : `#${currentTag.trim()}`;\r\n\r\n      setTags([...tags, formattedTag]);\r\n      // 입력 필드 초기화\r\n      setCurrentTag(\"\");\r\n      // 입력 필드 숨기기\r\n      setShowInput(false);\r\n    }\r\n  };\r\n\r\n  // 태그 수정 완료 함수\r\n  const handleEditTag = () => {\r\n    if (editingTag.trim() !== \"\") {\r\n      // 제목과 글에서 단어 추출\r\n      const titleWords = title.split(/\\s+/).filter((word) => word.length > 1);\r\n      const textWords = text.split(/\\s+/).filter((word) => word.length > 1);\r\n      const availableWords = [...new Set([...titleWords, ...textWords])];\r\n\r\n      // 수정된 태그가 앞에 #붙어있으면 자르고, 없으면 그대로 비교\r\n      const tagWithoutHash = editingTag.startsWith(\"#\")\r\n        ? editingTag.slice(1)\r\n        : editingTag;\r\n      // 포함된 단어가 없다면 alert창 실행\r\n      if (!availableWords.some((word) => word.includes(tagWithoutHash))) {\r\n        alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");\r\n        return;\r\n      }\r\n\r\n      const formattedTag = editingTag.startsWith(\"#\")\r\n        ? editingTag.trim()\r\n        : `#${editingTag.trim()}`;\r\n\r\n      const updatedTags = [...tags];\r\n      // 수정된 태그 저장\r\n      updatedTags[editingIndex] = formattedTag;\r\n      setTags(updatedTags);\r\n    }\r\n    // 수정 상태 초기화\r\n    setEditingIndex(null);\r\n    // 수정 필드 초기화\r\n    setEditingTag(\"\");\r\n  };\r\n\r\n  // 제목이나 글 수정 할때마다 태그 검사\r\n  useEffect(() => {\r\n    const titleWords = title.split(/\\s+/).filter((word) => word.length > 1);\r\n    const textWords = text.split(/\\s+/).filter((word) => word.length > 1);\r\n    const availableWords = [...new Set([...titleWords, textWords])];\r\n\r\n    // 태그들 중에서 유효하지 않은 태그 제거\r\n    const validTags = tags.filter((tag) => {\r\n      const tagWithoutHash = tag.startsWith(\"#\") ? tag.slice(1) : tag;\r\n      return !availableWords.some((word) => word.includes(tagWithoutHash));\r\n    });\r\n    // 유효하지 않은 태그가 있다면 태그 목록 업데이트\r\n    if (validTags.length !== tags.length) {\r\n      setTags(validTags);\r\n    }\r\n  }, [title, text]);\r\n\r\n  // 태그 삭제 함수\r\n  const handleDeleteTag = (index) => {\r\n    // 해당 인덱스의 태그 제거\r\n    const updatedTags = tags.filter((_, i) => i !== index); // 삭제할 태그만 삭제, 나머지 남김\r\n    setTags(updatedTags);\r\n  };\r\n\r\n  // 엔터 키로 태그 추가\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddTag();\r\n    }\r\n  };\r\n\r\n  // AI 추천 결과 자동 적용\r\n  useEffect(() => {\r\n    const aiRecommendedItems = localStorage.getItem('aiRecommendedItems');\r\n    const aiRecommendedTitle = localStorage.getItem('aiRecommendedTitle');\r\n    const aiRecommendedDescription = localStorage.getItem('aiRecommendedDescription');\r\n    \r\n    if (aiRecommendedItems) {\r\n      try {\r\n        const parsedItems = JSON.parse(aiRecommendedItems);\r\n        \r\n        // 일차 수에 맞게 days 배열 업데이트\r\n        const dayKeys = Object.keys(parsedItems);\r\n        if (dayKeys.length > 0) {\r\n          setDays(dayKeys);\r\n        }\r\n        \r\n        // AI 추천 항목들을 registeredItems에 적용\r\n        setRegisteredItems(parsedItems);\r\n        \r\n        // 제목과 설명도 자동으로 설정\r\n        if (aiRecommendedTitle) {\r\n          setTitle(aiRecommendedTitle);\r\n        }\r\n        if (aiRecommendedDescription) {\r\n          setText(aiRecommendedDescription);\r\n        }\r\n        \r\n        // localStorage에서 데이터 삭제 (한 번만 적용되도록)\r\n        localStorage.removeItem('aiRecommendedItems');\r\n        localStorage.removeItem('aiRecommendedTitle');\r\n        localStorage.removeItem('aiRecommendedDescription');\r\n        \r\n        console.log('AI 추천 결과가 성공적으로 적용되었습니다:', parsedItems);\r\n      } catch (error) {\r\n        console.error('AI 추천 결과 적용 중 오류:', error);\r\n        alert('AI 추천 결과 적용 중 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // 등록버튼 로직\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (!title.trim()) {\r\n        alert(\"제목을 입력해주세요\");\r\n        return;\r\n      }\r\n      if (!text.trim()) {\r\n        alert(\"소개글을 입력해주세요\");\r\n        return;\r\n      }\r\n      if (!selectedInterest) {\r\n        alert(\"테마를 선택해주세요\");\r\n        return;\r\n      }\r\n\r\n      // ---일차별 항목 유효성 검사---\r\n      const hasValidItems = days.every((day, index) => {\r\n        const dayItems = registeredItems[day] || []; // 각 일차에 등로된 항목들\r\n        if (dayItems.length === 0) {\r\n          alert(\r\n            `${\r\n              index + 1\r\n            }일차에 최소 하나이상의 항목(이미지 또는 장소)를 등록해주세요`\r\n          );\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n\r\n      \r\n      // 유효하지 않으면 아래 코드 실행하지 않음\r\n      if (!hasValidItems) return;\r\n\r\n      // 계획형일 경우에만\r\n      if(isPlanned){\r\n        if(!endDate){\r\n          alert(\"마감 날짜를 설정해주세요 📅\");\r\n          return;\r\n        }\r\n        if(!meetPlace){\r\n          alert(\"만날 장소를 설정헤주세요 📍\");\r\n          return;\r\n        }\r\n        if(!budget){\r\n          alert(\"예산을 입력해주세요 💰\");\r\n          return;\r\n        }\r\n        if(!periodStartDate || !periodEndDate){\r\n          alert(\"실행 기간을 설정해주세요 📆\");\r\n          return;\r\n        }  \r\n      }\r\n\r\n      // ---서버에 보낼 데이터 구성---\r\n      const listData = {\r\n        userID:userID[0].id,\r\n        title: title.trim(),\r\n        description: text.trim(),\r\n        isPlanned,\r\n        isGroup: Group,\r\n        maxParticipants: Group\r\n          ? parseInt(document.querySelector(\"select\").value)\r\n          : 1,\r\n        isOffline: Offline,\r\n        interest: selectedInterest,\r\n        days: days.map((day, index) => ({\r\n          dayNumber: index + 1,\r\n          // 각 날짜에 등록된 항목들(사진, 장소)\r\n          items: registeredItems[day] || [],\r\n        })),\r\n        // # 제거\r\n        tags: tags.map((tag) => tag.replace(/^#/, \"\")),\r\n        // 계획형일 때만 추가 필드들 포함\r\n        ...(isPlanned && {\r\n          endDate: endDate,\r\n          meetPlace: meetPlace,\r\n          budget: parseInt(budget) || 0,\r\n          periodStartDate: periodStartDate,\r\n          periodEndDate: periodEndDate,\r\n        }),\r\n\r\n      };\r\n\r\n      // post 요청으로 로컬호스트 5000번에 보냄, 2번째 인자: 전송할 json데이터, 3번째 인자: 옴션\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/lists/create\",\r\n        listData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if(!window.confirm(\"리스트 작성을 완료하시겠습니까?\")){\r\n        return;\r\n      };\r\n\r\n      if (response.data.success) {\r\n        alert(\"리스트가 성공적으로 등록되었습니다.\");\r\n        // 등록 성공 후 홈으로 이동\r\n        window.location.href = \"/home\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"리스트 등록 중 오류 발생: \", error);\r\n      alert(\r\n        error.response?.data?.message || \"리스트 등록 중 오류가 발생했습니다.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*가장 바깥영역 화면의 최대로 설정*/}\r\n      <div className=\"grid grid-cols-1 grid-rows-9 sm:grid-rows-1 sm:grid-cols-sm-minmax sm:grid-cols-9 h-screen overflow-x-hidden\">\r\n        {/* 왼쪽: 가로 1 비율 (1/9) */}\r\n        <Menu current_src={5} />\r\n        {/* 오른쪽: 가로 8 비율 (8/9) */}\r\n        <div className=\"flex flex-col flex-wrap row-span-9 sm:col-span-8 \">\r\n          {/* <div className=\"flex items-center justify-center  w-full h-full\"> */}\r\n          <div className={`w-full h-full grid grid-cols-[3fr_2fr]`}>\r\n            {/* 왼쪽 영역 */}\r\n            <div className=\"grid grid-rows-[1fr_7fr_1fr] px-4 py-8\">\r\n              {/* 상단 영역 */}\r\n              <div className=\"flex grid grid-rows-[0.5fr_1fr]\">\r\n                <TopButtons\r\n                  isPlanned={isPlanned}\r\n                  setIsPlanned={setIsPlanned}\r\n                  Group={Group}\r\n                  setGroup={setGroup}\r\n                  Offline={Offline}\r\n                  setOffline={setOffline}\r\n                />\r\n                {/* 제목, 프로필, 관심사 선택 영역 */}\r\n                <TitleAndSelectInterest\r\n                  selectInterest={selectInterest}\r\n                  selectedInterest={selectedInterest}\r\n                  setSelectedInterest={setSelectedInterest}\r\n                  title={title}\r\n                  setTitle={setTitle}\r\n                  userInfo={userInfo}\r\n                />\r\n              </div>\r\n              {/* 중간 영역 */}\r\n              {/* 일차 추가 버튼 */}\r\n              <div className=\"grid grid-rows-[1fr_10fr]\">\r\n                <DayList\r\n                  days={days}\r\n                  setDays={setDays}\r\n                  registeredItems={registeredItems}\r\n                  setRegisteredItems={setRegisteredItems}\r\n                />\r\n              </div>\r\n              {/* 하단 영역 */}\r\n              <div className=\"flex items-center\">\r\n                <TagManager\r\n                  tags={tags}\r\n                  setTags={setTags}\r\n                  showInput={showInput}\r\n                  setShowInput={setShowInput}\r\n                  currentTag={currentTag}\r\n                  setCurrentTag={setCurrentTag}\r\n                  editingIndex={editingIndex}\r\n                  setEditingIndex={setEditingIndex}\r\n                  editingTag={editingTag}\r\n                  setEditingTag={setEditingTag}\r\n                  handleAddTag={handleAddTag}\r\n                  handleEditTag={handleEditTag}\r\n                  handleDeleteTag={handleDeleteTag}\r\n                  handleKeyPress={handleKeyPress}\r\n                  title={title}\r\n                  setTitle={setTitle}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* 오른쪽 영역 */}\r\n            <div className=\"border-l flex flex-col h-full\">\r\n              {isPlanned ? (\r\n                // 계획형: 40% (마감날짜/만날장소/예산/실행기간) + 50% (글작성) + 10% (등록하기)\r\n                <>\r\n                  <div className=\"h-[40%] flex items-center justify-center\">\r\n                    <IsPlanned\r\n                      setEndDate={setEndDate}\r\n                      setMeetPlace={setMeetPlace}\r\n                      setBudget={setBudget}\r\n                      setPeriodStartDate={setPeriodStartDate}\r\n                      setPeriodEndDate={setPeriodEndDate}\r\n                    />\r\n                  </div>\r\n                  <div className=\"h-[50%] flex items-center justify-center\">\r\n                    <textarea\r\n                      className=\"w-full h-full border rounded m-4 p-4 resize-none\"\r\n                      placeholder=\"소개 글을 자유롭게 입력하세요\"\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"h-[10%] flex justify-end items-center\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      등록하기\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                // 자유형: 90% (글작성) + 10% (등록하기)\r\n                <>\r\n                  <div className=\"h-[90%] flex items-center justify-center\">\r\n                    <textarea\r\n                      className=\"w-full h-full border rounded p-2 resize-none\"\r\n                      placeholder=\"소개 글을 자유롭게 입력하세요\"\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"h-[10%] flex justify-end items-center\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      등록하기\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}