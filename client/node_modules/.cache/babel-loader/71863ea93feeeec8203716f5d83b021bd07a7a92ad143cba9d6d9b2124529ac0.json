{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\create\\\\list\\\\DayList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// client/DayList.js\n\nimport KakaoMap from \"./KakaoMap\";\nimport ListAddPhoto from \"./ListAddPhoto\";\nimport { useState } from \"react\";\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n// 드래그 가능한 일차 버튼 컴포넌트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DraggableDayButton = ({\n  day,\n  index,\n  moveDay,\n  isActive,\n  onClick\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'DAY',\n    item: {\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: 'DAY',\n    hover: draggedItem => {\n      if (draggedItem.index !== index) {\n        moveDay(draggedItem.index, index);\n        draggedItem.index = index;\n      }\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => drag(drop(node)),\n    onClick: onClick,\n    className: `font-sans text-white bg-blue-500 mr-1 rounded-2xl flex items-center justify-center px-4 py-2 cursor-move transition-all duration-200 ${isActive ? \"bg-blue-500 text-white\" : \"bg-gray-200\"} ${isDragging ? 'opacity-50 scale-110 shadow-lg' : ''} ${isOver ? 'border-2 border-blue-400 scale-105' : ''}`,\n    children: day\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// 드래그 가능한 아이템 컴포넌트\n_s(DraggableDayButton, \"qr0Lh5MjhmkSaJ+8pvusl1bqvDo=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = DraggableDayButton;\nconst DraggableItem = ({\n  item,\n  index,\n  moveItem,\n  handleEditItem,\n  handleDeleteItem\n}) => {\n  _s2();\n  // item: 항목 데이터 (장소 또는 이미지)\n  // index: 현재 아이템의 리스트 내 위치\n  // moveItem: 드래그된 아이템을 새로운 위치로 이동시키는 함수\n\n  // useDrag 훅으로 드래그 가능한 요소로 설정\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'ITEM',\n    // 드래그 타입\n    item: {\n      index\n    },\n    // 드래그되는 항목의 데이터\n    collect: monitor => ({\n      isDragging: monitor.isDragging() // 드래그 중인지 여부를 수집\n    })\n  });\n\n  // useDrop 훅으로 드롭 가능한 영역 결정\n  const [, drop] = useDrop({\n    accept: 'ITEM',\n    // 드롭 가능한 항목 타입\n    hover: draggedItem => {\n      // 다른 위치로 드래그했을 때만 동작\n      if (draggedItem.index !== index) {\n        moveItem(draggedItem.index, index); // 항목 위치 바꾸기\n        draggedItem.index = index; // 드래그 된 항목의 인덱스도 엡데이트\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => drag(drop(node)),\n    className: `flex items-center rounded-lg bg-white shadow mb-4 h-36 ${isDragging ? 'opacity-50' : ''}`,\n    style: {\n      cursor: 'move'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image || `images/장소준비중.png`,\n        alt: \"\\uB4F1\\uB85D\\uB41C \\uC774\\uBBF8\\uC9C0\",\n        className: \"ml-2 w-48 h-32 object-cover rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-lg mb-2\",\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), item.type === 'place' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mb-1\",\n          children: item.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mb-1\",\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), item.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mb-1\",\n          children: item.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), item.placeUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.placeUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"inline-flex items-center px-1 py-1 text-sm text-blue-600 rounded-lg hover:bg-blue-100 transition-colors\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uC0C1\\uC138\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-2 pr-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditItem(item),\n        className: \"px-3 py-1 rounded hover:text-blue-600\",\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteItem(item.id),\n        className: \"px-3 py-1 rounded hover:text-blue-600\",\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s2(DraggableItem, \"FSfJ4ie57JY5to1rF8fuHph4Yps=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c2 = DraggableItem;\nexport default function DayList({\n  days,\n  setDays,\n  registeredItems,\n  setRegisteredItems\n}) {\n  _s3();\n  // 사진 첨부 표시 여부\n  const [showImageInput, setshowImageInput] = useState(false);\n  // 이미지 URL 상태\n  const [ImageSrc, setImageSrc] = useState(null);\n  // 텍스트 상태\n  const [text, setText] = useState(\"\");\n\n  // 사진 첨부 수정\n  const [editingItem, setEditingItem] = useState(null);\n  const [editText, setEditText] = useState(\"\");\n  const [editImage, setEditImage] = useState(null);\n\n  // 현재 활성화된 날짜\n  const [activeDay, setActiveDay] = useState(\"1일차\");\n\n  // 버튼 표시 여부 스테이트\n  const [showAddDayButton, setShowAddDayButton] = useState(true);\n  // 지도 표시 여부\n  const [showMap, setShowMap] = useState(false);\n  // 장소 수정\n  const [editingPlace, setEditingPlace] = useState(null);\n\n  // 이미지 업로드 핸들러\n  const handleImageUpload = async e => {\n    var _e$target$files;\n    e.stopPropagation(); // 이벤트 버블링 중지\n    e.preventDefault(); // 기본 동작 방지 (페이지 이동, 제출 등)\n\n    // 1. 파일 선택\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]; // 첫번째 파일 선택\n    if (!file) return;\n\n    // 2. 파일 크기 제한 (10MB)\n    if (file.size > 10 * 1024 * 1024) {\n      alert(\"파일 크기는 10MB 이하여야 합니다.\");\n      e.target.value = null;\n      return;\n    }\n    try {\n      // 3. FormData 생성\n      const formData = new FormData();\n      formData.append('image', file);\n\n      // 4. 서버로 POST 요청\n      const response = await fetch('http://localhost:5000/api/images/upload', {\n        method: 'POST',\n        body: formData\n      });\n\n      // 5. 서버 응답 처리\n      const result = await response.json();\n      if (result.success) {\n        // 이미지 경로 설정 (서버의 정적 파일 경로)\n        const imageUrl = `http://localhost:5000/${result.imagePath}`;\n        setImageSrc(imageUrl);\n        console.log('이미지가 성공적으로 업로드되었습니다:', result.filename);\n      } else {\n        alert('이미지 업로드에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('이미지 업로드 오류:', error);\n      alert('이미지 업로드 중 오류가 발생했습니다.');\n    }\n\n    // 파일 선택기 초기화 (중복 첨부 방지용)\n    e.target.value = null;\n  };\n\n  // 일차 추가 함수\n  const handleAddDay = () => {\n    const newDay = `${days.length + 1}일차`;\n    if (days.length < 10) {\n      // 10일차 까지만\n      setDays([...days, newDay]);\n    }\n  };\n\n  // 클릭한 날자 활성화\n  const handleDayClick = day => {\n    setActiveDay(day);\n  };\n\n  // 이미지 등록 로직\n  const handleRegisterForActiveDay = () => {\n    if (!ImageSrc) {\n      alert(\"이미지를 첨부해주세요\");\n      return;\n    } else if (text.trim() === \"\") {\n      alert(\"텍스트를 입력해주세요\");\n      return;\n    }\n\n    // 이미지와 글이 모두 입력된 경우에만 등록 가능\n    setRegisteredItems(prevItems => {\n      const existingItems = prevItems[activeDay] || [];\n\n      // 수정 할 때\n      if (editingItem) {\n        const updatedItems = {\n          ...prevItems,\n          [activeDay]: existingItems.map(item => item.id === editingItem.id ? {\n            ...item,\n            description: text,\n            image: ImageSrc\n          } : item)\n        };\n        console.log('수정 후 등록된 모든 항목:', updatedItems);\n        return updatedItems;\n      }\n\n      // 이미지 등록 하루 한개 제한\n      const hasImage = existingItems.some(item => item.type === \"image\");\n      if (hasImage) {\n        return prevItems;\n      }\n\n      // 새로 등록할 때\n      const placeItems = existingItems.filter(item => item.type === 'place');\n      const newItems = {\n        ...prevItems,\n        [activeDay]: [{\n          image: ImageSrc,\n          description: text,\n          type: \"image\",\n          id: Date.now()\n        }, ...placeItems]\n      };\n      console.log('이미지 등록 후 모든 항목:', newItems);\n      return newItems;\n    });\n\n    // 초기화\n    setEditingItem(null);\n    setImageSrc(null);\n    setText(\"\");\n    setshowImageInput(false);\n  };\n\n  // 장소 등록 로직\n  const handlePlaceSelect = item => {\n    // 수정 모드인지 확인\n    const isEdit = Boolean(editingPlace);\n    if (isEdit) {\n      // 기존 항목을 새로운 item으로 수정\n      handleSaveEditPlace(item);\n      // 수정 완료 메시지\n      alert(\"수정이 완료되었습니다\");\n      // 함수 종료 (등록 안함)\n      return;\n    }\n\n    // 새 항목을 등록하는 경우\n    setRegisteredItems(prevItems => {\n      // 선택한 날짜에 해당하는 기존 항복이 있는지 확인, 없으면 빈 배열\n      const existingItems = prevItems[activeDay] || [];\n      // some : 배열 중 하나라도 만족하는 요소가 있으면 true\n      const isDuplicate = existingItems.some(i => i.image === item.image && i.description === item.description);\n      // 증복이면 기존 항목을 그대로 반환, 추가 안함\n      if (isDuplicate) return prevItems;\n\n      // 새로 항목 추가 : 기존 항목 유지 + 현재 선택된 일차에 추가\n      const newItems = {\n        ...prevItems,\n        [activeDay]: [...existingItems, {\n          ...item,\n          type: \"place\",\n          id: Date.now()\n        } // 고유 Id 부여\n        ]\n      };\n      console.log('장소 등록 후 모든 항목:', newItems);\n\n      // 업데이트된 항목 변환 (setRegisteredItems에 적용)\n      return newItems;\n    });\n    setShowMap(false);\n  };\n\n  // 삭제 할 경우\n  const handleDeleteItem = itemId => {\n    // 사용자가 확인을 클릭시 true\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      setRegisteredItems(prevItems => {\n        const existingItems = prevItems[activeDay] || [];\n        return {\n          ...prevItems,\n          // itemId와 일치하지 않는 항목들만 남김, 해당 항목 삭제\n          [activeDay]: existingItems.filter(item => item.id !== itemId)\n        };\n      });\n    } else {\n      return;\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingItem(null);\n    setEditText(\"\");\n    setEditImage(null);\n    setshowImageInput(false);\n    setText(\"\");\n    setImageSrc(null);\n    setEditingPlace(null);\n    setShowMap(false);\n  };\n\n  // 사진 첨부 수정\n  const handleSaveEdit = () => {\n    if (!editingItem) return;\n    setRegisteredItems(prevItems => {\n      const existingItems = prevItems[activeDay] || [];\n      return {\n        ...prevItems,\n        [activeDay]: existingItems.map(item => item.id === editingItem.id ? {\n          ...item,\n          description: text,\n          image: ImageSrc\n        } : item)\n      };\n    });\n    handleCancelEdit();\n  };\n\n  // 장소 수정\n  const handleSaveEditPlace = updatesPlace => {\n    if (!editingPlace) return;\n    setRegisteredItems(prevItems => {\n      const existingItems = prevItems[activeDay] || [];\n      return {\n        ...prevItems,\n        [activeDay]: existingItems.map(item => item.id === editingPlace.id ? {\n          ...updatesPlace,\n          type: \"place\",\n          id: editingPlace.id\n        } : item)\n      };\n    });\n    handleCancelEdit();\n  };\n\n  // 중복 항목 제거 후 새로운 배열\n  const itemsForActiveDay = (registeredItems[activeDay] || []).filter((item, index, self) => index === self.findIndex(t => t.image === item.image && t.description === item.description));\n  const hasRegisteredImage = itemsForActiveDay.some(item => item.type === \"image\");\n  const handleEditItem = item => {\n    setEditingItem(item);\n    setEditText(item.description);\n    setEditImage(item.image);\n    if (item.type === \"image\") {\n      setshowImageInput(true);\n      setText(item.description);\n      setImageSrc(item.image);\n    } else if (item.type === \"place\") {\n      setEditingPlace(item);\n      setShowMap(true);\n    }\n  };\n\n  // 아이템 이동 함수\n  const moveItem = (dragIndex, hoverIndex) => {\n    setRegisteredItems(prevItems => {\n      const items = [...(prevItems[activeDay] || [])];\n      const draggedItem = items[dragIndex];\n      items.splice(dragIndex, 1);\n      items.splice(hoverIndex, 0, draggedItem);\n      const newItems = {\n        ...prevItems,\n        [activeDay]: items\n      };\n\n      // 순서가 변경된 항목들을 콘솔에 출력\n      console.log('순서 변경 후 항목들:', {\n        날짜: activeDay,\n        항목들: items.map((item, index) => ({\n          순서: index + 1,\n          타입: item.type,\n          설명: item.description,\n          ID: item.id\n        }))\n      });\n      return newItems;\n    });\n  };\n\n  // 일차 이동 함수\n  const moveDay = (dragIndex, hoverIndex) => {\n    setDays(prevDays => {\n      const newDays = [...prevDays];\n      const draggedDay = newDays[dragIndex];\n      newDays.splice(dragIndex, 1);\n      newDays.splice(hoverIndex, 0, draggedDay);\n\n      // 일차 번호 업데이트\n      return newDays.map((_, index) => `${index + 1}일차`);\n    });\n\n    // 현재 선택된 일차가 이동된 경우, 해당 일차의 내용도 함께 이동\n    setRegisteredItems(prevItems => {\n      const newItems = {};\n      const oldDays = [...days];\n      const draggedDay = oldDays[dragIndex];\n      oldDays.splice(dragIndex, 1);\n      oldDays.splice(hoverIndex, 0, draggedDay);\n      console.log('이동 전 항목들:', prevItems);\n      console.log('이동하는 일차:', draggedDay);\n      console.log('이동 전 일차 순서:', oldDays);\n\n      // 새로운 순서에 맞게 항목들 재배치\n      oldDays.forEach((oldDay, index) => {\n        const newDay = `${index + 1}일차`;\n        if (prevItems[oldDay]) {\n          newItems[newDay] = prevItems[oldDay];\n          console.log(`${oldDay}의 항목들이 ${newDay}로 이동됨:`, prevItems[oldDay]);\n        }\n      });\n      console.log('이동 후 항목들:', newItems);\n      return newItems;\n    });\n  };\n  const handleDayDelete = activeday => {\n    if (window.confirm(`${activeDay}의 모든 항목을 삭제하시겠습니까?`)) {\n      // days 배열에서 해당 날짜 삭제\n      setDays(prevDays => {\n        const newDays = prevDays.filter(day => day !== activeDay);\n        //남은 날짜들의 번호 재조정\n        return newDays.map((_, index) => `${index + 1}일차`);\n      });\n\n      // registeredItems 업데이트\n      setRegisteredItems(prevItems => {\n        const newItems = {};\n        const oldDays = [...days];\n        const deletedIndex = oldDays.indexOf(activeDay);\n\n        // 삭제된 날짜 이후의 항목들을 한 칸씩 앞으로 이동\n        oldDays.forEach((oldDay, index) => {\n          if (index < deletedIndex) {\n            // 삭제된 날짜 이전의 항목들은 그대로 유지\n            newItems[`${index + 1}일차`] = prevItems[oldDay];\n          } else if (index > deletedIndex) {\n            // 삭제된 날짜 이후의 항목들은 한 칸씩 앞으로 이동\n            newItems[`${index}일차`] = prevItems[oldDay];\n          }\n        });\n        console.log('삭제후 항목들', newItems);\n        return newItems;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center\",\n      children: [days.map((day, index) => /*#__PURE__*/_jsxDEV(DraggableDayButton, {\n        day: day,\n        index: index,\n        moveDay: moveDay,\n        isActive: activeDay === day,\n        onClick: () => handleDayClick(day)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this)), days.length < 10 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddDay,\n        className: \"w-8\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), days.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ml-auto text-gray-400 hover:text-red-500\",\n        onClick: () => handleDayDelete(activeDay),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), activeDay && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative max-h-[650px] overflow-y-auto\",\n      children: [!editingItem && !showImageInput && !showMap && !editingPlace && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: itemsForActiveDay.map((item, index) => /*#__PURE__*/_jsxDEV(DraggableItem, {\n          item: item,\n          index: index,\n          moveItem: moveItem,\n          handleEditItem: handleEditItem,\n          handleDeleteItem: handleDeleteItem\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }, this), showImageInput && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 bg-gray-100 border rounded-xl z-10 h-[650px] relative\",\n        children: [!editingItem && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 right-4\",\n          onClick: () => setshowImageInput(false),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-bold\",\n            children: editingItem ? \"항목 수정하기\" : \"새로운 항목 추가하기\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 15\n        }, this), ImageSrc ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-[300px] mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: ImageSrc,\n            alt: \"\\uCCA8\\uBD80\\uB41C \\uC774\\uBBF8\\uC9C0\",\n            className: \"w-full h-full object-cover rounded-xl\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-[300px] mb-4 bg-red-100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"flex w-full h-44 resize-none p-2 mb-4 border rounded\",\n            placeholder: \"\\uC774\\uBBF8\\uC9C0\\uC5D0 \\uB300\\uD55C \\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n            value: text,\n            onChange: e => setText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageUpload,\n              className: \"flex mb-4\"\n            }, ImageSrc, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"bg-blue-500 text-white px-4 rounded mb-4 hover:bg-blue-600\",\n                onClick: () => {\n                  // 수정일때\n                  if (editingItem) {\n                    handleSaveEdit();\n                    alert(\"수정이 완료되었습니다\");\n                  } else {\n                    handleRegisterForActiveDay();\n                  }\n                },\n                children: editingItem ? \"수정 완료\" : \"등록\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }, this), showMap && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-4 right-4 z-20 bg-white rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100 transition-colors\",\n          onClick: handleCancelEdit,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(KakaoMap, {\n          showMap: showMap,\n          setShowMap: setShowMap,\n          handlePlaceSelect: handlePlaceSelect,\n          editingPlace: editingPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 13\n      }, this), !editingItem && !showImageInput && !showMap && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-white border rounded py-1 px-4 text-gray-500 mr-1.5\",\n          onClick: () => setShowMap(true),\n          children: \"\\uC7A5\\uC18C \\uB4F1\\uB85D\\uD558\\uAE30 +\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 15\n        }, this), !hasRegisteredImage && /*#__PURE__*/_jsxDEV(ListAddPhoto, {\n          setshowImageInput: setshowImageInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n}\n_s3(DayList, \"RbfNUCpcc1CcCDvBiEXlwbLAM0Y=\");\n_c3 = DayList;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DraggableDayButton\");\n$RefreshReg$(_c2, \"DraggableItem\");\n$RefreshReg$(_c3, \"DayList\");","map":{"version":3,"names":["KakaoMap","ListAddPhoto","useState","DndProvider","useDrag","useDrop","HTML5Backend","jsxDEV","_jsxDEV","Fragment","_Fragment","DraggableDayButton","day","index","moveDay","isActive","onClick","_s","isDragging","drag","type","item","collect","monitor","isOver","drop","accept","hover","draggedItem","ref","node","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DraggableItem","moveItem","handleEditItem","handleDeleteItem","_s2","style","cursor","src","image","alt","description","address","category","phone","placeUrl","href","target","rel","e","stopPropagation","id","_c2","DayList","days","setDays","registeredItems","setRegisteredItems","_s3","showImageInput","setshowImageInput","ImageSrc","setImageSrc","text","setText","editingItem","setEditingItem","editText","setEditText","editImage","setEditImage","activeDay","setActiveDay","showAddDayButton","setShowAddDayButton","showMap","setShowMap","editingPlace","setEditingPlace","handleImageUpload","_e$target$files","preventDefault","file","files","size","alert","value","formData","FormData","append","response","fetch","method","body","result","json","success","imageUrl","imagePath","console","log","filename","error","handleAddDay","newDay","length","handleDayClick","handleRegisterForActiveDay","trim","prevItems","existingItems","updatedItems","map","hasImage","some","placeItems","filter","newItems","Date","now","handlePlaceSelect","isEdit","Boolean","handleSaveEditPlace","isDuplicate","i","itemId","window","confirm","handleCancelEdit","handleSaveEdit","updatesPlace","itemsForActiveDay","self","findIndex","t","hasRegisteredImage","dragIndex","hoverIndex","items","splice","날짜","항목들","순서","타입","설명","ID","prevDays","newDays","draggedDay","_","oldDays","forEach","oldDay","handleDayDelete","activeday","deletedIndex","indexOf","backend","placeholder","onChange","_c3","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/create/list/DayList.js"],"sourcesContent":["// client/DayList.js\r\n\r\nimport KakaoMap from \"./KakaoMap\";\r\nimport ListAddPhoto from \"./ListAddPhoto\";\r\nimport { useState } from \"react\";\r\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\n// 드래그 가능한 일차 버튼 컴포넌트\r\nconst DraggableDayButton = ({ day, index, moveDay, isActive, onClick }) => {\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'DAY',\r\n    item: { index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: 'DAY',\r\n    hover: (draggedItem) => {\r\n      if (draggedItem.index !== index) {\r\n        moveDay(draggedItem.index, index);\r\n        draggedItem.index = index;\r\n      }\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={(node) => drag(drop(node))}\r\n      onClick={onClick}\r\n      className={`font-sans text-white bg-blue-500 mr-1 rounded-2xl flex items-center justify-center px-4 py-2 cursor-move transition-all duration-200 ${\r\n        isActive ? \"bg-blue-500 text-white\" : \"bg-gray-200\"\r\n      } ${isDragging ? 'opacity-50 scale-110 shadow-lg' : ''} ${\r\n        isOver ? 'border-2 border-blue-400 scale-105' : ''\r\n      }`}\r\n    >\r\n      {day}\r\n    </div>\r\n  );\r\n};\r\n\r\n// 드래그 가능한 아이템 컴포넌트\r\nconst DraggableItem = ({ item, index, moveItem, handleEditItem, handleDeleteItem }) => {\r\n  // item: 항목 데이터 (장소 또는 이미지)\r\n  // index: 현재 아이템의 리스트 내 위치\r\n  // moveItem: 드래그된 아이템을 새로운 위치로 이동시키는 함수\r\n  \r\n  // useDrag 훅으로 드래그 가능한 요소로 설정\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'ITEM', // 드래그 타입\r\n    item: { index }, // 드래그되는 항목의 데이터\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(), // 드래그 중인지 여부를 수집\r\n    }),\r\n  });\r\n\r\n  // useDrop 훅으로 드롭 가능한 영역 결정\r\n  const [, drop] = useDrop({\r\n    accept: 'ITEM', // 드롭 가능한 항목 타입\r\n    hover: (draggedItem) => {\r\n      // 다른 위치로 드래그했을 때만 동작\r\n      if (draggedItem.index !== index) {\r\n        moveItem(draggedItem.index, index); // 항목 위치 바꾸기\r\n        draggedItem.index = index; // 드래그 된 항목의 인덱스도 엡데이트\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      ref={(node) => drag(drop(node))}\r\n      className={`flex items-center rounded-lg bg-white shadow mb-4 h-36 ${isDragging ? 'opacity-50' : ''}`}\r\n      style={{ cursor: 'move' }}\r\n    >\r\n      <div>\r\n        <img\r\n          src={item.image || `images/장소준비중.png`}\r\n          alt=\"등록된 이미지\"\r\n          className=\"ml-2 w-48 h-32 object-cover rounded\"\r\n        />\r\n      </div>\r\n      <div className=\"flex-1 p-4\">\r\n        <p className=\"font-bold text-lg mb-2\">\r\n          {item.description}\r\n        </p>\r\n        {item.type === 'place' && (\r\n          <>\r\n            <p className=\"text-sm text-gray-600 mb-1\">\r\n              {item.address}\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 mb-1\">\r\n              {item.category}\r\n            </p>\r\n            {item.phone && (\r\n              <p className=\"text-sm text-gray-500 mb-1\">\r\n                {item.phone}\r\n              </p>\r\n            )}\r\n            {item.placeUrl && (\r\n              <a\r\n                href={item.placeUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"inline-flex items-center px-1 py-1 text-sm text-blue-600 rounded-lg hover:bg-blue-100 transition-colors\"\r\n                onClick={(e) => e.stopPropagation()}\r\n              >\r\n                <span>상세보기</span>\r\n              </a>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"flex items-center gap-2 pr-4\">\r\n        <button\r\n          onClick={() => handleEditItem(item)}\r\n          className=\"px-3 py-1 rounded hover:text-blue-600\"\r\n        >\r\n          수정\r\n        </button>\r\n        <button\r\n          onClick={() => handleDeleteItem(item.id)}\r\n          className=\"px-3 py-1 rounded hover:text-blue-600\"\r\n        >\r\n          삭제\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function DayList({days, setDays, registeredItems,setRegisteredItems}) {\r\n  // 사진 첨부 표시 여부\r\n  const [showImageInput, setshowImageInput] = useState(false);\r\n  // 이미지 URL 상태\r\n  const [ImageSrc, setImageSrc] = useState(null);\r\n  // 텍스트 상태\r\n  const [text, setText] = useState(\"\");\r\n  \r\n\r\n  // 사진 첨부 수정\r\n  const [editingItem, setEditingItem] = useState(null);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [editImage, setEditImage] = useState(null);\r\n\r\n  \r\n  // 현재 활성화된 날짜\r\n  const [activeDay, setActiveDay] = useState(\"1일차\");\r\n\r\n  // 버튼 표시 여부 스테이트\r\n  const [showAddDayButton, setShowAddDayButton] = useState(true);\r\n  // 지도 표시 여부\r\n  const [showMap, setShowMap] = useState(false);\r\n  // 장소 수정\r\n  const [editingPlace, setEditingPlace] = useState(null);\r\n\r\n  // 이미지 업로드 핸들러\r\n  const handleImageUpload = async (e) => {\r\n    e.stopPropagation(); // 이벤트 버블링 중지\r\n    e.preventDefault(); // 기본 동작 방지 (페이지 이동, 제출 등)\r\n\r\n    // 1. 파일 선택\r\n    const file = e.target.files?.[0]; // 첫번째 파일 선택\r\n    if (!file) return;\r\n\r\n    // 2. 파일 크기 제한 (10MB)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      alert(\"파일 크기는 10MB 이하여야 합니다.\");\r\n      e.target.value = null;\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 3. FormData 생성\r\n      const formData = new FormData();\r\n      formData.append('image', file);\r\n\r\n      // 4. 서버로 POST 요청\r\n      const response = await fetch('http://localhost:5000/api/images/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n\r\n      // 5. 서버 응답 처리\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        // 이미지 경로 설정 (서버의 정적 파일 경로)\r\n        const imageUrl = `http://localhost:5000/${result.imagePath}`;\r\n        setImageSrc(imageUrl);\r\n        console.log('이미지가 성공적으로 업로드되었습니다:', result.filename);\r\n      } else {\r\n        alert('이미지 업로드에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('이미지 업로드 오류:', error);\r\n      alert('이미지 업로드 중 오류가 발생했습니다.');\r\n    }\r\n\r\n    // 파일 선택기 초기화 (중복 첨부 방지용)\r\n    e.target.value = null;\r\n  };\r\n\r\n  // 일차 추가 함수\r\n  const handleAddDay = () => {\r\n    const newDay = `${days.length + 1}일차`;\r\n    if (days.length < 10) {\r\n      // 10일차 까지만\r\n      setDays([...days, newDay]);\r\n    }\r\n  };\r\n\r\n  // 클릭한 날자 활성화\r\n  const handleDayClick = (day) => {\r\n    setActiveDay(day);\r\n  };\r\n\r\n  // 이미지 등록 로직\r\n  const handleRegisterForActiveDay = () => {\r\n    if (!ImageSrc) {\r\n      alert(\"이미지를 첨부해주세요\");\r\n      return;\r\n    } else if (text.trim() === \"\") {\r\n      alert(\"텍스트를 입력해주세요\");\r\n      return;\r\n    }\r\n\r\n    // 이미지와 글이 모두 입력된 경우에만 등록 가능\r\n    setRegisteredItems((prevItems) => {\r\n      const existingItems = prevItems[activeDay] || [];\r\n\r\n      // 수정 할 때\r\n      if (editingItem) {\r\n        const updatedItems = {\r\n          ...prevItems,\r\n          [activeDay]: existingItems.map(\r\n            (item) =>\r\n              item.id === editingItem.id\r\n                ? { ...item, description: text, image: ImageSrc }\r\n                : item\r\n          ),\r\n        };\r\n        console.log('수정 후 등록된 모든 항목:', updatedItems);\r\n        return updatedItems;\r\n      }\r\n\r\n      // 이미지 등록 하루 한개 제한\r\n      const hasImage = existingItems.some((item) => item.type === \"image\");\r\n      if (hasImage) {\r\n        return prevItems;\r\n      }\r\n\r\n      // 새로 등록할 때\r\n      const placeItems = existingItems.filter(item => item.type === 'place')\r\n      const newItems = {\r\n        ...prevItems,\r\n        [activeDay]: [\r\n          { image: ImageSrc, description: text, type: \"image\", id: Date.now() },\r\n          ...placeItems,\r\n        ],\r\n      };\r\n      console.log('이미지 등록 후 모든 항목:', newItems);\r\n      return newItems;\r\n    });\r\n\r\n    // 초기화\r\n    setEditingItem(null);\r\n    setImageSrc(null);\r\n    setText(\"\");\r\n    setshowImageInput(false);\r\n  };\r\n\r\n  // 장소 등록 로직\r\n  const handlePlaceSelect = (item) => {\r\n    // 수정 모드인지 확인\r\n    const isEdit = Boolean(editingPlace);\r\n    if(isEdit) {\r\n      // 기존 항목을 새로운 item으로 수정\r\n      handleSaveEditPlace(item);\r\n      // 수정 완료 메시지\r\n      alert(\"수정이 완료되었습니다\");\r\n      // 함수 종료 (등록 안함)\r\n      return;\r\n    }\r\n\r\n    // 새 항목을 등록하는 경우\r\n    setRegisteredItems((prevItems) => {\r\n      // 선택한 날짜에 해당하는 기존 항복이 있는지 확인, 없으면 빈 배열\r\n      const existingItems = prevItems[activeDay] || [];\r\n      // some : 배열 중 하나라도 만족하는 요소가 있으면 true\r\n      const isDuplicate = existingItems.some(\r\n        (i) => i.image === item.image && i.description === item.description\r\n      );\r\n      // 증복이면 기존 항목을 그대로 반환, 추가 안함\r\n      if (isDuplicate) return prevItems;\r\n\r\n      // 새로 항목 추가 : 기존 항목 유지 + 현재 선택된 일차에 추가\r\n      const newItems = {\r\n        ...prevItems,\r\n        [activeDay]: [\r\n          ...existingItems,\r\n          { ...item, type: \"place\", id: Date.now() }, // 고유 Id 부여\r\n        ],\r\n      };\r\n      console.log('장소 등록 후 모든 항목:', newItems);\r\n\r\n      // 업데이트된 항목 변환 (setRegisteredItems에 적용)\r\n      return newItems;\r\n    });\r\n    setShowMap(false);\r\n  };\r\n\r\n  // 삭제 할 경우\r\n  const handleDeleteItem = (itemId) => {\r\n    // 사용자가 확인을 클릭시 true\r\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n      setRegisteredItems((prevItems) => {\r\n        const existingItems = prevItems[activeDay] || [];\r\n        return {\r\n          ...prevItems,\r\n          // itemId와 일치하지 않는 항목들만 남김, 해당 항목 삭제\r\n          [activeDay]: existingItems.filter((item) => item.id !== itemId),\r\n        };\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingItem(null);\r\n    setEditText(\"\");\r\n    setEditImage(null);\r\n    setshowImageInput(false);\r\n    setText(\"\");\r\n    setImageSrc(null);\r\n    setEditingPlace(null);\r\n    setShowMap(false);\r\n  };\r\n\r\n  // 사진 첨부 수정\r\n  const handleSaveEdit = () => {\r\n    if (!editingItem) return;\r\n\r\n    setRegisteredItems((prevItems) => {\r\n      const existingItems = prevItems[activeDay] || [];\r\n      return {\r\n        ...prevItems,\r\n        [activeDay]: existingItems.map((item) =>\r\n          item.id === editingItem.id\r\n            ? { ...item, description: text, image: ImageSrc }\r\n            : item\r\n        ),\r\n      };\r\n    });\r\n\r\n    handleCancelEdit();\r\n  };\r\n\r\n  // 장소 수정\r\n  const handleSaveEditPlace = (updatesPlace) => {\r\n    if (!editingPlace) return;\r\n\r\n    setRegisteredItems((prevItems) => {\r\n      const existingItems = prevItems[activeDay] || [];\r\n\r\n      return {\r\n        ...prevItems,\r\n        [activeDay]: existingItems.map((item) => item.id === editingPlace.id\r\n          ? { ...updatesPlace, type: \"place\", id: editingPlace.id }\r\n          : item,\r\n      )\r\n      };\r\n    });\r\n\r\n    handleCancelEdit();\r\n  };\r\n\r\n  // 중복 항목 제거 후 새로운 배열\r\n  const itemsForActiveDay = (registeredItems[activeDay] || []).filter(\r\n    (item, index, self) =>\r\n      index ===\r\n      self.findIndex(\r\n        (t) => t.image === item.image && t.description === item.description\r\n      )\r\n  );\r\n\r\n  const hasRegisteredImage = itemsForActiveDay.some(\r\n    (item) => item.type === \"image\"\r\n  );\r\n\r\n  const handleEditItem = (item) => {\r\n    setEditingItem(item);\r\n    setEditText(item.description);\r\n    setEditImage(item.image);\r\n    if (item.type === \"image\") {\r\n      setshowImageInput(true);\r\n      setText(item.description);\r\n      setImageSrc(item.image);\r\n    } else if (item.type === \"place\") {\r\n      setEditingPlace(item);\r\n      setShowMap(true);\r\n    }\r\n  };\r\n\r\n  // 아이템 이동 함수\r\n  const moveItem = (dragIndex, hoverIndex) => {\r\n    setRegisteredItems((prevItems) => {\r\n      const items = [...(prevItems[activeDay] || [])];\r\n      const draggedItem = items[dragIndex];\r\n      items.splice(dragIndex, 1);\r\n      items.splice(hoverIndex, 0, draggedItem);\r\n      \r\n      const newItems = {\r\n        ...prevItems,\r\n        [activeDay]: items,\r\n      };\r\n      \r\n      // 순서가 변경된 항목들을 콘솔에 출력\r\n      console.log('순서 변경 후 항목들:', {\r\n        날짜: activeDay,\r\n        항목들: items.map((item, index) => ({\r\n          순서: index + 1,\r\n          타입: item.type,\r\n          설명: item.description,\r\n          ID: item.id\r\n        }))\r\n      });\r\n      \r\n      return newItems;\r\n    });\r\n  };\r\n\r\n  // 일차 이동 함수\r\n  const moveDay = (dragIndex, hoverIndex) => {\r\n    setDays((prevDays) => {\r\n      const newDays = [...prevDays];\r\n      const draggedDay = newDays[dragIndex];\r\n      newDays.splice(dragIndex, 1);\r\n      newDays.splice(hoverIndex, 0, draggedDay);\r\n      \r\n      // 일차 번호 업데이트\r\n      return newDays.map((_, index) => `${index + 1}일차`);\r\n    });\r\n\r\n    // 현재 선택된 일차가 이동된 경우, 해당 일차의 내용도 함께 이동\r\n    setRegisteredItems((prevItems) => {\r\n      const newItems = {};\r\n      const oldDays = [...days];\r\n      const draggedDay = oldDays[dragIndex];\r\n      oldDays.splice(dragIndex, 1);\r\n      oldDays.splice(hoverIndex, 0, draggedDay);\r\n\r\n      console.log('이동 전 항목들:', prevItems);\r\n      console.log('이동하는 일차:', draggedDay);\r\n      console.log('이동 전 일차 순서:', oldDays);\r\n\r\n      // 새로운 순서에 맞게 항목들 재배치\r\n      oldDays.forEach((oldDay, index) => {\r\n        const newDay = `${index + 1}일차`;\r\n        if (prevItems[oldDay]) {\r\n          newItems[newDay] = prevItems[oldDay];\r\n          console.log(`${oldDay}의 항목들이 ${newDay}로 이동됨:`, prevItems[oldDay]);\r\n        }\r\n      });\r\n\r\n      console.log('이동 후 항목들:', newItems);\r\n      return newItems;\r\n    });\r\n  };\r\n\r\n\r\n  const handleDayDelete = (activeday) =>{\r\n      if(window.confirm(`${activeDay}의 모든 항목을 삭제하시겠습니까?`)){\r\n          // days 배열에서 해당 날짜 삭제\r\n        setDays((prevDays) => {\r\n          const newDays = prevDays.filter(day => day!== activeDay);\r\n          //남은 날짜들의 번호 재조정\r\n          return newDays.map((_, index) => (`${index + 1}일차`));\r\n        });\r\n\r\n        // registeredItems 업데이트\r\n        setRegisteredItems((prevItems) => {\r\n          const newItems = {};\r\n          const oldDays = [...days];\r\n          const deletedIndex = oldDays.indexOf(activeDay);\r\n\r\n          // 삭제된 날짜 이후의 항목들을 한 칸씩 앞으로 이동\r\n          oldDays.forEach((oldDay, index) => {\r\n            if(index < deletedIndex) {\r\n              // 삭제된 날짜 이전의 항목들은 그대로 유지\r\n              newItems[`${index + 1}일차`] = prevItems[oldDay];\r\n             }else if(index > deletedIndex) {\r\n              // 삭제된 날짜 이후의 항목들은 한 칸씩 앞으로 이동\r\n              newItems[`${index}일차`] = prevItems[oldDay];\r\n             }\r\n          });        \r\n        console.log('삭제후 항목들', newItems);\r\n        return newItems;\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className=\"flex items-center\">\r\n        {days.map((day, index) => (\r\n          <DraggableDayButton\r\n            key={index}\r\n            day={day}\r\n            index={index}\r\n            moveDay={moveDay}\r\n            isActive={activeDay === day}\r\n            onClick={() => handleDayClick(day)}\r\n          />\r\n        ))}\r\n        {days.length < 10 && (\r\n          <button onClick={handleAddDay} className=\"w-8\">\r\n            +\r\n          </button>\r\n        )}\r\n\r\n\r\n        {days.length > 1 && (\r\n           <button className=\"ml-auto text-gray-400 hover:text-red-500\"\r\n           onClick={() => handleDayDelete(activeDay)}\r\n         >삭제</button>\r\n        )}\r\n       \r\n      </div>\r\n\r\n      {activeDay && (\r\n        <div className=\"relative max-h-[650px] overflow-y-auto\">\r\n          {!editingItem && !showImageInput && !showMap && !editingPlace && (\r\n            <div>\r\n              {itemsForActiveDay.map((item, index) => (\r\n                <DraggableItem\r\n                  key={item.id}\r\n                  item={item}\r\n                  index={index}\r\n                  moveItem={moveItem}\r\n                  handleEditItem={handleEditItem}\r\n                  handleDeleteItem={handleDeleteItem}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* 이미지 폼 ( 등록 / 수정 ) */}\r\n          {showImageInput && (\r\n            <div className=\"p-4 bg-gray-100 border rounded-xl z-10 h-[650px] relative\">\r\n              {/* 닫기 버튼 */}\r\n              {!editingItem && (\r\n                <button\r\n                  className=\"absolute top-4 right-4\"\r\n                  onClick={() => setshowImageInput(false)}\r\n                >\r\n                  ✕\r\n                </button>\r\n              )}\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h2 className=\"text-lg font-bold\">\r\n                  {editingItem ? \"항목 수정하기\" : \"새로운 항목 추가하기\"}\r\n                </h2>\r\n              </div>\r\n              {ImageSrc ? (\r\n                <div className=\"w-full h-[300px] mb-4\">\r\n                  <img\r\n                    src={ImageSrc}\r\n                    alt=\"첨부된 이미지\"\r\n                    className=\"w-full h-full object-cover rounded-xl\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"w-full h-[300px] mb-4 bg-red-100\"></div>\r\n              )}\r\n              <div className=\"flex flex-col w-full\">\r\n                <textarea\r\n                  className=\"flex w-full h-44 resize-none p-2 mb-4 border rounded\"\r\n                  placeholder=\"이미지에 대한 설명을 입력하세요...\"\r\n                  value={text}\r\n                  onChange={(e) => setText(e.target.value)}\r\n                />\r\n                <div className=\"flex justify-between\">\r\n                  <input\r\n                    key={ImageSrc}\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleImageUpload}\r\n                    className=\"flex mb-4\"\r\n                  />\r\n                  <div className=\"flex gap-2\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white px-4 rounded mb-4 hover:bg-blue-600\"\r\n                      onClick={() => {\r\n                        // 수정일때\r\n                        if (editingItem) {\r\n                          handleSaveEdit();\r\n                          alert(\"수정이 완료되었습니다\");\r\n                        } else {\r\n                          handleRegisterForActiveDay();\r\n                        }\r\n                      }}\r\n                    >\r\n                      {editingItem ? \"수정 완료\" : \"등록\"}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* 지도 폼 ( 등록 / 수정 ) */}\r\n          {showMap && (\r\n            <div className=\"relative\">\r\n              {/* 닫기 버튼 */}\r\n              <button\r\n                className=\"absolute top-4 right-4 z-20 bg-white rounded-full w-8 h-8 flex items-center justify-center shadow-md hover:bg-gray-100 transition-colors\"\r\n                onClick={handleCancelEdit}\r\n              >\r\n                ✕\r\n              </button>\r\n              <KakaoMap\r\n                showMap={showMap}\r\n                setShowMap={setShowMap}\r\n                handlePlaceSelect={handlePlaceSelect}\r\n                editingPlace={editingPlace}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {!editingItem && !showImageInput && !showMap && (\r\n            <div className=\"relative\">\r\n              <button\r\n                className=\"bg-white border rounded py-1 px-4 text-gray-500 mr-1.5\"\r\n                onClick={() => setShowMap(true)}\r\n              >\r\n                장소 등록하기 +\r\n              </button>\r\n              {!hasRegisteredImage && (\r\n                <ListAddPhoto setshowImageInput={setshowImageInput} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </DndProvider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}