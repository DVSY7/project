{"ast":null,"code":"//client/src/componant/community/api/actionList.js\nimport axios from\"axios\";export const actionList=async(actionType,userID)=>{//요청한 동작\nconst Action={\"AddBlocked\":\"blocked\",\"RemoveBlocked\":\"accepted\"};try{const response=await axios.post(`http://localhost:5000/api/${actionType}`,{// 요청받은 유저 ID\nrequestID:userID,// 요청받은 값\nrequestValue:Action[actionType]});return response.data;}catch(error){console.error(\"Action 반영 실패:\",error,{userID:userID});return null;}};","map":{"version":3,"names":["axios","actionList","actionType","userID","Action","response","post","requestID","requestValue","data","error","console"],"sources":["C:/git/project/client/src/componant/community/api/actionListAPI.js"],"sourcesContent":["//client/src/componant/community/api/actionList.js\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const actionList = async (actionType, userID)=>{\r\n    //요청한 동작\r\n    const Action = {\r\n        \"AddBlocked\" : \"blocked\",\r\n        \"RemoveBlocked\" : \"accepted\"\r\n    }\r\n\r\n    try{\r\n        const response = await axios.post(`http://localhost:5000/api/${actionType}`,{\r\n            // 요청받은 유저 ID\r\n            requestID : userID,\r\n            // 요청받은 값\r\n            requestValue : Action[actionType],\r\n        })\r\n        return response.data;\r\n    }catch(error){\r\n        console.error(\"Action 반영 실패:\", error, {userID : userID});\r\n        return null;\r\n    }\r\n}"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB,MAAO,MAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOC,UAAU,CAAEC,MAAM,GAAG,CAClD;AACA,KAAM,CAAAC,MAAM,CAAG,CACX,YAAY,CAAG,SAAS,CACxB,eAAe,CAAG,UACtB,CAAC,CAED,GAAG,CACC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,IAAI,CAAC,6BAA6BJ,UAAU,EAAE,CAAC,CACxE;AACAK,SAAS,CAAGJ,MAAM,CAClB;AACAK,YAAY,CAAGJ,MAAM,CAACF,UAAU,CACpC,CAAC,CAAC,CACF,MAAO,CAAAG,QAAQ,CAACI,IAAI,CACxB,CAAC,MAAMC,KAAK,CAAC,CACTC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAE,CAACP,MAAM,CAAGA,MAAM,CAAC,CAAC,CACxD,MAAO,KAAI,CACf,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}