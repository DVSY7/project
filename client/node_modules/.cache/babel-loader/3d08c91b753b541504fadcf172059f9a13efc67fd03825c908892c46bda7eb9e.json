{"ast":null,"code":"//client/src/componant/community/conversation.js\nimport{useState}from\"react\";import ProfileModal from\"./ui/profileModal\";import{formatDateTime}from\"./utilities/dateUtils\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Conversation(props){const{message}=props;// 모달을 관리하기 위한 props\nconst{friendList,blockedList,setActionList,userID,messageReads}=props;// 채팅방 사용 유저\nconst{currentUserName}=props;const userName=props.message.name;// 프로필 클릭 상태관리\nconst[clickedProfile,setClickedProfile]=useState({});if(!message.message)return null;console.log(message);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:`flex ${userName===currentUserName?\"justify-end\":\"\"} mt-2`,children:[/*#__PURE__*/_jsx(\"img\",{onClick:()=>{setClickedProfile(prev=>({...prev,[message.friend_id]:true}));},alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",src:message.profile_image_url,className:`w-[50px] h-[50px] rounded-[50%] ${userName===currentUserName?\"order-4 mr-4\":\"ml-4\"}`}),clickedProfile[message.friend_id]&&/*#__PURE__*/_jsx(ProfileModal,{requestComponent:\"conversation\",clickedProfile:clickedProfile,setClickedProfile:setClickedProfile,MemberKey:message.friend_id,profile_image:message.profile_image_url,friendList:friendList,blockedList:blockedList,chattingList:[message],setActionList:setActionList,userID:userID}),/*#__PURE__*/_jsxs(\"div\",{className:`${userName===currentUserName?\"order-3\":\"\"}`,children:[/*#__PURE__*/_jsx(\"div\",{className:`${userName===currentUserName?\"flex justify-end mr-2\":\"ml-2\"}`,children:message.name}),/*#__PURE__*/_jsx(\"div\",{style:{whiteSpace:`pre-line`},className:`${userName!==currentUserName?\"bg-white\":\"bg-[#E0F3FF]\"} border-[1px] border-gray-300 border-solid rounded-md p-2 px-3 mx-2 ${message.friend_id==55&&`font-bold `}`,children:message.message})]}),/*#__PURE__*/_jsx(\"span\",{className:`flex items-end font-sans ${userName===currentUserName?\"order-2\":\"\"}`,children:formatDateTime(message.datetime)}),messageReads!==0&&/*#__PURE__*/_jsx(\"div\",{className:`text-yellow-500 ${userName===currentUserName?\"order-1\":\"\"} flex items-end mx-2 font-sans font-bold`,children:messageReads})]})});}","map":{"version":3,"names":["useState","ProfileModal","formatDateTime","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Conversation","props","message","friendList","blockedList","setActionList","userID","messageReads","currentUserName","userName","name","clickedProfile","setClickedProfile","console","log","children","className","onClick","prev","friend_id","alt","src","profile_image_url","requestComponent","MemberKey","profile_image","chattingList","style","whiteSpace","datetime"],"sources":["C:/git/project/client/src/componant/community/conversation.js"],"sourcesContent":["//client/src/componant/community/conversation.js\r\nimport {useState} from \"react\";\r\nimport ProfileModal from \"./ui/profileModal\";\r\nimport { formatDateTime } from \"./utilities/dateUtils\";\r\n\r\nexport default function Conversation(props) {\r\n    const { message } = props;\r\n\r\n    // 모달을 관리하기 위한 props\r\n    const {\r\n        friendList, \r\n        blockedList, \r\n        setActionList, \r\n        userID,\r\n        messageReads\r\n    } = props;\r\n\r\n    // 채팅방 사용 유저\r\n    const {currentUserName} = props;\r\n    const userName = props.message.name;\r\n    // 프로필 클릭 상태관리\r\n    const [clickedProfile, setClickedProfile] = useState({});\r\n\r\n    if(!message.message)return null;\r\n\r\n    console.log(message);\r\n    return (\r\n        <>\r\n            <div className={`flex ${userName === currentUserName ? \"justify-end\" : \"\"} mt-2`}>\r\n                {/* 채팅 프로필 */}\r\n                <img\r\n                onClick={()=> {\r\n                    setClickedProfile(prev => ({...prev, [message.friend_id]:true}));\r\n                }} \r\n                alt=\"미니프로필\" src={message.profile_image_url} className={`w-[50px] h-[50px] rounded-[50%] ${userName === currentUserName ? \"order-4 mr-4\" : \"ml-4\"}`}>\r\n                </img>\r\n                {/* 프로필 클릭 모달 */}\r\n                {clickedProfile[message.friend_id] && (\r\n                    <ProfileModal\r\n                        requestComponent = \"conversation\"\r\n                        clickedProfile={clickedProfile}\r\n                        setClickedProfile={setClickedProfile}\r\n                        MemberKey={message.friend_id}\r\n                        profile_image={message.profile_image_url}\r\n                        friendList={friendList}\r\n                        blockedList={blockedList}\r\n                        chattingList={[message]}\r\n                        setActionList={setActionList}\r\n                        userID={userID}\r\n                    />\r\n                )}\r\n\r\n\r\n                {/* 닉네임과 내용 */}\r\n                <div className={`${userName === currentUserName ? \"order-3\" : \"\"}`}>\r\n                    {/* 채팅 닉네임 */}\r\n                    <div className={`${userName === currentUserName ? \"flex justify-end mr-2\" : \"ml-2\"}`}>{message.name}</div>\r\n                    {/* 채팅 내용 */}\r\n                    <div style={{whiteSpace: `pre-line`}} className={`${userName !== currentUserName ? \"bg-white\" : \"bg-[#E0F3FF]\"} border-[1px] border-gray-300 border-solid rounded-md p-2 px-3 mx-2 ${message.friend_id == 55 && `font-bold `}`}>{message.message}</div>\r\n                </div>\r\n\r\n                {/* 채팅 시간 */}\r\n                <span\r\n                    className={`flex items-end font-sans ${userName === currentUserName ? \"order-2\" : \"\"}`}\r\n                >{formatDateTime(message.datetime)}</span>\r\n                {/* 읽음 수가 0이면 표시하지 않음 */}\r\n                {messageReads !== 0 &&\r\n                <div className={`text-yellow-500 ${userName === currentUserName ? \"order-1\" : \"\"} flex items-end mx-2 font-sans font-bold`}>{messageReads}</div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}