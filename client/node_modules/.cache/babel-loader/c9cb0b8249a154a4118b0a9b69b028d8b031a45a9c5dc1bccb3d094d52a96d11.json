{"ast":null,"code":"//client/src/componant/community/ui/button.js\nimport{useState}from\"react\";import ProfileModal from\"./profileModal\";import React from\"react\";import{actionList}from\"../api/actionListAPI\";// 커뮤니티 버튼 모달 컴포넌트\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function CommunityButtons(props){const{checkedAction,setCheckedAction,title,message,action,index}=props;// ActionList 동작 props\nconst{setActionList}=props;// 동작을 반영할 정보 props\nconst{userID}=props;// Action 이벤트 함수\nconst handleChangeAction={\"차단\":async()=>{console.log(action);await actionList(\"AddBlocked\",userID);},\"해제\":async()=>{console.log(action);await actionList(\"RemoveBlocked\",userID);}};if(!checkedAction[index])return null;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:`flex justify-center items-center absolute w-screen h-screen left-0 top-0 text-black cursor-default`,children:/*#__PURE__*/_jsxs(\"div\",{className:`flex flex-col justify-between bg-white border-[1px] border-gray400 shadow-lg w-[400px] h-[250px] rounded-lg`,children:[/*#__PURE__*/_jsx(\"div\",{className:`flex justify-center items-center text-[1.7rem] h-[60px] border-b-[2px] border-gray-200`,children:title}),/*#__PURE__*/_jsx(\"div\",{className:`flex justify-center text-[1.3rem]`,children:message}),/*#__PURE__*/_jsxs(\"div\",{className:`flex justify-end text-white`,children:[/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{await handleChangeAction[action]();setCheckedAction(prev=>({...prev,[index]:false}));setActionList(Date.now());},className:`p-2 px-3 my-2 mx-1 bg-blue-500 text-[1.1rem] rounded-md`,children:action}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setCheckedAction(prev=>({...prev,[index]:false}));},className:`p-2 px-3 my-2 mx-1 mr-2 bg-blue-500 text-[1.1rem] rounded-md cursor-pointer`,children:\"\\uCDE8\\uC18C\"})]})]})})});}// 참여인원 확인 모달 컴포넌트\nexport function CheckedCurrentMemberButton(props){const{checkedMember,setCheckedMember,chattingList,friendList,blockedList,setActionList,userID}=props;console.log(\"현재현재userID\",userID);// 프로필 클릭 상태관리 스테이트\nconst[clickedProfile,setClickedProfile]=useState({});// 참여인원 버튼 클릭 시 랜더링\nif(!checkedMember)return null;return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:`flex justify-center items-center min-h-[800px] w-screen h-screen absolute left-0 top-0 text-black cursor-default bg-black bg-opacity-50`,children:/*#__PURE__*/_jsxs(\"div\",{className:`flex flex-col justify-between bg-white w-[600px] h-[800px] rounded-xl border-[1px] border-gray-200 shadow-md`,children:[/*#__PURE__*/_jsxs(\"div\",{className:`flex h-[50px] items-center text-[1.2rem] font-sans border-b-[2px] border-gray-200`,children:[/*#__PURE__*/_jsx(\"span\",{className:`ml-4`,children:\"\\uB300\\uD654\\uC0C1\\uB300\"}),/*#__PURE__*/_jsx(\"span\",{className:`ml-2`,children:chattingList.length}),console.log(\"chattingList\",chattingList)]}),/*#__PURE__*/_jsx(\"div\",{className:`flex flex-col items-start ml-4 h-[650px] overflow-y-auto font-sans text-[1.2rem]`,children:Object.entries(chattingList).map((_ref,key)=>{let[_,Member]=_ref;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{onClick:()=>{setClickedProfile(prev=>({...prev,[Member.friend_id]:true}));console.log(\"참여인원 멤버키:\",Member.friend_id);},className:`${key===0&&\"mt-5\"} flex hover:bg-gray-200 transition-colors duration-300 items-center bg-white border-[1px] border-gray-200 rounded-md min-h-[70px] h-[70px] w-[550px] my-2`,children:[/*#__PURE__*/_jsx(\"img\",{alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",src:`${Member.profile_image_url}`,className:`h-[50px] w-[50px] rounded-[50%] mx-4`}),Member.name,/*#__PURE__*/_jsx(\"div\",{className:`flex justify-center items-center ml-auto mr-3 bg-gray-300 w-[60px] h-[40px] rounded-md`,children:/*#__PURE__*/_jsx(\"img\",{alt:\"\\uCE5C\\uAD6C\\uCD94\\uAC00\",src:\"images/\\uCE5C\\uAD6C\\uCD94\\uAC00.png\",className:`w-[30px] h-[30px] ml-2`})})]}),/*#__PURE__*/_jsx(ProfileModal,{requestComponent:\"conversation\",MemberKey:Member.friend_id,clickedProfile:clickedProfile,chattingList:[Member],friendList:friendList,blockedList:blockedList,setClickedProfile:setClickedProfile,profile_image:Member.profile_image_url,setActionList:setActionList,userID:userID})]},key);})}),/*#__PURE__*/_jsx(\"div\",{className:`flex justify-center items-center h-[100px] border-t-[2px] border-gray-200`,children:/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setCheckedMember(false);},className:`h-[50px] w-[100px] bg-blue-500 text-white font-sans text-[1.2rem] rounded-lg`,children:\"\\uD655\\uC778\"})})]})})});}","map":{"version":3,"names":["useState","ProfileModal","React","actionList","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CommunityButtons","props","checkedAction","setCheckedAction","title","message","action","index","setActionList","userID","handleChangeAction","차단","console","log","해제","children","className","onClick","prev","Date","now","e","stopPropagation","CheckedCurrentMemberButton","checkedMember","setCheckedMember","chattingList","friendList","blockedList","clickedProfile","setClickedProfile","length","Object","entries","map","_ref","key","_","Member","friend_id","alt","src","profile_image_url","name","requestComponent","MemberKey","profile_image"],"sources":["C:/git/project/client/src/componant/community/ui/button.js"],"sourcesContent":["//client/src/componant/community/ui/button.js\r\n\r\nimport { useState } from \"react\";\r\nimport ProfileModal from \"./profileModal\";\r\nimport React from \"react\";\r\nimport { actionList } from \"../api/actionListAPI\";\r\n\r\n\r\n// 커뮤니티 버튼 모달 컴포넌트\r\nexport function CommunityButtons(props) {\r\n\r\n    const { checkedAction, setCheckedAction, title, message, action, index } = props;\r\n\r\n    // ActionList 동작 props\r\n    const {setActionList} = props;\r\n    // 동작을 반영할 정보 props\r\n    const {userID} = props;\r\n\r\n    // Action 이벤트 함수\r\n    const handleChangeAction = {\r\n        \"차단\": async ()=>{console.log(action); await actionList(\"AddBlocked\", userID);},\r\n        \"해제\": async ()=>{console.log(action); await actionList(\"RemoveBlocked\", userID);},\r\n    }\r\n\r\n    if (!checkedAction[index]) return (null);\r\n    return (\r\n        <>\r\n            <div className={`flex justify-center items-center absolute w-screen h-screen left-0 top-0 text-black cursor-default`}>\r\n                <div className={`flex flex-col justify-between bg-white border-[1px] border-gray400 shadow-lg w-[400px] h-[250px] rounded-lg`}>\r\n                    <div className={`flex justify-center items-center text-[1.7rem] h-[60px] border-b-[2px] border-gray-200`}>{title}</div>\r\n                    <div className={`flex justify-center text-[1.3rem]`} >{message}</div>\r\n                    <div className={`flex justify-end text-white`}>\r\n\r\n                        {/* action 버튼 */}\r\n                        <button \r\n                        onClick={async ()=> {await handleChangeAction[action](); setCheckedAction(prev => ({...prev, [index]:false})); setActionList(Date.now());}}\r\n                        className={`p-2 px-3 my-2 mx-1 bg-blue-500 text-[1.1rem] rounded-md`}>{action}</button>\r\n\r\n                        {/* 취소버튼 */}\r\n                        <button\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                setCheckedAction(prev => ({...prev, [index]:false}));\r\n                            }}\r\n                            className={`p-2 px-3 my-2 mx-1 mr-2 bg-blue-500 text-[1.1rem] rounded-md cursor-pointer`}>취소\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// 참여인원 확인 모달 컴포넌트\r\nexport function CheckedCurrentMemberButton(props) {\r\n\r\n    const { \r\n        checkedMember, \r\n        setCheckedMember, \r\n        chattingList,\r\n        friendList,\r\n        blockedList,\r\n        setActionList,\r\n        userID\r\n    } = props;\r\n\r\n    console.log(\"현재현재userID\",userID);\r\n    // 프로필 클릭 상태관리 스테이트\r\n    const [clickedProfile, setClickedProfile] = useState({});\r\n    // 참여인원 버튼 클릭 시 랜더링\r\n    if (!checkedMember) return (null);\r\n    return (\r\n        <>  \r\n            {/* 모달전체 영역 */}\r\n            <div className={`flex justify-center items-center min-h-[800px] w-screen h-screen absolute left-0 top-0 text-black cursor-default bg-black bg-opacity-50`}>\r\n                <div className={`flex flex-col justify-between bg-white w-[600px] h-[800px] rounded-xl border-[1px] border-gray-200 shadow-md`}>\r\n                    {/* 대화상대 표시 영역*/}\r\n                    <div className={`flex h-[50px] items-center text-[1.2rem] font-sans border-b-[2px] border-gray-200`}>\r\n                        <span className={`ml-4`}>대화상대</span>\r\n                        {/* 이부분에 백엔드 필요 */}\r\n                        <span className={`ml-2`}>{chattingList.length}</span>\r\n                        {console.log(\"chattingList\",chattingList)}\r\n                    </div>\r\n                    {/* 대화상대 목록영역 */}\r\n                    <div\r\n                      className={`flex flex-col items-start ml-4 h-[650px] overflow-y-auto font-sans text-[1.2rem]`}>\r\n                        {Object.entries(chattingList).map(([_,Member], key) => {\r\n                            return (\r\n                                <React.Fragment key = {key}>\r\n                                    <div\r\n                                    onClick={()=> {\r\n                                        setClickedProfile(prev => ({...prev, [Member.friend_id] : true}));\r\n                                        console.log(\"참여인원 멤버키:\",Member.friend_id);\r\n                                    }} \r\n                                    className={`${key === 0 && \"mt-5\"} flex hover:bg-gray-200 transition-colors duration-300 items-center bg-white border-[1px] border-gray-200 rounded-md min-h-[70px] h-[70px] w-[550px] my-2`}>\r\n                                        <img alt=\"미니프로필\" src={`${Member.profile_image_url}`} className={`h-[50px] w-[50px] rounded-[50%] mx-4`}></img>\r\n                                        {Member.name}\r\n                                        <div className={`flex justify-center items-center ml-auto mr-3 bg-gray-300 w-[60px] h-[40px] rounded-md`}>\r\n                                            <img alt=\"친구추가\" src=\"images/친구추가.png\" className={`w-[30px] h-[30px] ml-2`}></img>\r\n                                        </div>\r\n                                    </div>\r\n                                    <ProfileModal\r\n                                        requestComponent = \"conversation\"\r\n                                        MemberKey = {Member.friend_id}\r\n                                        clickedProfile = {clickedProfile}\r\n                                        chattingList = {[Member]}\r\n                                        friendList = {friendList}\r\n                                        blockedList = {blockedList}\r\n                                        setClickedProfile = {setClickedProfile}\r\n                                        profile_image = {Member.profile_image_url}\r\n                                        setActionList = {setActionList}\r\n                                        userID = {userID}\r\n                                    />\r\n                                </React.Fragment>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div className={`flex justify-center items-center h-[100px] border-t-[2px] border-gray-200`}>\r\n                        <button\r\n                            onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                setCheckedMember(false);\r\n                            }}\r\n                            className={`h-[50px] w-[100px] bg-blue-500 text-white font-sans text-[1.2rem] rounded-lg`}>확인\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}