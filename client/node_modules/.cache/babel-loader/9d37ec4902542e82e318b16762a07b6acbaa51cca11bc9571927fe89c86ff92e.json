{"ast":null,"code":"//client/src/componant/profile.js\nimport Contents from'./content/contents';import Menu from'./menu';import{useEffect,useState}from'react';import{checkedToken}from'./function/checkedToken';import{fetchUserID}from'./function/fetchUserID';import{useParams,useSearchParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function Profile(_ref){let{setUserID2}=_ref;// 로그인한 유저정보 관리 스테이트\n// 유저이름\nconst[username,setUsername]=useState('');// 유저 닉네임\nconst[name,setName]=useState('');// 유저 ID\nconst[userID,setUserID]=useState([{id:0}]);// url 정보\nconst[searchParams,setSearchParams]=useSearchParams();// 로그인 성공 시 토큰 검증\nuseEffect(()=>{const getUsername=async()=>{await checkedToken(setUsername,setName);};getUsername();},[]);useEffect(()=>{const getUserID=async()=>{if(name){const id=await fetchUserID(name);setUserID(id);setUserID2(id);}};getUserID();},[name]);useEffect(()=>{if(!searchParams.get('userID')&&!searchParams.get('username')&&username&&userID[0].id!==0){searchParams.set('username',username);searchParams.set('userID',userID[0].id);setSearchParams(searchParams);}},[username,userID]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 grid-rows-9 sm:grid-rows-1 sm:grid-cols-9 h-screen overflow-x-hidden\",children:[/*#__PURE__*/_jsx(Menu,{current_src:4}),/*#__PURE__*/_jsx(\"div\",{className:\" flex flex-col flex-wrap row-span-9 sm:col-span-8 \",children:userID&&name&&username&&/*#__PURE__*/_jsx(Contents,{src:\"profile\",username:username,name:name,userID:userID})})]})});}","map":{"version":3,"names":["Contents","Menu","useEffect","useState","checkedToken","fetchUserID","useParams","useSearchParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Profile","_ref","setUserID2","username","setUsername","name","setName","userID","setUserID","id","searchParams","setSearchParams","getUsername","getUserID","get","set","children","className","current_src","src"],"sources":["C:/git/project/client/src/componant/profile.js"],"sourcesContent":["//client/src/componant/profile.js\r\n\r\nimport Contents from './content/contents';\r\nimport Menu from './menu';\r\nimport { useEffect, useState } from 'react';\r\nimport { checkedToken } from './function/checkedToken';\r\nimport { fetchUserID } from './function/fetchUserID';\r\nimport { useParams, useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Profile({setUserID2}) {\r\n  // 로그인한 유저정보 관리 스테이트\r\n  // 유저이름\r\n  const [username, setUsername] = useState('');\r\n  // 유저 닉네임\r\n  const [name, setName] = useState('');\r\n  // 유저 ID\r\n  const [userID, setUserID] = useState([{ id: 0 }]);\r\n  // url 정보\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // 로그인 성공 시 토큰 검증\r\n  useEffect(() => {\r\n    const getUsername = async () => {\r\n      await checkedToken(setUsername, setName);\r\n    };\r\n    getUsername();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getUserID = async () => {\r\n      if (name) {\r\n        const id = await fetchUserID(name);\r\n        setUserID(id);\r\n        setUserID2(id);\r\n      }\r\n    };\r\n    getUserID();\r\n  }, [name]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !searchParams.get('userID') &&\r\n      !searchParams.get('username') &&\r\n      username &&\r\n      userID[0].id !== 0\r\n    ) {\r\n      searchParams.set('username', username);\r\n      searchParams.set('userID', userID[0].id);\r\n      setSearchParams(searchParams);\r\n    }\r\n  }, [username, userID]);\r\n\r\n  return (\r\n    <>\r\n      {/*가장 바깥영역 화면의 최대로 설정*/}\r\n      <div className=\"grid grid-cols-1 grid-rows-9 sm:grid-rows-1 sm:grid-cols-9 h-screen overflow-x-hidden\">\r\n        {/* 왼쪽: 가로 1 비율 (1/9) */}\r\n        <Menu current_src={4} />\r\n        {/* 오른쪽: 가로 8 비율 (8/9) */}\r\n        <div className=\" flex flex-col flex-wrap row-span-9 sm:col-span-8 \">\r\n          {userID && name && username && (\r\n            <Contents\r\n              src=\"profile\"\r\n              username={username}\r\n              name={name}\r\n              userID={userID}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,QAAQ,KAAM,oBAAoB,CACzC,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,YAAY,KAAQ,yBAAyB,CACtD,OAASC,WAAW,KAAQ,wBAAwB,CACpD,OAASC,SAAS,CAAEC,eAAe,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE9D,cAAe,SAAS,CAAAC,OAAOA,CAAAC,IAAA,CAAe,IAAd,CAACC,UAAU,CAAC,CAAAD,IAAA,CAC1C;AACA;AACA,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C;AACA,KAAM,CAACgB,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACpC;AACA,KAAM,CAACkB,MAAM,CAAEC,SAAS,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAEoB,EAAE,CAAE,CAAE,CAAC,CAAC,CAAC,CACjD;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGlB,eAAe,CAAC,CAAC,CAEzD;AACAL,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,KAAM,CAAAtB,YAAY,CAACc,WAAW,CAAEE,OAAO,CAAC,CAC1C,CAAC,CACDM,WAAW,CAAC,CAAC,CACf,CAAC,CAAE,EAAE,CAAC,CAENxB,SAAS,CAAC,IAAM,CACd,KAAM,CAAAyB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAIR,IAAI,CAAE,CACR,KAAM,CAAAI,EAAE,CAAG,KAAM,CAAAlB,WAAW,CAACc,IAAI,CAAC,CAClCG,SAAS,CAACC,EAAE,CAAC,CACbP,UAAU,CAACO,EAAE,CAAC,CAChB,CACF,CAAC,CACDI,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACR,IAAI,CAAC,CAAC,CAEVjB,SAAS,CAAC,IAAM,CACd,GACE,CAACsB,YAAY,CAACI,GAAG,CAAC,QAAQ,CAAC,EAC3B,CAACJ,YAAY,CAACI,GAAG,CAAC,UAAU,CAAC,EAC7BX,QAAQ,EACRI,MAAM,CAAC,CAAC,CAAC,CAACE,EAAE,GAAK,CAAC,CAClB,CACAC,YAAY,CAACK,GAAG,CAAC,UAAU,CAAEZ,QAAQ,CAAC,CACtCO,YAAY,CAACK,GAAG,CAAC,QAAQ,CAAER,MAAM,CAAC,CAAC,CAAC,CAACE,EAAE,CAAC,CACxCE,eAAe,CAACD,YAAY,CAAC,CAC/B,CACF,CAAC,CAAE,CAACP,QAAQ,CAAEI,MAAM,CAAC,CAAC,CAEtB,mBACEZ,IAAA,CAAAI,SAAA,EAAAiB,QAAA,cAEEnB,KAAA,QAAKoB,SAAS,CAAC,uFAAuF,CAAAD,QAAA,eAEpGrB,IAAA,CAACR,IAAI,EAAC+B,WAAW,CAAE,CAAE,CAAE,CAAC,cAExBvB,IAAA,QAAKsB,SAAS,CAAC,oDAAoD,CAAAD,QAAA,CAChET,MAAM,EAAIF,IAAI,EAAIF,QAAQ,eACzBR,IAAA,CAACT,QAAQ,EACPiC,GAAG,CAAC,SAAS,CACbhB,QAAQ,CAAEA,QAAS,CACnBE,IAAI,CAAEA,IAAK,CACXE,MAAM,CAAEA,MAAO,CAChB,CACF,CACE,CAAC,EACH,CAAC,CACN,CAAC,CAEP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}