{"ast":null,"code":"//client/src/componant/community/chatting.js\nimport React from\"react\";import{formatDateTime}from\"./utilities/dateUtils\";import{changeInterestColor}from\"../profile/utilities/interestColor\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Chatting(props){// 전달받은 flexCenter 값\nconst{flexCenter}=props;// 전달 받은 commmunityUserInfo,selectedTab, communityTab 값\nconst{chattingList,selectedTab,communityTab}=props;// 전달받은 selectedList 스테이트\nconst{selectedList}=props;// 전달받은 handleChangeList 값\nconst{handleChangeList}=props;return/*#__PURE__*/_jsxs(React.Fragment,{children:[chattingList.length===0&&selectedTab===communityTab[1]?/*#__PURE__*/_jsx(\"div\",{className:`${flexCenter} text-black text-opacity-50 w-full h-full`,children:\"\\uB300\\uD654\\uAC00\\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uB300\\uD654\\uB97C \\uC2DC\\uC791\\uD574\\uC8FC\\uC138\\uC694\"}):\"\",chattingList.map((info,idx)=>{const isSelectedList=selectedList===info.chat_room_id;const isSelectedTab=selectedTab===communityTab[1];const interest=info.theme.split(\"&\")[0].trim();const interestColor=changeInterestColor(interest);return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>{handleChangeList(info.chat_room_id);console.log(\"info\",info.chat_room_id);},className:`w-[90%] h-auto ${isSelectedList?\"bg-gray-200\":\"bg-white\"} ${isSelectedTab?\"block\":\"hidden\"} rounded-lg border border-solid border-gray-300 mb-2`,children:[/*#__PURE__*/_jsxs(\"div\",{className:`flex items-center justify-between px-3 h-[30px] w-full font-sans mt-2`,children:[/*#__PURE__*/_jsxs(\"div\",{className:`${flexCenter} h-[30px] w-auto text-[0.95rem] font-bold`,children:[info.title,/*#__PURE__*/_jsx(\"span\",{className:`${interestColor} w-auto px-3 ml-3 text-[0.7rem] rounded-2xl`,children:info.theme.split(\"&\")[0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:`text-black text-opacity-50`,children:[info.current_members,\"/\",info.max_members]})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flex  w-[full] h-[calc(100%_-_40px)] mb-2`,children:[/*#__PURE__*/_jsx(\"div\",{className:`${flexCenter} h-full w-[80px]`,children:/*#__PURE__*/_jsx(\"img\",{src:`${info.sender_profile_image_url}`,alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",className:` w-[50px] h-[50px] rounded-[50%] bg-cover bg-center`})}),/*#__PURE__*/_jsxs(\"div\",{className:`w-[calc(100%_-_160px)] h-full`,children:[/*#__PURE__*/_jsx(\"div\",{className:`font-sans font-bold m-1`,children:info.sender_name}),/*#__PURE__*/_jsx(\"div\",{className:`ml-1 truncate text-[0.9rem]`,children:info.last_message})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flex flex-col justify-between items-end w-[80px] h-full font-sans text-[0.8rem] pb-2 pr-2`,children:[info.unread_count!==0&&/*#__PURE__*/_jsx(\"div\",{className:`${flexCenter} w-auto min-w-[15px] h-[15px] rounded-full bg-red-500 border-4 border-solid border-red-500 text-white mt-1`,children:info.unread_count}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{children:formatDateTime(info.last_message_time)})]})]})]},info.chat_room_id);})]});}","map":{"version":3,"names":["React","formatDateTime","changeInterestColor","jsx","_jsx","jsxs","_jsxs","Chatting","props","flexCenter","chattingList","selectedTab","communityTab","selectedList","handleChangeList","Fragment","children","length","className","map","info","idx","isSelectedList","chat_room_id","isSelectedTab","interest","theme","split","trim","interestColor","onClick","console","log","title","current_members","max_members","src","sender_profile_image_url","alt","sender_name","last_message","unread_count","last_message_time"],"sources":["C:/git/project/client/src/componant/community/chatting.js"],"sourcesContent":["//client/src/componant/community/chatting.js\r\nimport React from \"react\";\r\nimport { formatDateTime } from \"./utilities/dateUtils\";\r\nimport { changeInterestColor } from \"../profile/utilities/interestColor\";\r\n\r\nexport default function Chatting(props) {\r\n    // 전달받은 flexCenter 값\r\n        const {flexCenter} = props;\r\n    // 전달 받은 commmunityUserInfo,selectedTab, communityTab 값\r\n        const {chattingList, selectedTab, communityTab} = props;\r\n\r\n    // 전달받은 selectedList 스테이트\r\n        const {selectedList} = props;\r\n    \r\n    // 전달받은 handleChangeList 값\r\n        const {handleChangeList} = props;\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            {/* 대화가 존재하지 않을 시 */}\r\n            {chattingList.length === 0 && selectedTab === communityTab[1] ? (\r\n                <div className={`${flexCenter} text-black text-opacity-50 w-full h-full`}>대화가존재하지 않습니다. 대화를 시작해주세요</div>\r\n            ) : \"\"}\r\n\r\n            {/* 대화목록 반복문 */}\r\n            {chattingList.map((info,idx) => {\r\n                const isSelectedList = selectedList === info.chat_room_id;\r\n                const isSelectedTab = selectedTab === communityTab[1];\r\n                const interest = info.theme.split(\"&\")[0].trim();\r\n                const interestColor = changeInterestColor(interest);\r\n\r\n                return (\r\n                    <div key={info.chat_room_id} onClick={() => { handleChangeList(info.chat_room_id); console.log(\"info\",info.chat_room_id) }} className={`w-[90%] h-auto ${isSelectedList ? \"bg-gray-200\" : \"bg-white\"} ${isSelectedTab ? \"block\" : \"hidden\"} rounded-lg border border-solid border-gray-300 mb-2`}>\r\n\r\n                        {/* 카테고리와 참여인원 */}\r\n                        <div className={`flex items-center justify-between px-3 h-[30px] w-full font-sans mt-2`}>\r\n                            <div className={`${flexCenter} h-[30px] w-auto text-[0.95rem] font-bold`}>{info.title}<span className={`${interestColor} w-auto px-3 ml-3 text-[0.7rem] rounded-2xl`}>{info.theme.split(\"&\")[0]}</span></div><div className={`text-black text-opacity-50`}>{info.current_members}/{info.max_members}</div>\r\n                        </div>\r\n\r\n                        {/* 프로필과 닉네임 대화내용 */}\r\n                        <div className={`flex  w-[full] h-[calc(100%_-_40px)] mb-2`}>\r\n\r\n                            {/* 프로필 이미지 */}\r\n                            <div className={`${flexCenter} h-full w-[80px]`}>\r\n                                <img src={`${info.sender_profile_image_url}`} alt='미니프로필' className={` w-[50px] h-[50px] rounded-[50%] bg-cover bg-center`}></img>\r\n                            </div>\r\n\r\n                            {/* 닉네임/대화내용 */}\r\n                            <div className={`w-[calc(100%_-_160px)] h-full`}>\r\n                                <div className={`font-sans font-bold m-1`}>{info.sender_name}</div>\r\n                                <div className={`ml-1 truncate text-[0.9rem]`}>{info.last_message}</div>\r\n                            </div>\r\n\r\n                            {/* 대화 시간 */}\r\n                            <div className={`flex flex-col justify-between items-end w-[80px] h-full font-sans text-[0.8rem] pb-2 pr-2`}>\r\n                                {info.unread_count !== 0 &&\r\n                                <div className={`${flexCenter} w-auto min-w-[15px] h-[15px] rounded-full bg-red-500 border-4 border-solid border-red-500 text-white mt-1`}>{info.unread_count}</div>\r\n                                }\r\n                                {/* 가짜영역 */}\r\n                                <div></div>\r\n                                <div>{formatDateTime(info.last_message_time)}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n}"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,cAAc,KAAQ,uBAAuB,CACtD,OAASC,mBAAmB,KAAQ,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzE,cAAe,SAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACpC;AACI,KAAM,CAACC,UAAU,CAAC,CAAGD,KAAK,CAC9B;AACI,KAAM,CAACE,YAAY,CAAEC,WAAW,CAAEC,YAAY,CAAC,CAAGJ,KAAK,CAE3D;AACI,KAAM,CAACK,YAAY,CAAC,CAAGL,KAAK,CAEhC;AACI,KAAM,CAACM,gBAAgB,CAAC,CAAGN,KAAK,CAEpC,mBACIF,KAAA,CAACN,KAAK,CAACe,QAAQ,EAAAC,QAAA,EAEVN,YAAY,CAACO,MAAM,GAAK,CAAC,EAAIN,WAAW,GAAKC,YAAY,CAAC,CAAC,CAAC,cACzDR,IAAA,QAAKc,SAAS,CAAE,GAAGT,UAAU,2CAA4C,CAAAO,QAAA,CAAC,8HAAwB,CAAK,CAAC,CACxG,EAAE,CAGLN,YAAY,CAACS,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,GAAK,CAC5B,KAAM,CAAAC,cAAc,CAAGT,YAAY,GAAKO,IAAI,CAACG,YAAY,CACzD,KAAM,CAAAC,aAAa,CAAGb,WAAW,GAAKC,YAAY,CAAC,CAAC,CAAC,CACrD,KAAM,CAAAa,QAAQ,CAAGL,IAAI,CAACM,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAChD,KAAM,CAAAC,aAAa,CAAG3B,mBAAmB,CAACuB,QAAQ,CAAC,CAEnD,mBACInB,KAAA,QAA6BwB,OAAO,CAAEA,CAAA,GAAM,CAAEhB,gBAAgB,CAACM,IAAI,CAACG,YAAY,CAAC,CAAEQ,OAAO,CAACC,GAAG,CAAC,MAAM,CAACZ,IAAI,CAACG,YAAY,CAAC,CAAC,CAAE,CAACL,SAAS,CAAE,kBAAkBI,cAAc,CAAG,aAAa,CAAG,UAAU,IAAIE,aAAa,CAAG,OAAO,CAAG,QAAQ,sDAAuD,CAAAR,QAAA,eAG7RV,KAAA,QAAKY,SAAS,CAAE,uEAAwE,CAAAF,QAAA,eACpFV,KAAA,QAAKY,SAAS,CAAE,GAAGT,UAAU,2CAA4C,CAAAO,QAAA,EAAEI,IAAI,CAACa,KAAK,cAAC7B,IAAA,SAAMc,SAAS,CAAE,GAAGW,aAAa,6CAA8C,CAAAb,QAAA,CAAEI,IAAI,CAACM,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAO,CAAC,EAAK,CAAC,cAAArB,KAAA,QAAKY,SAAS,CAAE,4BAA6B,CAAAF,QAAA,EAAEI,IAAI,CAACc,eAAe,CAAC,GAAC,CAACd,IAAI,CAACe,WAAW,EAAM,CAAC,EACzS,CAAC,cAGN7B,KAAA,QAAKY,SAAS,CAAE,2CAA4C,CAAAF,QAAA,eAGxDZ,IAAA,QAAKc,SAAS,CAAE,GAAGT,UAAU,kBAAmB,CAAAO,QAAA,cAC5CZ,IAAA,QAAKgC,GAAG,CAAE,GAAGhB,IAAI,CAACiB,wBAAwB,EAAG,CAACC,GAAG,CAAC,gCAAO,CAACpB,SAAS,CAAE,qDAAsD,CAAM,CAAC,CACjI,CAAC,cAGNZ,KAAA,QAAKY,SAAS,CAAE,+BAAgC,CAAAF,QAAA,eAC5CZ,IAAA,QAAKc,SAAS,CAAE,yBAA0B,CAAAF,QAAA,CAAEI,IAAI,CAACmB,WAAW,CAAM,CAAC,cACnEnC,IAAA,QAAKc,SAAS,CAAE,6BAA8B,CAAAF,QAAA,CAAEI,IAAI,CAACoB,YAAY,CAAM,CAAC,EACvE,CAAC,cAGNlC,KAAA,QAAKY,SAAS,CAAE,2FAA4F,CAAAF,QAAA,EACvGI,IAAI,CAACqB,YAAY,GAAK,CAAC,eACxBrC,IAAA,QAAKc,SAAS,CAAE,GAAGT,UAAU,4GAA6G,CAAAO,QAAA,CAAEI,IAAI,CAACqB,YAAY,CAAM,CAAC,cAGpKrC,IAAA,SAAU,CAAC,cACXA,IAAA,QAAAY,QAAA,CAAMf,cAAc,CAACmB,IAAI,CAACsB,iBAAiB,CAAC,CAAM,CAAC,EAClD,CAAC,EACL,CAAC,GA9BAtB,IAAI,CAACG,YA+BV,CAAC,CAEd,CAAC,CAAC,EACU,CAAC,CAEzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}