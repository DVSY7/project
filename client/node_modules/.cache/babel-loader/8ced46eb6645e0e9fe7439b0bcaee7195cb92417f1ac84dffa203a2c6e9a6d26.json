{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\createList.js\",\n  _s = $RefreshSig$();\n// client/createList.js\n\nimport { useEffect, useState } from \"react\";\nimport Menu from \"./menu.js\";\nimport TopButtons from \"./create/list/TopButtons.js\";\nimport IsPlanned from \"./create/list/IsPlanned.js\";\nimport TagManager from \"./create/list/TagManager.js\";\nimport TitleAndSelectInterest from \"./create/list/TitleAndSelectInterest.js\";\nimport DayList from \"./create/list/DayList.js\";\nimport axios from \"axios\";\nimport { checkedToken } from \"./function/checkedToken.js\";\nimport { fetchUserID } from \"./function/fetchUserID.js\";\nimport { fetchUserInfo } from \"./community/api/fetchUserInfo.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateList() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [userName, setUsername] = useState(\"\");\n  const [userID, setUserID] = useState(\"\");\n  const [userInfo, setUserInfo] = useState(\"\");\n  useEffect(() => {\n    const getUserInfo = async () => {\n      try {\n        await checkedToken(setUsername, setName);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUserInfo();\n  }, []);\n  useEffect(() => {\n    const getUserID = async () => {\n      try {\n        const id = await fetchUserID(name);\n        const userInfo = await fetchUserInfo(name);\n        setUserID(id);\n        setUserInfo(userInfo);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getUserID();\n  }, [name, userName]);\n  useEffect(() => {\n    console.log(userID);\n  }, [userID]);\n\n  // 계획형, 비계획형 상태관리 스테이트\n  const [isPlanned, setIsPlanned] = useState(true);\n  // 제목과 소개글 상태 추가\n  const [title, setTitle] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  // 마감 날짜\n  const [endDate, setEndDate] = useState(\"\");\n  // 만날 장소\n  const [meetPlace, setMeetPlace] = useState(\"\");\n  // 예산\n  const [budget, setBudget] = useState(\"\");\n  // 실행 기간\n  const [periodStartDate, setPeriodStartDate] = useState(\"\");\n  const [periodEndDate, setPeriodEndDate] = useState(\"\");\n\n  //선택된 관심사 상태\n  const [selectedInterest, setSelectedInterest] = useState(\"\");\n  // 관심사 선택 항목변수\n  const selectInterest = [\"여행 & 탐험\", \"도전 & 어드벤처\", \"자기계발 & 교육\", \"건강 & 운동\", \"문화 & 예술\", \"요리 & 미식\", \"봉사 & 나눔\", \"취미 & 라이프\", \"기타\"];\n\n  // 태그 목록\n  const [tags, setTags] = useState([]);\n  // 입력 필드 표시 여부\n  const [showInput, setShowInput] = useState(false);\n  // 현재 입력된 태그\n  const [currentTag, setCurrentTag] = useState(\"\");\n  // 수정 중인 태그의 인덱스\n  const [editingIndex, setEditingIndex] = useState(null);\n  // 수정 중인 태그 값\n  const [editingTag, setEditingTag] = useState(\"\");\n\n  // 혼자하기, 같이하기 상태관리 스테이트\n  const [Group, setGroup] = useState(true);\n  // 대면, 비대면 여부 상태관리 스테이트\n  const [Offline, setOffline] = useState(true);\n\n  // 일차 목록 스태이트\n  const [days, setDays] = useState([\"1일차\"]);\n  // 등록된 항목 상태\n  const [registeredItems, setRegisteredItems] = useState({});\n\n  // 태그 추가 함수\n  const handleAddTag = () => {\n    if (currentTag.trim() !== \"\") {\n      // 제목과 글에서 단어 추출\n      const titleWords = title.split(/\\s+/).filter(word => word.length > 1);\n      const textWords = text.split(/\\s+/).filter(word => word.length > 1);\n      // 태그로 사용할수 있는 단어 목록 생성\n      const availableWords = [...new Set([...titleWords, ...textWords])];\n\n      // 앞에 #이 붙였으면 자르고, 없으면 그래로 비교\n      const tagWithoutHash = currentTag.startsWith(\"#\") ? currentTag.slice(1) : currentTag;\n      // 입력된 태그다 제목이나 글에 포함된 단어인지 확인\n      if (!availableWords.some(word => word.includes(tagWithoutHash))) {\n        alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");\n        // 잘못된 태그 입력시 입력값 초기화\n        setCurrentTag(\"\");\n        // 잘못된 태그 입력시 입력 필드 숨김\n        setShowInput(false);\n        return;\n      }\n\n      // 태그 앞에 #이 없으면 추가\n      const formattedTag = currentTag.startsWith(\"#\") ? currentTag.trim() : `#${currentTag.trim()}`;\n      setTags([...tags, formattedTag]);\n      // 입력 필드 초기화\n      setCurrentTag(\"\");\n      // 입력 필드 숨기기\n      setShowInput(false);\n    }\n  };\n\n  // 태그 수정 완료 함수\n  const handleEditTag = () => {\n    if (editingTag.trim() !== \"\") {\n      // 제목과 글에서 단어 추출\n      const titleWords = title.split(/\\s+/).filter(word => word.length > 1);\n      const textWords = text.split(/\\s+/).filter(word => word.length > 1);\n      const availableWords = [...new Set([...titleWords, ...textWords])];\n\n      // 수정된 태그가 앞에 #붙어있으면 자르고, 없으면 그대로 비교\n      const tagWithoutHash = editingTag.startsWith(\"#\") ? editingTag.slice(1) : editingTag;\n      // 포함된 단어가 없다면 alert창 실행\n      if (!availableWords.some(word => word.includes(tagWithoutHash))) {\n        alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");\n        return;\n      }\n      const formattedTag = editingTag.startsWith(\"#\") ? editingTag.trim() : `#${editingTag.trim()}`;\n      const updatedTags = [...tags];\n      // 수정된 태그 저장\n      updatedTags[editingIndex] = formattedTag;\n      setTags(updatedTags);\n    }\n    // 수정 상태 초기화\n    setEditingIndex(null);\n    // 수정 필드 초기화\n    setEditingTag(\"\");\n  };\n\n  // 제목이나 글 수정 할때마다 태그 검사\n  useEffect(() => {\n    const titleWords = title.split(/\\s+/).filter(word => word.length > 1);\n    const textWords = text.split(/\\s+/).filter(word => word.length > 1);\n    const availableWords = [...new Set([...titleWords, textWords])];\n\n    // 태그들 중에서 유효하지 않은 태그 제거\n    const validTags = tags.filter(tag => {\n      const tagWithoutHash = tag.startsWith(\"#\") ? tag.slice(1) : tag;\n      return !availableWords.some(word => word.includes(tagWithoutHash));\n    });\n    // 유효하지 않은 태그가 있다면 태그 목록 업데이트\n    if (validTags.length !== tags.length) {\n      setTags(validTags);\n    }\n  }, [title, text]);\n\n  // 태그 삭제 함수\n  const handleDeleteTag = index => {\n    // 해당 인덱스의 태그 제거\n    const updatedTags = tags.filter((_, i) => i !== index); // 삭제할 태그만 삭제, 나머지 남김\n    setTags(updatedTags);\n  };\n\n  // 엔터 키로 태그 추가\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleAddTag();\n    }\n  };\n\n  // AI 추천 결과 자동 적용\n  useEffect(() => {\n    const aiRecommendedItems = localStorage.getItem('aiRecommendedItems');\n    const aiRecommendedTitle = localStorage.getItem('aiRecommendedTitle');\n    const aiRecommendedDescription = localStorage.getItem('aiRecommendedDescription');\n    if (aiRecommendedItems) {\n      try {\n        const parsedItems = JSON.parse(aiRecommendedItems);\n\n        // 일차 수에 맞게 days 배열 업데이트\n        const dayKeys = Object.keys(parsedItems);\n        if (dayKeys.length > 0) {\n          setDays(dayKeys);\n        }\n\n        // AI 추천 항목들을 registeredItems에 적용\n        setRegisteredItems(parsedItems);\n\n        // 제목과 설명도 자동으로 설정\n        if (aiRecommendedTitle) {\n          setTitle(aiRecommendedTitle);\n        }\n        if (aiRecommendedDescription) {\n          setText(aiRecommendedDescription);\n        }\n\n        // localStorage에서 데이터 삭제 (한 번만 적용되도록)\n        localStorage.removeItem('aiRecommendedItems');\n        localStorage.removeItem('aiRecommendedTitle');\n        localStorage.removeItem('aiRecommendedDescription');\n        console.log('AI 추천 결과가 성공적으로 적용되었습니다:', parsedItems);\n      } catch (error) {\n        console.error('AI 추천 결과 적용 중 오류:', error);\n        alert('AI 추천 결과 적용 중 오류가 발생했습니다.');\n      }\n    }\n  }, []);\n\n  // 등록버튼 로직\n  const handleSubmit = async () => {\n    try {\n      if (!title.trim()) {\n        alert(\"제목을 입력해주세요\");\n        return;\n      }\n      if (!text.trim()) {\n        alert(\"소개글을 입력해주세요\");\n        return;\n      }\n      if (!selectedInterest) {\n        alert(\"테마를 선택해주세요\");\n        return;\n      }\n\n      // ---일차별 항목 유효성 검사---\n      const hasValidItems = days.every((day, index) => {\n        const dayItems = registeredItems[day] || []; // 각 일차에 등로된 항목들\n        if (dayItems.length === 0) {\n          alert(`${index + 1}일차에 최소 하나이상의 항목(이미지 또는 장소)를 등록해주세요`);\n          return false;\n        }\n        return true;\n      });\n\n      // 유효하지 않으면 아래 코드 실행하지 않음\n      if (!hasValidItems) return;\n\n      // 계획형일 경우에만\n      if (isPlanned) {\n        if (!endDate) {\n          alert(\"마감 날짜를 설정해주세요 📅\");\n          return;\n        }\n        if (!meetPlace) {\n          alert(\"만날 장소를 설정헤주세요 📍\");\n          return;\n        }\n        if (!budget) {\n          alert(\"예산을 입력해주세요 💰\");\n          return;\n        }\n        if (!periodStartDate || !periodEndDate) {\n          alert(\"실행 기간을 설정해주세요 📆\");\n          return;\n        }\n      }\n\n      // ---서버에 보낼 데이터 구성---\n      const listData = {\n        userID: userID[0].id,\n        title: title.trim(),\n        description: text.trim(),\n        isPlanned,\n        isGroup: Group,\n        maxParticipants: Group ? parseInt(document.querySelector(\"select\").value) : 1,\n        isOffline: Offline,\n        interest: selectedInterest,\n        days: days.map((day, index) => ({\n          dayNumber: index + 1,\n          // 각 날짜에 등록된 항목들(사진, 장소)\n          items: registeredItems[day] || []\n        })),\n        // # 제거\n        tags: tags.map(tag => tag.replace(/^#/, \"\")),\n        // 계획형일 때만 추가 필드들 포함\n        ...(isPlanned && {\n          endDate: endDate,\n          meetPlace: meetPlace,\n          budget: parseInt(budget) || 0,\n          periodStartDate: periodStartDate,\n          periodEndDate: periodEndDate\n        })\n      };\n\n      // post 요청으로 로컬호스트 5000번에 보냄, 2번째 인자: 전송할 json데이터, 3번째 인자: 옴션\n      const response = await axios.post(\"http://localhost:5000/api/lists/create\", listData, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (!window.confirm(\"리스트 작성을 완료하시겠습니까?\")) {\n        return;\n      }\n      ;\n      if (response.data.success) {\n        alert(\"리스트가 성공적으로 등록되었습니다.\");\n        // 등록 성공 후 홈으로 이동\n        window.location.href = \"/home\";\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"리스트 등록 중 오류 발생: \", error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"리스트 등록 중 오류가 발생했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 grid-rows-9 sm:grid-rows-1 sm:grid-cols-sm-minmax sm:grid-cols-9 h-screen overflow-x-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        current_src: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col flex-wrap row-span-9 sm:col-span-8 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-full h-full grid grid-cols-[3fr_2fr]`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-rows-[1fr_7fr_1fr] px-4 py-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex grid grid-rows-[0.5fr_1fr]\",\n              children: [/*#__PURE__*/_jsxDEV(TopButtons, {\n                isPlanned: isPlanned,\n                setIsPlanned: setIsPlanned,\n                Group: Group,\n                setGroup: setGroup,\n                Offline: Offline,\n                setOffline: setOffline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TitleAndSelectInterest, {\n                selectInterest: selectInterest,\n                selectedInterest: selectedInterest,\n                setSelectedInterest: setSelectedInterest,\n                title: title,\n                setTitle: setTitle,\n                userInfo: userInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-rows-[1fr_10fr]\",\n              children: /*#__PURE__*/_jsxDEV(DayList, {\n                days: days,\n                setDays: setDays,\n                registeredItems: registeredItems,\n                setRegisteredItems: setRegisteredItems\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: /*#__PURE__*/_jsxDEV(TagManager, {\n                tags: tags,\n                setTags: setTags,\n                showInput: showInput,\n                setShowInput: setShowInput,\n                currentTag: currentTag,\n                setCurrentTag: setCurrentTag,\n                editingIndex: editingIndex,\n                setEditingIndex: setEditingIndex,\n                editingTag: editingTag,\n                setEditingTag: setEditingTag,\n                handleAddTag: handleAddTag,\n                handleEditTag: handleEditTag,\n                handleDeleteTag: handleDeleteTag,\n                handleKeyPress: handleKeyPress,\n                title: title,\n                setTitle: setTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-l flex flex-col h-full\",\n            children: isPlanned ?\n            /*#__PURE__*/\n            // 계획형: 40% (마감날짜/만날장소/예산/실행기간) + 50% (글작성) + 10% (등록하기)\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-[40%] flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(IsPlanned, {\n                  setEndDate: setEndDate,\n                  setMeetPlace: setMeetPlace,\n                  setBudget: setBudget,\n                  setPeriodStartDate: setPeriodStartDate,\n                  setPeriodEndDate: setPeriodEndDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-[50%] flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"w-full h-full border rounded m-4 p-4 resize-none\",\n                  placeholder: \"\\uC18C\\uAC1C \\uAE00\\uC744 \\uC790\\uC720\\uB86D\\uAC8C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                  value: text,\n                  onChange: e => setText(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-[10%] flex justify-end items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\",\n                  onClick: handleSubmit,\n                  children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) :\n            /*#__PURE__*/\n            // 자유형: 90% (글작성) + 10% (등록하기)\n            _jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-[90%] flex items-center justify-center\",\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"w-full h-full border rounded p-2 resize-none\",\n                  placeholder: \"\\uC18C\\uAC1C \\uAE00\\uC744 \\uC790\\uC720\\uB86D\\uAC8C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n                  value: text,\n                  onChange: e => setText(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-[10%] flex justify-end items-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\",\n                  onClick: handleSubmit,\n                  children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(CreateList, \"ruM2SBB2u/fL96A8pXIDRtdnP5A=\");\n_c = CreateList;\nvar _c;\n$RefreshReg$(_c, \"CreateList\");","map":{"version":3,"names":["useEffect","useState","Menu","TopButtons","IsPlanned","TagManager","TitleAndSelectInterest","DayList","axios","checkedToken","fetchUserID","fetchUserInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateList","_s","name","setName","userName","setUsername","userID","setUserID","userInfo","setUserInfo","getUserInfo","error","console","getUserID","id","log","isPlanned","setIsPlanned","title","setTitle","text","setText","endDate","setEndDate","meetPlace","setMeetPlace","budget","setBudget","periodStartDate","setPeriodStartDate","periodEndDate","setPeriodEndDate","selectedInterest","setSelectedInterest","selectInterest","tags","setTags","showInput","setShowInput","currentTag","setCurrentTag","editingIndex","setEditingIndex","editingTag","setEditingTag","Group","setGroup","Offline","setOffline","days","setDays","registeredItems","setRegisteredItems","handleAddTag","trim","titleWords","split","filter","word","length","textWords","availableWords","Set","tagWithoutHash","startsWith","slice","some","includes","alert","formattedTag","handleEditTag","updatedTags","validTags","tag","handleDeleteTag","index","_","i","handleKeyPress","e","key","aiRecommendedItems","localStorage","getItem","aiRecommendedTitle","aiRecommendedDescription","parsedItems","JSON","parse","dayKeys","Object","keys","removeItem","handleSubmit","hasValidItems","every","day","dayItems","listData","description","isGroup","maxParticipants","parseInt","document","querySelector","value","isOffline","interest","map","dayNumber","items","replace","response","post","headers","Authorization","window","confirm","data","success","location","href","_error$response","_error$response$data","message","children","className","current_src","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/createList.js"],"sourcesContent":["// client/createList.js\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport Menu from \"./menu.js\";\r\nimport TopButtons from \"./create/list/TopButtons.js\";\r\nimport IsPlanned from \"./create/list/IsPlanned.js\";\r\nimport TagManager from \"./create/list/TagManager.js\";\r\nimport TitleAndSelectInterest from \"./create/list/TitleAndSelectInterest.js\";\r\nimport DayList from \"./create/list/DayList.js\";\r\nimport axios from \"axios\";\r\nimport { checkedToken } from \"./function/checkedToken.js\";\r\nimport { fetchUserID } from \"./function/fetchUserID.js\";\r\nimport { fetchUserInfo } from \"./community/api/fetchUserInfo.js\";\r\n\r\nexport default function CreateList() {\r\n\r\n\r\n  const [name,setName] = useState(\"\");\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [userID, setUserID] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n\r\n  useEffect(()=>{\r\n    const getUserInfo = async()=>{\r\n      try{\r\n        await checkedToken(setUsername, setName);\r\n      }catch(error){\r\n        console.error(error);\r\n      }\r\n    }\r\n    getUserInfo();\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    const getUserID = async()=>{\r\n      try{\r\n        const id = await fetchUserID(name);\r\n        const userInfo = await fetchUserInfo(name);\r\n        setUserID(id);\r\n        setUserInfo(userInfo);\r\n      }catch(error){\r\n        console.error(error);\r\n      }\r\n    }\r\n    getUserID();\r\n  },[name,userName]);\r\n\r\n  useEffect(()=>{\r\n    console.log(userID);\r\n  },[userID])\r\n\r\n  // 계획형, 비계획형 상태관리 스테이트\r\n  const [isPlanned, setIsPlanned] = useState(true);\r\n  // 제목과 소개글 상태 추가\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  // 마감 날짜\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  // 만날 장소\r\n  const [meetPlace, setMeetPlace] = useState(\"\");\r\n  // 예산\r\n  const [budget, setBudget] = useState(\"\");\r\n  // 실행 기간\r\n  const [periodStartDate, setPeriodStartDate] = useState(\"\");\r\n  const [periodEndDate, setPeriodEndDate] = useState(\"\");\r\n\r\n  //선택된 관심사 상태\r\n  const [selectedInterest, setSelectedInterest] = useState(\"\");\r\n  // 관심사 선택 항목변수\r\n  const selectInterest = [\r\n    \"여행 & 탐험\",\r\n    \"도전 & 어드벤처\",\r\n    \"자기계발 & 교육\",\r\n    \"건강 & 운동\",\r\n    \"문화 & 예술\",\r\n    \"요리 & 미식\",\r\n    \"봉사 & 나눔\",\r\n    \"취미 & 라이프\",\r\n    \"기타\",\r\n  ];\r\n\r\n  // 태그 목록\r\n  const [tags, setTags] = useState([]);\r\n  // 입력 필드 표시 여부\r\n  const [showInput, setShowInput] = useState(false);\r\n  // 현재 입력된 태그\r\n  const [currentTag, setCurrentTag] = useState(\"\");\r\n  // 수정 중인 태그의 인덱스\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n  // 수정 중인 태그 값\r\n  const [editingTag, setEditingTag] = useState(\"\");\r\n\r\n  // 혼자하기, 같이하기 상태관리 스테이트\r\n  const [Group, setGroup] = useState(true);\r\n  // 대면, 비대면 여부 상태관리 스테이트\r\n  const [Offline, setOffline] = useState(true);\r\n\r\n  // 일차 목록 스태이트\r\n  const [days, setDays] = useState([\"1일차\"]);\r\n  // 등록된 항목 상태\r\n  const [registeredItems, setRegisteredItems] = useState({});\r\n\r\n  // 태그 추가 함수\r\n  const handleAddTag = () => {\r\n    if (currentTag.trim() !== \"\") {\r\n      // 제목과 글에서 단어 추출\r\n      const titleWords = title.split(/\\s+/).filter((word) => word.length > 1);\r\n      const textWords = text.split(/\\s+/).filter((word) => word.length > 1);\r\n      // 태그로 사용할수 있는 단어 목록 생성\r\n      const availableWords = [...new Set([...titleWords, ...textWords])];\r\n\r\n      // 앞에 #이 붙였으면 자르고, 없으면 그래로 비교\r\n      const tagWithoutHash = currentTag.startsWith(\"#\")\r\n        ? currentTag.slice(1)\r\n        : currentTag;\r\n      // 입력된 태그다 제목이나 글에 포함된 단어인지 확인\r\n      if (!availableWords.some((word) => word.includes(tagWithoutHash))) {\r\n        alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");\r\n        // 잘못된 태그 입력시 입력값 초기화\r\n        setCurrentTag(\"\");\r\n        // 잘못된 태그 입력시 입력 필드 숨김\r\n        setShowInput(false);\r\n        return;\r\n      }\r\n\r\n      // 태그 앞에 #이 없으면 추가\r\n      const formattedTag = currentTag.startsWith(\"#\")\r\n        ? currentTag.trim()\r\n        : `#${currentTag.trim()}`;\r\n\r\n      setTags([...tags, formattedTag]);\r\n      // 입력 필드 초기화\r\n      setCurrentTag(\"\");\r\n      // 입력 필드 숨기기\r\n      setShowInput(false);\r\n    }\r\n  };\r\n\r\n  // 태그 수정 완료 함수\r\n  const handleEditTag = () => {\r\n    if (editingTag.trim() !== \"\") {\r\n      // 제목과 글에서 단어 추출\r\n      const titleWords = title.split(/\\s+/).filter((word) => word.length > 1);\r\n      const textWords = text.split(/\\s+/).filter((word) => word.length > 1);\r\n      const availableWords = [...new Set([...titleWords, ...textWords])];\r\n\r\n      // 수정된 태그가 앞에 #붙어있으면 자르고, 없으면 그대로 비교\r\n      const tagWithoutHash = editingTag.startsWith(\"#\")\r\n        ? editingTag.slice(1)\r\n        : editingTag;\r\n      // 포함된 단어가 없다면 alert창 실행\r\n      if (!availableWords.some((word) => word.includes(tagWithoutHash))) {\r\n        alert(\"태그는 제목이나 글에 포함된 단어만 사용할 수 있습니다.\");\r\n        return;\r\n      }\r\n\r\n      const formattedTag = editingTag.startsWith(\"#\")\r\n        ? editingTag.trim()\r\n        : `#${editingTag.trim()}`;\r\n\r\n      const updatedTags = [...tags];\r\n      // 수정된 태그 저장\r\n      updatedTags[editingIndex] = formattedTag;\r\n      setTags(updatedTags);\r\n    }\r\n    // 수정 상태 초기화\r\n    setEditingIndex(null);\r\n    // 수정 필드 초기화\r\n    setEditingTag(\"\");\r\n  };\r\n\r\n  // 제목이나 글 수정 할때마다 태그 검사\r\n  useEffect(() => {\r\n    const titleWords = title.split(/\\s+/).filter((word) => word.length > 1);\r\n    const textWords = text.split(/\\s+/).filter((word) => word.length > 1);\r\n    const availableWords = [...new Set([...titleWords, textWords])];\r\n\r\n    // 태그들 중에서 유효하지 않은 태그 제거\r\n    const validTags = tags.filter((tag) => {\r\n      const tagWithoutHash = tag.startsWith(\"#\") ? tag.slice(1) : tag;\r\n      return !availableWords.some((word) => word.includes(tagWithoutHash));\r\n    });\r\n    // 유효하지 않은 태그가 있다면 태그 목록 업데이트\r\n    if (validTags.length !== tags.length) {\r\n      setTags(validTags);\r\n    }\r\n  }, [title, text]);\r\n\r\n  // 태그 삭제 함수\r\n  const handleDeleteTag = (index) => {\r\n    // 해당 인덱스의 태그 제거\r\n    const updatedTags = tags.filter((_, i) => i !== index); // 삭제할 태그만 삭제, 나머지 남김\r\n    setTags(updatedTags);\r\n  };\r\n\r\n  // 엔터 키로 태그 추가\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddTag();\r\n    }\r\n  };\r\n\r\n  // AI 추천 결과 자동 적용\r\n  useEffect(() => {\r\n    const aiRecommendedItems = localStorage.getItem('aiRecommendedItems');\r\n    const aiRecommendedTitle = localStorage.getItem('aiRecommendedTitle');\r\n    const aiRecommendedDescription = localStorage.getItem('aiRecommendedDescription');\r\n    \r\n    if (aiRecommendedItems) {\r\n      try {\r\n        const parsedItems = JSON.parse(aiRecommendedItems);\r\n        \r\n        // 일차 수에 맞게 days 배열 업데이트\r\n        const dayKeys = Object.keys(parsedItems);\r\n        if (dayKeys.length > 0) {\r\n          setDays(dayKeys);\r\n        }\r\n        \r\n        // AI 추천 항목들을 registeredItems에 적용\r\n        setRegisteredItems(parsedItems);\r\n        \r\n        // 제목과 설명도 자동으로 설정\r\n        if (aiRecommendedTitle) {\r\n          setTitle(aiRecommendedTitle);\r\n        }\r\n        if (aiRecommendedDescription) {\r\n          setText(aiRecommendedDescription);\r\n        }\r\n        \r\n        // localStorage에서 데이터 삭제 (한 번만 적용되도록)\r\n        localStorage.removeItem('aiRecommendedItems');\r\n        localStorage.removeItem('aiRecommendedTitle');\r\n        localStorage.removeItem('aiRecommendedDescription');\r\n        \r\n        console.log('AI 추천 결과가 성공적으로 적용되었습니다:', parsedItems);\r\n      } catch (error) {\r\n        console.error('AI 추천 결과 적용 중 오류:', error);\r\n        alert('AI 추천 결과 적용 중 오류가 발생했습니다.');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // 등록버튼 로직\r\n  const handleSubmit = async () => {\r\n    try {\r\n      if (!title.trim()) {\r\n        alert(\"제목을 입력해주세요\");\r\n        return;\r\n      }\r\n      if (!text.trim()) {\r\n        alert(\"소개글을 입력해주세요\");\r\n        return;\r\n      }\r\n      if (!selectedInterest) {\r\n        alert(\"테마를 선택해주세요\");\r\n        return;\r\n      }\r\n\r\n      // ---일차별 항목 유효성 검사---\r\n      const hasValidItems = days.every((day, index) => {\r\n        const dayItems = registeredItems[day] || []; // 각 일차에 등로된 항목들\r\n        if (dayItems.length === 0) {\r\n          alert(\r\n            `${\r\n              index + 1\r\n            }일차에 최소 하나이상의 항목(이미지 또는 장소)를 등록해주세요`\r\n          );\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n\r\n      \r\n      // 유효하지 않으면 아래 코드 실행하지 않음\r\n      if (!hasValidItems) return;\r\n\r\n      // 계획형일 경우에만\r\n      if(isPlanned){\r\n        if(!endDate){\r\n          alert(\"마감 날짜를 설정해주세요 📅\");\r\n          return;\r\n        }\r\n        if(!meetPlace){\r\n          alert(\"만날 장소를 설정헤주세요 📍\");\r\n          return;\r\n        }\r\n        if(!budget){\r\n          alert(\"예산을 입력해주세요 💰\");\r\n          return;\r\n        }\r\n        if(!periodStartDate || !periodEndDate){\r\n          alert(\"실행 기간을 설정해주세요 📆\");\r\n          return;\r\n        }  \r\n      }\r\n\r\n      // ---서버에 보낼 데이터 구성---\r\n      const listData = {\r\n        userID:userID[0].id,\r\n        title: title.trim(),\r\n        description: text.trim(),\r\n        isPlanned,\r\n        isGroup: Group,\r\n        maxParticipants: Group\r\n          ? parseInt(document.querySelector(\"select\").value)\r\n          : 1,\r\n        isOffline: Offline,\r\n        interest: selectedInterest,\r\n        days: days.map((day, index) => ({\r\n          dayNumber: index + 1,\r\n          // 각 날짜에 등록된 항목들(사진, 장소)\r\n          items: registeredItems[day] || [],\r\n        })),\r\n        // # 제거\r\n        tags: tags.map((tag) => tag.replace(/^#/, \"\")),\r\n        // 계획형일 때만 추가 필드들 포함\r\n        ...(isPlanned && {\r\n          endDate: endDate,\r\n          meetPlace: meetPlace,\r\n          budget: parseInt(budget) || 0,\r\n          periodStartDate: periodStartDate,\r\n          periodEndDate: periodEndDate,\r\n        }),\r\n\r\n      };\r\n\r\n      // post 요청으로 로컬호스트 5000번에 보냄, 2번째 인자: 전송할 json데이터, 3번째 인자: 옴션\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/lists/create\",\r\n        listData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if(!window.confirm(\"리스트 작성을 완료하시겠습니까?\")){\r\n        return;\r\n      };\r\n\r\n      if (response.data.success) {\r\n        alert(\"리스트가 성공적으로 등록되었습니다.\");\r\n        // 등록 성공 후 홈으로 이동\r\n        window.location.href = \"/home\";\r\n      }\r\n    } catch (error) {\r\n      console.error(\"리스트 등록 중 오류 발생: \", error);\r\n      alert(\r\n        error.response?.data?.message || \"리스트 등록 중 오류가 발생했습니다.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/*가장 바깥영역 화면의 최대로 설정*/}\r\n      <div className=\"grid grid-cols-1 grid-rows-9 sm:grid-rows-1 sm:grid-cols-sm-minmax sm:grid-cols-9 h-screen overflow-x-hidden\">\r\n        {/* 왼쪽: 가로 1 비율 (1/9) */}\r\n        <Menu current_src={5} />\r\n        {/* 오른쪽: 가로 8 비율 (8/9) */}\r\n        <div className=\"flex flex-col flex-wrap row-span-9 sm:col-span-8 \">\r\n          {/* <div className=\"flex items-center justify-center  w-full h-full\"> */}\r\n          <div className={`w-full h-full grid grid-cols-[3fr_2fr]`}>\r\n            {/* 왼쪽 영역 */}\r\n            <div className=\"grid grid-rows-[1fr_7fr_1fr] px-4 py-8\">\r\n              {/* 상단 영역 */}\r\n              <div className=\"flex grid grid-rows-[0.5fr_1fr]\">\r\n                <TopButtons\r\n                  isPlanned={isPlanned}\r\n                  setIsPlanned={setIsPlanned}\r\n                  Group={Group}\r\n                  setGroup={setGroup}\r\n                  Offline={Offline}\r\n                  setOffline={setOffline}\r\n                />\r\n                {/* 제목, 프로필, 관심사 선택 영역 */}\r\n                <TitleAndSelectInterest\r\n                  selectInterest={selectInterest}\r\n                  selectedInterest={selectedInterest}\r\n                  setSelectedInterest={setSelectedInterest}\r\n                  title={title}\r\n                  setTitle={setTitle}\r\n                  userInfo={userInfo}\r\n                />\r\n              </div>\r\n              {/* 중간 영역 */}\r\n              {/* 일차 추가 버튼 */}\r\n              <div className=\"grid grid-rows-[1fr_10fr]\">\r\n                <DayList\r\n                  days={days}\r\n                  setDays={setDays}\r\n                  registeredItems={registeredItems}\r\n                  setRegisteredItems={setRegisteredItems}\r\n                />\r\n              </div>\r\n              {/* 하단 영역 */}\r\n              <div className=\"flex items-center\">\r\n                <TagManager\r\n                  tags={tags}\r\n                  setTags={setTags}\r\n                  showInput={showInput}\r\n                  setShowInput={setShowInput}\r\n                  currentTag={currentTag}\r\n                  setCurrentTag={setCurrentTag}\r\n                  editingIndex={editingIndex}\r\n                  setEditingIndex={setEditingIndex}\r\n                  editingTag={editingTag}\r\n                  setEditingTag={setEditingTag}\r\n                  handleAddTag={handleAddTag}\r\n                  handleEditTag={handleEditTag}\r\n                  handleDeleteTag={handleDeleteTag}\r\n                  handleKeyPress={handleKeyPress}\r\n                  title={title}\r\n                  setTitle={setTitle}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* 오른쪽 영역 */}\r\n            <div className=\"border-l flex flex-col h-full\">\r\n              {isPlanned ? (\r\n                // 계획형: 40% (마감날짜/만날장소/예산/실행기간) + 50% (글작성) + 10% (등록하기)\r\n                <>\r\n                  <div className=\"h-[40%] flex items-center justify-center\">\r\n                    <IsPlanned\r\n                      setEndDate={setEndDate}\r\n                      setMeetPlace={setMeetPlace}\r\n                      setBudget={setBudget}\r\n                      setPeriodStartDate={setPeriodStartDate}\r\n                      setPeriodEndDate={setPeriodEndDate}\r\n                    />\r\n                  </div>\r\n                  <div className=\"h-[50%] flex items-center justify-center\">\r\n                    <textarea\r\n                      className=\"w-full h-full border rounded m-4 p-4 resize-none\"\r\n                      placeholder=\"소개 글을 자유롭게 입력하세요\"\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"h-[10%] flex justify-end items-center\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      등록하기\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                // 자유형: 90% (글작성) + 10% (등록하기)\r\n                <>\r\n                  <div className=\"h-[90%] flex items-center justify-center\">\r\n                    <textarea\r\n                      className=\"w-full h-full border rounded p-2 resize-none\"\r\n                      placeholder=\"소개 글을 자유롭게 입력하세요\"\r\n                      value={text}\r\n                      onChange={(e) => setText(e.target.value)}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"h-[10%] flex justify-end items-center\">\r\n                    <button\r\n                      className=\"bg-blue-500 text-white h-10 mr-8 px-3 rounded-xl\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      등록하기\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {/* </div> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}