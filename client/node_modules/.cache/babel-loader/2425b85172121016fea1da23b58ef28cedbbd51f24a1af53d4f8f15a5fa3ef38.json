{"ast":null,"code":"// client/src/componant/community/ui/profileModal.js\nimport{useNavigate}from\"react-router-dom\";import{useState,useRef,useEffect}from\"react\";import{CommunityButtons}from\"./button\";// 프로필 클릭시 나타나는 모달\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function ProfileModal(props){const{clickedProfile,setClickedProfile,MemberKey,blockedList=[],friendList=[],chattingList=[],profile_image,setActionList,requestComponent,userID}=props;const navigate=useNavigate();const[checkedAction,setCheckedAction]=useState({});// 모달 닫기 함수\nconst handleClicked=()=>{setClickedProfile(prev=>{const updateClickedMember={...prev};updateClickedMember[MemberKey]=false;return updateClickedMember;});};// 이미 친구인지 확인하는 변수\nconst isFriend=friendList.some(member=>member.friend_id===MemberKey);// 친구리스트 차단리스트 구분 변수\nconst isChecked=blockedList.some(member=>member.friend_id===MemberKey)?\"해제\"// 이미 추가된 사용자면 차단버튼으로 설정\n:isFriend?\"차단\":\"친구추가\";// 프로필 이름 설정\nconst profile={\"차단\":friendList.filter(member=>member.friend_id===MemberKey),\"해제\":blockedList.filter(member=>member.friend_id===MemberKey),\"친구추가\":chattingList.filter(member=>member.friend_id===MemberKey)};// 설정된 프로필 이름 변수\nconst selectedProfile=profile[isChecked][0];const profileName=selectedProfile?selectedProfile.name:chattingList[0].name;const friend_id=selectedProfile?selectedProfile.friend_id:chattingList[0].friend_id;// 프로필 옵션 관리 변수\nconst profileOptions=[{option:\"정보보기\",img:\"images/검색.png\"},{option:isChecked,img:`images/${isChecked}.png`}];// 포로필 옵션동작 함수\nconst optionHandlers={\"정보보기\":()=>{console.log(\"정보보기 동작\");navigate(`/profile?username=${profileName}&userID=${friend_id}`);},\"친구추가\":()=>{console.log(\"친구추가 동작\");handleChangeFunc();},\"해제\":()=>{console.log(\"차단해제 동작\");handleChangeFunc();},\"차단\":()=>{console.log(\"차단 동작\");handleChangeFunc();}};// 클릭한 버튼에 따라 동작하는 함수\nconst handleChangeFunc=()=>{setCheckedAction(prev=>({...prev,[MemberKey]:true}));};const handleMoveProfile=direction=>{const currentList=chattingList.length!==0?[...chattingList]:[...blockedList,...friendList];const memberIds=currentList.map(member=>member.friend_id);const currentIndex=memberIds.indexOf(MemberKey);if(currentIndex===-1||memberIds.length===0)return;let newIndex;if(direction===\"next\"){newIndex=(currentIndex+1)%memberIds.length;// 다음 → 끝이면 0번으로\n}else{newIndex=(currentIndex-1+memberIds.length)%memberIds.length;// 이전 → 0번이면 마지막으로\n}const newMemberKey=memberIds[newIndex];setClickedProfile(prev=>{const updated=Object.fromEntries(Object.keys(prev).map(key=>[key,false]));updated[newMemberKey]=true;return updated;});};const currentRef=useRef(null);// 프로필 클릭 시 랜더링\nif(!clickedProfile[MemberKey]){return null;};console.log(clickedProfile);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{ref:currentRef,id:MemberKey,onClick:()=>{handleClicked();},className:`flex justify-center items-center bg-black bg-opacity-50 text-black z-50 fixed w-screen h-screen left-0 top-0`,children:/*#__PURE__*/_jsxs(\"div\",{onClick:e=>{e.stopPropagation();},className:`flex flex-col bg-white justify-center items-center w-[600px] h-[800px] rounded-xl`,children:[/*#__PURE__*/_jsx(\"div\",{className:`flex w-full justify-end h-[50px]`,children:/*#__PURE__*/_jsx(\"img\",{alt:\"\\uB2EB\\uAE30\",src:\"images/\\uB2EB\\uAE30.png\",className:`h-[30px] w-[30px] mx-4 mt-4 opacity-50 hover:opacity-100 transition-opacity duration-300`,onClick:handleClicked})}),/*#__PURE__*/_jsxs(\"div\",{className:`flex flex-col justify-center items-center h-[630px] w-full`,children:[/*#__PURE__*/_jsx(\"img\",{alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",src:profile_image,className:`w-[400px] h-[400px] rounded-[50%]`}),/*#__PURE__*/_jsx(\"p\",{className:`text-[2.2rem]`,children:profileName!==undefined?profileName:null})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flex justify-around border-t-[2px] border-gray-200 h-[120px] w-full`,children:[profileOptions.map((options,index)=>{var _ref,_chattingList$;if(userID===MemberKey&&index===1&&options.option===\"친구추가\"){// 로그인한 유저가 친구추가를 할 수 없도록 설정1\nreturn null;}if(((_ref=userID===((_chattingList$=chattingList[0])===null||_chattingList$===void 0?void 0:_chattingList$.friend_id))!==null&&_ref!==void 0?_ref:0)&&options.option===\"차단\"){// 로그인한 유저가 차단을 할 수 없도록 설정2\nreturn null;}return/*#__PURE__*/_jsxs(\"div\",{onClick:()=>{optionHandlers[options.option]();},className:`flex flex-col justify-center items-center w-[100px] hover:bg-gray-200 transition-colors duration-200`,children:[/*#__PURE__*/_jsx(\"img\",{alt:`${options.option}`,src:`${options.img}`,className:`w-[50px] h-45px`}),/*#__PURE__*/_jsx(\"p\",{children:options.option})]},index);}),requestComponent!==\"conversation\"&&requestComponent!==\"myProfile\"&&requestComponent!==\"home\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMoveProfile(\"prev\"),className:\"absolute left-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\",children:\"\\u25C0\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMoveProfile(\"next\"),className:\"absolute right-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\",children:\"\\u25B6\"})]}),/*#__PURE__*/_jsx(CommunityButtons,{checkedAction:checkedAction,setCheckedAction:setCheckedAction,title:`${isChecked}`,message:`${profileName!==undefined?profileName:null}님을 ${isChecked} 하시겠습니까?`,action:`${isChecked}`,index:MemberKey,userID:friend_id,setActionList:setActionList})]})]})},MemberKey)});}","map":{"version":3,"names":["useNavigate","useState","useRef","useEffect","CommunityButtons","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileModal","props","clickedProfile","setClickedProfile","MemberKey","blockedList","friendList","chattingList","profile_image","setActionList","requestComponent","userID","navigate","checkedAction","setCheckedAction","handleClicked","prev","updateClickedMember","isFriend","some","member","friend_id","isChecked","profile","filter","selectedProfile","profileName","name","profileOptions","option","img","optionHandlers","정보보기","console","log","친구추가","handleChangeFunc","해제","차단","handleMoveProfile","direction","currentList","length","memberIds","map","currentIndex","indexOf","newIndex","newMemberKey","updated","Object","fromEntries","keys","key","currentRef","children","ref","id","onClick","className","e","stopPropagation","alt","src","undefined","options","index","_ref","_chattingList$","title","message","action"],"sources":["C:/git/project/client/src/componant/community/ui/profileModal.js"],"sourcesContent":["// client/src/componant/community/ui/profileModal.js\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {useState,useRef,useEffect} from \"react\";\r\nimport { CommunityButtons } from \"./button\";\r\n\r\n\r\n\r\n// 프로필 클릭시 나타나는 모달\r\nexport default function ProfileModal(props) {\r\n\r\n    const { \r\n        clickedProfile, \r\n        setClickedProfile, \r\n        MemberKey, \r\n        blockedList =[], \r\n        friendList =[],\r\n        chattingList =[], \r\n        profile_image,\r\n        setActionList,\r\n        requestComponent,\r\n        userID\r\n    } = props;\r\n    const navigate = useNavigate();\r\n\r\n    const [checkedAction, setCheckedAction] = useState({});\r\n\r\n    // 모달 닫기 함수\r\n    const handleClicked = ()=>{\r\n        setClickedProfile(prev => {\r\n            const updateClickedMember = {...prev};\r\n            updateClickedMember[MemberKey] = false;\r\n            return updateClickedMember;\r\n        })\r\n    }\r\n    \r\n    // 이미 친구인지 확인하는 변수\r\n    const isFriend = friendList.some(member => member.friend_id === MemberKey );\r\n\r\n    // 친구리스트 차단리스트 구분 변수\r\n    const isChecked = blockedList.some(member => member.friend_id === MemberKey) \r\n    ? \"해제\" \r\n    // 이미 추가된 사용자면 차단버튼으로 설정\r\n    : isFriend ? \"차단\" : \"친구추가\";\r\n\r\n    // 프로필 이름 설정\r\n    const profile = {\r\n        \"차단\": friendList.filter(member => member.friend_id === MemberKey),\r\n        \"해제\": blockedList.filter(member => member.friend_id === MemberKey),\r\n        \"친구추가\" : chattingList.filter(member => member.friend_id === MemberKey)\r\n    };\r\n\r\n    // 설정된 프로필 이름 변수\r\n    const selectedProfile = profile[isChecked][0];\r\n    const profileName = selectedProfile? selectedProfile.name : chattingList[0].name;\r\n    const friend_id = selectedProfile? selectedProfile.friend_id : chattingList[0].friend_id;\r\n    \r\n    // 프로필 옵션 관리 변수\r\n    const profileOptions = [\r\n        {option: \"정보보기\", img: \"images/검색.png\"},\r\n        {option: isChecked, img: `images/${isChecked}.png`},\r\n    ]\r\n    // 포로필 옵션동작 함수\r\n    const optionHandlers = {\r\n        \"정보보기\": ()=>{console.log(\"정보보기 동작\");\r\n            navigate(`/profile?username=${profileName}&userID=${friend_id}`);\r\n        },\r\n        \"친구추가\": ()=>{console.log(\"친구추가 동작\");\r\n            handleChangeFunc();\r\n        },\r\n        \"해제\": ()=>{console.log(\"차단해제 동작\");\r\n            handleChangeFunc();\r\n        },\r\n        \"차단\": ()=>{console.log(\"차단 동작\");\r\n            handleChangeFunc();\r\n        }\r\n    }\r\n\r\n\r\n    // 클릭한 버튼에 따라 동작하는 함수\r\n    const handleChangeFunc = ()=>{\r\n        setCheckedAction(prev => ({...prev, [MemberKey]: true}));\r\n    }\r\n\r\n    const handleMoveProfile = (direction) => {\r\n    const currentList = chattingList.length !== 0 ? [...chattingList] : [...blockedList, ...friendList];\r\n    const memberIds = currentList.map(member => member.friend_id);\r\n    const currentIndex = memberIds.indexOf(MemberKey);\r\n\r\n\r\n    if (currentIndex === -1 || memberIds.length === 0) return;\r\n\r\n    let newIndex;\r\n    if (direction === \"next\") {\r\n        newIndex = (currentIndex + 1) % memberIds.length;  // 다음 → 끝이면 0번으로\r\n    } else {\r\n        newIndex = (currentIndex - 1 + memberIds.length) % memberIds.length; // 이전 → 0번이면 마지막으로\r\n    }\r\n\r\n    const newMemberKey = memberIds[newIndex];\r\n\r\n    setClickedProfile(prev => {\r\n        const updated = Object.fromEntries(\r\n            Object.keys(prev).map(key => [key, false])\r\n        );\r\n        updated[newMemberKey] = true;\r\n        return updated;\r\n    });\r\n};\r\n\r\n    const currentRef = useRef(null);\r\n\r\n\r\n    // 프로필 클릭 시 랜더링\r\n    if (!clickedProfile[MemberKey]) { return null };\r\n    console.log(clickedProfile);\r\n    return (\r\n        <>\r\n            {/* 프로필 모달 전체영역 */}\r\n            <div\r\n                ref={currentRef}\r\n                id={MemberKey}\r\n                onClick={()=>{handleClicked();}}\r\n                key={MemberKey} className={`flex justify-center items-center bg-black bg-opacity-50 text-black z-50 fixed w-screen h-screen left-0 top-0`}>\r\n                {/* 프로필 모달 요소영역 */}\r\n                <div onClick={(e)=>{e.stopPropagation()}} className={`flex flex-col bg-white justify-center items-center w-[600px] h-[800px] rounded-xl`}>\r\n                    {/* 프로필 닫기 영역 */}\r\n                    <div className={`flex w-full justify-end h-[50px]`}>\r\n                        <img \r\n                        alt=\"닫기\"\r\n                        src=\"images/닫기.png\" \r\n                        className={`h-[30px] w-[30px] mx-4 mt-4 opacity-50 hover:opacity-100 transition-opacity duration-300`}\r\n                        onClick={handleClicked}\r\n                        ></img>\r\n\r\n                    </div>\r\n                    {/* 프로필 정보영역 */}\r\n                    <div className={`flex flex-col justify-center items-center h-[630px] w-full`}>\r\n                        {/* 프로필 이미지 */}\r\n                        <img alt=\"미니프로필\" src={profile_image} className={`w-[400px] h-[400px] rounded-[50%]`}></img>\r\n                        {/* 프로필 이름 */}\r\n                        <p className={`text-[2.2rem]`}>{profileName !== undefined ? profileName : null}</p>\r\n                    </div>\r\n                    {/* 프로필 옵션영역 */}\r\n                    <div className={`flex justify-around border-t-[2px] border-gray-200 h-[120px] w-full`}>\r\n                        {/* 프로필 옵션 변수를 순회하는 함수 */}\r\n                        {profileOptions.map((options,index)=>{\r\n\r\n                            if(userID === MemberKey && index === 1 && options.option === \"친구추가\"){\r\n                                // 로그인한 유저가 친구추가를 할 수 없도록 설정1\r\n                                return null;\r\n                            }\r\n                            if((userID === chattingList[0]?.friend_id?? 0) && options.option === \"차단\"){\r\n                                // 로그인한 유저가 차단을 할 수 없도록 설정2\r\n                                return null;\r\n                            }\r\n                            return(\r\n                                <div \r\n                                onClick={()=> {optionHandlers[options.option]()}}\r\n                                key={index} className={`flex flex-col justify-center items-center w-[100px] hover:bg-gray-200 transition-colors duration-200`}>\r\n                                <img alt={`${options.option}`} src={`${options.img}`} className={`w-[50px] h-45px`}></img>\r\n                                <p>{options.option}</p>\r\n                            </div>\r\n                            )\r\n                        })}\r\n\r\n                        {/* 대화창에서 누르면 버튼 비활성화 */}\r\n                        {requestComponent !== \"conversation\" && requestComponent !== \"myProfile\" && requestComponent !== \"home\" &&\r\n                        <>\r\n                            {/* 왼쪽 이동 버튼 */}\r\n                            <button\r\n                            onClick={() => handleMoveProfile(\"prev\")}\r\n                            className=\"absolute left-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\"\r\n                            >\r\n                            ◀\r\n                            </button>\r\n\r\n                            {/* 오른쪽 이동 버튼 */}\r\n                            <button\r\n                            onClick={() => handleMoveProfile(\"next\")}\r\n                            className=\"absolute right-[20%] top-1/2 transform -translate-y-1/2 text-3xl bg-white rounded-full px-4 py-2 shadow opacity-50 hover:opacity-100 duration-300\"\r\n                            >\r\n                            ▶\r\n                            </button>\r\n                            \r\n                        </>\r\n                        }\r\n                        {/* 버튼클릭 시 확인메세지 모달 */}\r\n                        {<CommunityButtons\r\n                        checkedAction = {checkedAction}\r\n                        setCheckedAction = {setCheckedAction}\r\n                        title = {`${isChecked}`}\r\n                        message = {`${profileName !== undefined ? profileName : null}님을 ${isChecked} 하시겠습니까?`}\r\n                        action = {`${isChecked}`}\r\n                        index = {MemberKey}\r\n                        userID = {friend_id}\r\n                        setActionList = {setActionList}\r\n                        />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}