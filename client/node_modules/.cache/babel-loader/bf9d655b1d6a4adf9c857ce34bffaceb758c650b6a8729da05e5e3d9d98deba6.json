{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\project\\\\client\\\\src\\\\componant\\\\content\\\\ui\\\\searchModal.js\",\n  _s = $RefreshSig$();\n//client/src/componant/content/ui/searchModal.js\nimport { useSearchParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchModal = ({\n  setSearchUser,\n  setSearchValues,\n  searchModalValues,\n  searchValues\n}) => {\n  _s();\n  const visibleModal = searchValues ? \"block\" : \"hidden\";\n  const [searchParams, setSearchParams] = useSearchParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${visibleModal} absolute ml-20 top-[65%] bg-white min-w-[330px] max-h-[180px] border-[1px] border-gray-200 shadow-lg z-20 rounded-md overflow-y-scroll cursor-pointer`,\n      children: searchModalValues.map((info, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-value\": `${info.username}`,\n        onClick: () => {\n          // 현재의 파라미터에 저장된 값을 가져옴\n          const userID = searchParams.get(\"userID\");\n          // 검색할 값과 파라미터가 동일하면 아무일도 일어나지 않음\n          if (userID !== info.userID) {\n            searchParams.set(\"username\", info.name);\n            searchParams.set(\"userID\", info.userID);\n            setSearchParams(searchParams);\n          }\n          setSearchUser(info.userID);\n          setSearchValues(\"\");\n        },\n        className: `flex items-center h-[60px] pl-2 hover:bg-gray-200`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: `w-[40px] h-[40px] rounded-[50%] pointer-events-none`,\n          src: `${info.profile_image}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `pl-2 pointer-events-none`,\n          children: [info.name, \"(\", info.username, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, `searchModal${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SearchModal, \"/eCs5CB4FLGAVLeprHBYLwBGf/Q=\", false, function () {\n  return [useSearchParams];\n});\n_c = SearchModal;\nvar _c;\n$RefreshReg$(_c, \"SearchModal\");","map":{"version":3,"names":["useSearchParams","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchModal","setSearchUser","setSearchValues","searchModalValues","searchValues","_s","visibleModal","searchParams","setSearchParams","children","className","map","info","idx","username","onClick","userID","get","set","name","src","profile_image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/git/project/client/src/componant/content/ui/searchModal.js"],"sourcesContent":["//client/src/componant/content/ui/searchModal.js\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const SearchModal = ({setSearchUser,setSearchValues,searchModalValues,searchValues}) => {\r\n    const visibleModal = searchValues ? \"block\" : \"hidden\";\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    return (\r\n        <>\r\n            <div className={`${visibleModal} absolute ml-20 top-[65%] bg-white min-w-[330px] max-h-[180px] border-[1px] border-gray-200 shadow-lg z-20 rounded-md overflow-y-scroll cursor-pointer`}>\r\n                {searchModalValues.map((info,idx)=>(\r\n                    <div\r\n                        key={`searchModal${idx}`}\r\n                        data-value={`${info.username}`} \r\n                        onClick={() => {\r\n                            // 현재의 파라미터에 저장된 값을 가져옴\r\n                            const userID = searchParams.get(\"userID\");\r\n                            // 검색할 값과 파라미터가 동일하면 아무일도 일어나지 않음\r\n                            if(userID !== info.userID){\r\n                                searchParams.set(\"username\",info.name); \r\n                                searchParams.set(\"userID\",info.userID);\r\n                                setSearchParams(searchParams);\r\n                            }\r\n                            setSearchUser(info.userID);\r\n                            setSearchValues(\"\");\r\n                        }}\r\n                        className={`flex items-center h-[60px] pl-2 hover:bg-gray-200`}>\r\n                        <img className={`w-[40px] h-[40px] rounded-[50%] pointer-events-none`} src={`${info.profile_image}`}/>\r\n                        <span className={`pl-2 pointer-events-none`}>{info.name}({info.username})</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,OAAO,MAAMC,WAAW,GAAGA,CAAC;EAACC,aAAa;EAACC,eAAe;EAACC,iBAAiB;EAACC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3F,MAAMC,YAAY,GAAGF,YAAY,GAAG,OAAO,GAAG,QAAQ;EACtD,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGb,eAAe,CAAC,CAAC;EACzD,oBACIE,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACIZ,OAAA;MAAKa,SAAS,EAAE,GAAGJ,YAAY,wJAAyJ;MAAAG,QAAA,EACnLN,iBAAiB,CAACQ,GAAG,CAAC,CAACC,IAAI,EAACC,GAAG,kBAC5BhB,OAAA;QAEI,cAAY,GAAGe,IAAI,CAACE,QAAQ,EAAG;QAC/BC,OAAO,EAAEA,CAAA,KAAM;UACX;UACA,MAAMC,MAAM,GAAGT,YAAY,CAACU,GAAG,CAAC,QAAQ,CAAC;UACzC;UACA,IAAGD,MAAM,KAAKJ,IAAI,CAACI,MAAM,EAAC;YACtBT,YAAY,CAACW,GAAG,CAAC,UAAU,EAACN,IAAI,CAACO,IAAI,CAAC;YACtCZ,YAAY,CAACW,GAAG,CAAC,QAAQ,EAACN,IAAI,CAACI,MAAM,CAAC;YACtCR,eAAe,CAACD,YAAY,CAAC;UACjC;UACAN,aAAa,CAACW,IAAI,CAACI,MAAM,CAAC;UAC1Bd,eAAe,CAAC,EAAE,CAAC;QACvB,CAAE;QACFQ,SAAS,EAAE,mDAAoD;QAAAD,QAAA,gBAC/DZ,OAAA;UAAKa,SAAS,EAAE,qDAAsD;UAACU,GAAG,EAAE,GAAGR,IAAI,CAACS,aAAa;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACtG5B,OAAA;UAAMa,SAAS,EAAE,0BAA2B;UAAAD,QAAA,GAAEG,IAAI,CAACO,IAAI,EAAC,GAAC,EAACP,IAAI,CAACE,QAAQ,EAAC,GAAC;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAhB3E,cAAcZ,GAAG,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBvB,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACR,CAAC;AAEX,CAAC;AAAApB,EAAA,CA9BYL,WAAW;EAAA,QAEoBL,eAAe;AAAA;AAAA+B,EAAA,GAF9C1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}