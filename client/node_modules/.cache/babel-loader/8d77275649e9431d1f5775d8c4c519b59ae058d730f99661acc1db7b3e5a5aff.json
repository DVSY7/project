{"ast":null,"code":"//client/src/componant/community/api/actionList.js\nimport axios from \"axios\";\nexport const actionList = async (actionType, userID) => {\n  //요청한 동작\n  const Action = {\n    \"AddBlocked\": \"blocked\",\n    \"RemoveBlocked\": \"accepted\"\n  };\n  try {\n    const response = await axios.post(`http://localhost:5000/api/${actionType}`, {\n      // 요청받은 유저 ID\n      requestID: userID,\n      // 요청받은 값\n      requestValue: Action[actionType]\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Action 반영 실패:\", error, {\n      userID: userID\n    });\n    return null;\n  }\n};","map":{"version":3,"names":["axios","actionList","actionType","userID","Action","response","post","requestID","requestValue","data","error","console"],"sources":["C:/git/project/client/src/componant/community/api/actionListAPI.js"],"sourcesContent":["//client/src/componant/community/api/actionList.js\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const actionList = async (actionType, userID)=>{\r\n    //요청한 동작\r\n    const Action = {\r\n        \"AddBlocked\" : \"blocked\",\r\n        \"RemoveBlocked\" : \"accepted\"\r\n    }\r\n\r\n    try{\r\n        const response = await axios.post(`http://localhost:5000/api/${actionType}`,{\r\n            // 요청받은 유저 ID\r\n            requestID : userID,\r\n            // 요청받은 값\r\n            requestValue : Action[actionType],\r\n        })\r\n        return response.data;\r\n    }catch(error){\r\n        console.error(\"Action 반영 실패:\", error, {userID : userID});\r\n        return null;\r\n    }\r\n}"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,UAAU,EAAEC,MAAM,KAAG;EAClD;EACA,MAAMC,MAAM,GAAG;IACX,YAAY,EAAG,SAAS;IACxB,eAAe,EAAG;EACtB,CAAC;EAED,IAAG;IACC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,6BAA6BJ,UAAU,EAAE,EAAC;MACxE;MACAK,SAAS,EAAGJ,MAAM;MAClB;MACAK,YAAY,EAAGJ,MAAM,CAACF,UAAU;IACpC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACI,IAAI;EACxB,CAAC,QAAMC,KAAK,EAAC;IACTC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,EAAE;MAACP,MAAM,EAAGA;IAAM,CAAC,CAAC;IACxD,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}