{"ast":null,"code":"//src/componant/content/utilities/galleryHover.js\nimport{useState,useEffect}from\"react\";import{fetchLikes,likesHandler}from\"../api/likes\";import{updateViews}from\"../api/views\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function GalleryHover(props){const{title,date,likes,isliked,views,profile_image,location,clickedGallery,setClickedGallery,index}=props;// 갤러리 데이터를 가져오기 위한 props\nconst{id,galleryID,userID,setGalleryImage,fetchGalleryImage,name}=props;// 프로필 모달을 띄우기 위한 props\nconst{username,setClickedProfile}=props;// 갤러리 데이터를 갤러리 뷰에 전달하기위한 props\nconst{setGalleryInfo}=props;// 공개 / 비공개 설정  상태관리 스테이트\nconst[clicked,setClicked]=useState(true);// 좋아요 토글 관리 스테이트\nconst[clickedLike,setClickedLike]=useState(isliked[index]);// 좋아요 수 증가 스테이트\nconst[likeCounts,setLikeCounts]=useState(likes);// 위치표시 상태관리\nconst[clickedLocation,setClickedLocation]=useState(false);// 조회수 증가 스테이트\nconst[currentViews,setCurrentViews]=useState(views);const dateOnly=new Date(date).toISOString().split('T')[0];// 날짜를 YYYY-MM-DD 형식으로 변환\n// 도구를 관리하기 위한 객체\nconst tools={type:['휴지통','연필','위치'],func:{'delete':()=>{console.log(\"isDelete\");},'update':()=>{console.log(\"isUpdate\");},'local':()=>{setClickedLocation(prev=>!prev);}}};// 조회수, 좋아요 관리를 위한 객체\nconst engagementManager={func:{// 좋아요 로직\n\"좋아요\":async()=>{if(userID!==0){setClickedLike(prev=>!prev);// 좋아요 취소처리\nif(clickedLike){// 데이터베이스에 좋아요 반영\nawait likesHandler(\"decrease\",galleryID,userID);}else if(!clickedLike){// 데이터베이스에 좋아요 반영\nawait likesHandler(\"increase\",galleryID,userID);}// 현재 UI에 좋아요 수 반영\nconst updatedLikes=await fetchLikes(galleryID);setLikeCounts(updatedLikes);}},// 조회수 로직\n\"조회\":async()=>{console.log(\"조회수 동작\");const koreaTimeStr=new Date().toLocaleString(\"sv-SE\",{timeZone:\"Asia/Seoul\"});const toDayDate=koreaTimeStr.split(\" \")[0];console.log(`한국 시간: ${toDayDate}`);if(userID!==0){const resViews=await updateViews(galleryID,userID,toDayDate);setCurrentViews(resViews);}}}};// 검색조건 입력 시 좋아요 토글 최신상태로 반영\nuseEffect(()=>{setClickedLike(isliked[index]);},[isliked,index]);// 조회수, 좋아요, 갤러리 클릭 변화 시 데이터 반영\nuseEffect(()=>{setGalleryInfo(prev=>{const copy=[...prev];copy[index]={profile_image,views:currentViews,likes:likeCounts,clickedLike,func:engagementManager.func[\"좋아요\"]};return copy;});console.log({likes,views});},[currentViews,likeCounts,clickedGallery]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:`flex flex-col h-[25%]`,children:[/*#__PURE__*/_jsxs(\"div\",{className:`flex justify-between items-center font-sans mt-2 `,children:[/*#__PURE__*/_jsx(\"div\",{className:`text-[1rem] ml-4`,children:dateOnly}),username===name&&/*#__PURE__*/_jsx(\"div\",{className:`w-[40px] h-[13px] bg-gray-50 rounded-2xl mr-4 `,children:/*#__PURE__*/_jsx(\"div\",{onClick:()=>setClicked(clicked?false:true),className:`${clicked?\"translate-x-[63%] clicked-before\":\"\"} translate-y-[-50%] transition-transform duration-500 w-full h-full galleryhover-before`})})]}),/*#__PURE__*/_jsxs(\"div\",{className:`flex justify-between `,children:[/*#__PURE__*/_jsx(\"div\",{className:`flex ml-4 mt-1`,children:tools.type.map((type,index)=>{const keys=Object.keys(tools.func);const funcKey=keys[index];// tools 객체에서 해당하는 key의 함수를 가져옴\nconst handleClick=tools.func[funcKey];return/*#__PURE__*/_jsx(\"img\",{onClick:()=>{// 도구 클릭 시 실행되는 함수\nhandleClick();},alt:`${type}`,className:`w-[20px] h-[20px] mr-3`,src:`/images/${type}.png`},index);})}),username===name&&/*#__PURE__*/_jsx(\"div\",{className:`mr-4 text-[0.75rem]`,children:clicked?\"공개\":\"비공개\"})]}),clickedLocation&&/*#__PURE__*/_jsx(\"div\",{className:`ml-5 pr-5 pt-2 font-sans  `,children:location!==null&&location!==void 0?location:\"위치정보가 없습니다.\"})]}),/*#__PURE__*/_jsx(\"div\",{\"data-key\":index,\"data-value\":\"조회\"// 갤러리 클릭 이벤트\n,onClick:async e=>{setClickedGallery(index);const imageData=await fetchGalleryImage(galleryID);setGalleryImage(imageData);return engagementManager.func[e.target.dataset.value]();},className:` flex justify-center items-center w-full h-[50%] text-[1.5rem] px-4 cursor-pointer`,children:/*#__PURE__*/_jsx(\"div\",{className:`pointer-events-none`,children:title})}),/*#__PURE__*/_jsxs(\"div\",{className:` h-[25%] w-full flex justify-between items-end pb-2`,children:[/*#__PURE__*/_jsx(\"div\",{className:`w-[42px] h-[42px] ml-3 mb-1`,children:/*#__PURE__*/_jsx(\"img\",{className:`w-[42px] h-[42px] rounded-[50%] cursor-pointer`,onClick:()=>{setClickedProfile(prev=>{console.log(prev);return{...prev,[galleryID]:true};});},alt:\"\\uBBF8\\uB2C8\\uD504\\uB85C\\uD544\",src:`${profile_image}`})}),/*#__PURE__*/_jsxs(\"div\",{className:`flex mx-4 font-sans`,children:[/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(\"img\",{alt:\"\\uB208\",src:\"/images/\\uB208.png\",className:`w-[20px] h-[20px] mr-2`})}),/*#__PURE__*/_jsx(\"span\",{className:`mr-2 text-[0.75rem]`,children:currentViews}),/*#__PURE__*/_jsx(\"span\",{className:`flex justify-center items-center mr-2`,children:/*#__PURE__*/_jsx(\"img\",{// 좋아요 수 증가처리\nonClick:async e=>{// 현재 UI에 좋아요 수를 반영\nconst updatedLikes=await fetchLikes(galleryID);setLikeCounts(updatedLikes);return engagementManager.func[e.target.dataset.value]();},\"data-value\":\"\\uC88B\\uC544\\uC694\",alt:\"\\uD558\\uD2B8\",src:`/images/${clickedLike?\"하트1\":\"하트2\"}.png`,className:`w-[15px] h-[15px] cursor-pointer`})}),/*#__PURE__*/_jsx(\"span\",{className:`text-[0.75rem]`,children:likeCounts})]})]})]});}","map":{"version":3,"names":["useState","useEffect","fetchLikes","likesHandler","updateViews","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","GalleryHover","props","title","date","likes","isliked","views","profile_image","location","clickedGallery","setClickedGallery","index","id","galleryID","userID","setGalleryImage","fetchGalleryImage","name","username","setClickedProfile","setGalleryInfo","clicked","setClicked","clickedLike","setClickedLike","likeCounts","setLikeCounts","clickedLocation","setClickedLocation","currentViews","setCurrentViews","dateOnly","Date","toISOString","split","tools","type","func","delete","console","log","update","local","prev","engagementManager","좋아요","updatedLikes","조회","koreaTimeStr","toLocaleString","timeZone","toDayDate","resViews","copy","children","className","onClick","map","keys","Object","funcKey","handleClick","alt","src","e","imageData","target","dataset","value"],"sources":["C:/git/project/client/src/componant/content/ui/galleryHover.js"],"sourcesContent":["//src/componant/content/utilities/galleryHover.js\r\n\r\nimport { useState,useEffect } from \"react\";\r\nimport { fetchLikes, likesHandler } from \"../api/likes\";\r\nimport { updateViews } from \"../api/views\";\r\n\r\nexport default function GalleryHover(props) {    \r\n    const {title,date,likes,isliked,views,profile_image, location,clickedGallery, setClickedGallery, index} = props;\r\n\r\n    // 갤러리 데이터를 가져오기 위한 props\r\n    const {id,galleryID,userID, setGalleryImage, fetchGalleryImage, name} = props;\r\n\r\n    // 프로필 모달을 띄우기 위한 props\r\n    const {username, setClickedProfile} = props;\r\n\r\n    // 갤러리 데이터를 갤러리 뷰에 전달하기위한 props\r\n    const {setGalleryInfo} = props;\r\n\r\n    // 공개 / 비공개 설정  상태관리 스테이트\r\n    const [clicked, setClicked] = useState(true);\r\n    // 좋아요 토글 관리 스테이트\r\n    const [clickedLike, setClickedLike] = useState(isliked[index]);\r\n    // 좋아요 수 증가 스테이트\r\n    const [likeCounts, setLikeCounts] = useState(likes);\r\n    // 위치표시 상태관리\r\n    const [clickedLocation, setClickedLocation] = useState(false);\r\n    // 조회수 증가 스테이트\r\n    const [currentViews, setCurrentViews] = useState(views);\r\n\r\n    const dateOnly =new Date(date).toISOString().split('T')[0]; // 날짜를 YYYY-MM-DD 형식으로 변환\r\n\r\n    // 도구를 관리하기 위한 객체\r\n    const tools = {\r\n        type : ['휴지통','연필','위치'],\r\n        func : {\r\n            'delete': ()=>{console.log(\"isDelete\")},\r\n            'update': ()=>{console.log(\"isUpdate\")},\r\n            'local' : ()=>{setClickedLocation((prev) => !prev);}\r\n        }\r\n    }\r\n\r\n    // 조회수, 좋아요 관리를 위한 객체\r\n    const engagementManager = { \r\n        func: {\r\n            // 좋아요 로직\r\n            \"좋아요\":async ()=>{\r\n                if(userID !== 0){\r\n                    setClickedLike(prev => !prev);\r\n                    // 좋아요 취소처리\r\n                    if(clickedLike){\r\n                        // 데이터베이스에 좋아요 반영\r\n                        await likesHandler(\"decrease\",galleryID,userID);\r\n                    }else if(!clickedLike){\r\n                        // 데이터베이스에 좋아요 반영\r\n                        await likesHandler(\"increase\",galleryID,userID);\r\n                    }\r\n                    // 현재 UI에 좋아요 수 반영\r\n                    const updatedLikes = await fetchLikes(galleryID);\r\n                    setLikeCounts(updatedLikes);\r\n                }\r\n            },\r\n            // 조회수 로직\r\n            \"조회\":async()=>{console.log(\"조회수 동작\")\r\n                const koreaTimeStr = new Date().toLocaleString(\"sv-SE\",{\r\n                    timeZone: \"Asia/Seoul\",\r\n                });\r\n                const toDayDate = koreaTimeStr.split(\" \")[0];\r\n\r\n                console.log(`한국 시간: ${toDayDate}`);\r\n                if(userID !== 0){\r\n                    const resViews = await updateViews(galleryID, userID, toDayDate);\r\n                    setCurrentViews(resViews);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 검색조건 입력 시 좋아요 토글 최신상태로 반영\r\n    useEffect(()=>{\r\n        setClickedLike(isliked[index]);\r\n    }, [isliked, index]);\r\n\r\n    // 조회수, 좋아요, 갤러리 클릭 변화 시 데이터 반영\r\n    useEffect(()=>{\r\n        setGalleryInfo(prev => {\r\n        const copy = [...prev];\r\n        copy[index] = { \r\n            profile_image, \r\n            views: currentViews, \r\n            likes: likeCounts , \r\n            clickedLike, \r\n            func: engagementManager.func[\"좋아요\"]\r\n        };\r\n        return copy;\r\n});\r\n        console.log({likes,views});\r\n    },[currentViews, likeCounts, clickedGallery]);\r\n\r\n    return (\r\n        <> \r\n            {/* 갤러리 호버 헤더 */}\r\n            <div\r\n            className={`flex flex-col h-[25%]`}>\r\n                {/* 날짜와 비공개 설정 영역 */}\r\n                <div className={`flex justify-between items-center font-sans mt-2 `}>\r\n                    {/* 날짜 표기 영역 */}\r\n                    <div className={`text-[1rem] ml-4`}>{dateOnly}</div>\r\n                    {/* 비공개설정 UI 영역 */}\r\n                    {username === name &&\r\n                        <div className={`w-[40px] h-[13px] bg-gray-50 rounded-2xl mr-4 `}><div onClick={() => setClicked(clicked ? false : true)} className={`${clicked ? \"translate-x-[63%] clicked-before\" : \"\"} translate-y-[-50%] transition-transform duration-500 w-full h-full galleryhover-before`}></div></div>\r\n                    }\r\n                </div>\r\n                {/* 도구탭 영역 */}\r\n                <div className={`flex justify-between `}>\r\n                    {/* 도구 이미지 영역 */}\r\n                    <div className={`flex ml-4 mt-1`}>\r\n                        {tools.type.map((type, index) => {\r\n                            const keys = Object.keys(tools.func);\r\n                            const funcKey = keys[index];\r\n                            // tools 객체에서 해당하는 key의 함수를 가져옴\r\n                            const handleClick = tools.func[funcKey];\r\n\r\n                            return (<img\r\n                                key={index} \r\n                                onClick={()=>{\r\n                                    // 도구 클릭 시 실행되는 함수\r\n                                    handleClick();  \r\n                                }} alt={`${type}`} \r\n                                className={`w-[20px] h-[20px] mr-3`} \r\n                                src={`/images/${type}.png`}>\r\n                                </img>\r\n                                )\r\n                        })}\r\n                        \r\n                    </div>\r\n                    {/* 비공개 글자 영역 */}\r\n                    {username === name &&\r\n                        <div className={`mr-4 text-[0.75rem]`}>{clicked ? \"공개\" : \"비공개\"}</div>\r\n                    }\r\n                </div>\r\n                {/* 위치정보 표시영역 */}\r\n                {clickedLocation && \r\n                <div className={`ml-5 pr-5 pt-2 font-sans  `}>{location?? \"위치정보가 없습니다.\"}</div>}\r\n            </div>\r\n\r\n\r\n            {/* 갤러리 호버 컨텐츠 */}\r\n            <div\r\n            data-key={index}\r\n            data-value={\"조회\"}\r\n            // 갤러리 클릭 이벤트\r\n            onClick={async (e) => {\r\n                    setClickedGallery(index); \r\n                    const imageData = await fetchGalleryImage(galleryID);\r\n                    setGalleryImage(imageData);\r\n                    return engagementManager.func[e.target.dataset.value]();\r\n            }} \r\n            className={` flex justify-center items-center w-full h-[50%] text-[1.5rem] px-4 cursor-pointer`}>\r\n                <div className={`pointer-events-none`}>{title}</div>\r\n            </div>\r\n    \r\n\r\n            {/* 갤러리 호버 풋터 */}\r\n            <div className={` h-[25%] w-full flex justify-between items-end pb-2`}>\r\n                {/* 갤러리 프로필 이미지 영역 */}\r\n                <div className={`w-[42px] h-[42px] ml-3 mb-1`}>\r\n                    <img\r\n                    className={`w-[42px] h-[42px] rounded-[50%] cursor-pointer`} \r\n                    onClick={()=>{setClickedProfile((prev) => { console.log(prev); return({...prev,[galleryID]: true})})}}\r\n                    alt=\"미니프로필\" src={`${profile_image}`}></img>\r\n                </div>\r\n               \r\n                {/* 조회수 좋아요 표시 영역 */}\r\n                <div className={`flex mx-4 font-sans`}>\r\n                    {/* 눈 이미지 영역 */}\r\n                    <span>\r\n                        {/* 눈 이미지 요소*/}\r\n                        <img\r\n                        alt=\"눈\" \r\n                        src=\"/images/눈.png\"\r\n                        className={`w-[20px] h-[20px] mr-2`}\r\n                        ></img>\r\n                    </span>\r\n                    {/* 조회수 표시 */}\r\n                    <span className={`mr-2 text-[0.75rem]`}>{currentViews}</span>\r\n                    {/* 하트 이미지 영역 */}\r\n                    <span className={`flex justify-center items-center mr-2`}>\r\n                        {/* 하트 이미지 요소 */}\r\n                        <img\r\n                        // 좋아요 수 증가처리\r\n                        onClick={async (e)=>{\r\n\r\n                            // 현재 UI에 좋아요 수를 반영\r\n                            const updatedLikes = await fetchLikes(galleryID);\r\n                            setLikeCounts(updatedLikes); \r\n\r\n                            return(engagementManager.func[e.target.dataset.value]())\r\n                        }} \r\n                        data-value=\"좋아요\"\r\n                        alt=\"하트\"\r\n                        src={`/images/${clickedLike?\"하트1\":\"하트2\"}.png`}\r\n                        className={`w-[15px] h-[15px] cursor-pointer`}\r\n                        ></img>\r\n                    </span>\r\n                    {/* 좋아요 수 표시 */}\r\n                    <span className={`text-[0.75rem]`}>{likeCounts}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}