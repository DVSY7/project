{"ast":null,"code":"//client/src/componant/community/api/fetchMessageAPI.js\n\nimport axios from 'axios';\nexport const fetchMessageAPI = async (chatroomID, type) => {\n  const response = await axios.get(`http://localhost:5000/api/${type}?chatroom=${chatroomID}`);\n  return response.data;\n};\nexport const fetchMessageReadAPI = async (userID, messageID) => {\n  try {\n    const response = await axios.get(`http://localhost:5000/api/messageRead?userID=${userID}&messageID=${messageID}`);\n    return response.data;\n  } catch (error) {\n    console.error(\"메세지 읽음 요청 실패:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["axios","fetchMessageAPI","chatroomID","type","response","get","data","fetchMessageReadAPI","userID","messageID","error","console"],"sources":["C:/git/project/client/src/componant/community/api/fetchMessageAPI.js"],"sourcesContent":["//client/src/componant/community/api/fetchMessageAPI.js\r\n\r\nimport axios from 'axios';\r\n\r\nexport const fetchMessageAPI = async (chatroomID,type)=>{\r\n    const response = await axios.get(`http://localhost:5000/api/${type}?chatroom=${chatroomID}`);\r\n    return response.data;\r\n}\r\n\r\nexport const fetchMessageReadAPI = async (userID,messageID) =>{\r\n    try{\r\n        const response = await axios.get(`http://localhost:5000/api/messageRead?userID=${userID}&messageID=${messageID}`);\r\n        return response.data;\r\n    }catch(error){\r\n        console.error(\"메세지 읽음 요청 실패:\",error);\r\n        return null;\r\n    }\r\n}\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,UAAU,EAACC,IAAI,KAAG;EACpD,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,6BAA6BF,IAAI,aAAaD,UAAU,EAAE,CAAC;EAC5F,OAAOE,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,MAAM,EAACC,SAAS,KAAI;EAC1D,IAAG;IACC,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,gDAAgDG,MAAM,cAAcC,SAAS,EAAE,CAAC;IACjH,OAAOL,QAAQ,CAACE,IAAI;EACxB,CAAC,QAAMI,KAAK,EAAC;IACTC,OAAO,CAACD,KAAK,CAAC,eAAe,EAACA,KAAK,CAAC;IACpC,OAAO,IAAI;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}